(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    148668,       3831]
NotebookOptionsPosition[    144871,       3781]
NotebookOutlinePosition[    145337,       3798]
CellTagsIndexPosition[    145294,       3795]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", "Title", ":", " ", 
    RowBox[{"TuGamesAux", ".", "m"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Release", " ", 
    RowBox[{"Date", ":", " ", 
     RowBox[{"02.05", ".2023"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Version", ":", " ", 
    RowBox[{"3.1", ".2"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Context", ":", " ", "TuGamesAux`"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Summary", ":", "\t", "\n", "    ", 
    RowBox[{
    "This", " ", "package", " ", "provides", " ", "some", " ", "auxiliary", 
     " ", "functions", " ", "to", " ", "the", " ", "package", " ", 
     RowBox[{"TuGames", ".", "m", "."}]}]}], "\n", "*)"}], "\t\t\t", "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Author", ":", "\t\t", "\n", "    ", 
    RowBox[{
     RowBox[{
     "Holger", " ", "Ingmar", " ", "Meinhardt", "\n", "    ", "Department", 
      " ", "of", " ", "Economics", "\n", "    ", "University", " ", "of", " ",
       "Karlsruhe", " ", 
      RowBox[{"(", "KIT", ")"}], " ", "\n", "    ", "E"}], "-", 
     RowBox[{"Mail", ":", " ", 
      RowBox[{
       RowBox[{"Holger", ".", 
        RowBox[{"Meinhardt", "@", "wiwi"}], ".", "uni"}], "-", 
       RowBox[{"karlsruhe", ".", "de"}]}]}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Package", " ", "Version"}], ":", " ", 
    RowBox[{"3.1", ".2"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", "\n", "   ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Mathematica", " ", "Version"}], ":", " ", 
     RowBox[{"12.", "x"}]}], ",", " ", 
    RowBox[{"13.", "x"}]}], "\n", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", "Sources", ":", "\n", "   ", 
     RowBox[{"Maschler", " ", "JET"}]}], ",", " ", "13", ",", " ", 
    RowBox[{
     RowBox[{"pp", ".", " ", "184"}], "-", "192."}]}], "\n", "\n", "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{":", "Keywords", ":", "\n", " ", 
    RowBox[{
    "Extracting", " ", "the", " ", "coefficient", " ", "from", " ", "a", " ", 
     
     RowBox[{"LP", ".", " ", "Solving"}], " ", "the", " ", "primal", " ", 
     "and", " ", "dual", " ", 
     RowBox[{"problem", "."}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", "History", ":", "\n", "\n", "   ", 
     RowBox[{
     "Version", " ", "1.1", "\n", "    ", "\n", "    ", "The", " ", 
      "following", " ", "functions", " ", "have", " ", "been", " ", 
      RowBox[{"added", ":", "\n", "\n", "     ", 
       RowBox[{"ContestedGarment", "[", "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TalmudicRule", "[", "]"}], ".", "\n", "\n", "   ", "Version"}],
      " ", "1.3", "\n", "    ", "\n", "    ", "The", " ", "following", " ", 
     "functions", " ", "have", " ", "been", " ", 
     RowBox[{"added", ":", "\n", "\n", "      ", 
      RowBox[{"Angle", "[", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"LieBracket", "[", "]"}], "\n", "\n", "   ", "Version", " ", 
     "1.5", "\n", "    ", "\n", "    ", "The", " ", "following", " ", 
     "functions", " ", "have", " ", "been", " ", 
     RowBox[{"added", ":", "\n", " ", "\n", "      ", 
      RowBox[{"AssignmentProblem", "[", "]"}]}]}], ",", 
    RowBox[{"GenProfitMatrix", "[", "]"}], ",", 
    RowBox[{"AdjointMatrix", "[", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"HermitianMatrixQ", "[", "]"}], ".", "\n", "    ", "\n", "    ",
       "Some"}], " ", "code", " ", "adjustment", " ", "and", " ", "clean", 
     " ", 
     RowBox[{"up", ".", "\n", "\n", "   ", "Version"}], " ", "1.6", "\n", 
     "\n", "    ", "The", " ", "following", " ", "functions", " ", "have", 
     " ", "been", " ", 
     RowBox[{"added", ":", "\n", "\n", "    ", 
      RowBox[{"GetCardinalityGame", "[", "]"}]}]}], ",", 
    RowBox[{"SymGameType2", "[", "]"}], ",", 
    RowBox[{"SymGameType3", "[", "]"}], ",", 
    RowBox[{"SymGameType4", "[", "]"}], ",", 
    RowBox[{"SymGameSizeK", "[", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Coal2Dec", "[", "]"}], ".", "\n", "\n", "    ", 
      RowBox[{"HermitianMatrixQ", "[", "]"}]}], "  ", "-", " ", 
     RowBox[{
     "has", " ", "been", " ", "renamed", " ", "due", " ", "to", " ", "a", " ",
       "name", " ", "conflict", " ", "to", " ", 
      RowBox[{
       RowBox[{"IsHermitianMatrixQ", "[", "]"}], ".", " ", "\n", "    ", 
       RowBox[{"ModestBankruptcy", "[", "]"}]}]}], "  ", "-", " ", 
     RowBox[{"has", " ", "changed", " ", "its", " ", "behavior"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "only", " ", "two", " ", "input", " ", "arguments", " ", "are", " ", 
      RowBox[{"allowed", ".", " ", "\n", "    ", 
       RowBox[{"GreedyBankruptcy", "[", "]"}]}]}], "  ", "-", " ", 
     RowBox[{"has", " ", "changed", " ", "its", " ", "behavior"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "only", " ", "two", " ", "input", " ", "arguments", " ", "are", " ", 
      RowBox[{"allowed", ".", " ", "\n", "    ", 
       RowBox[{"TalmudicRule", "[", "]"}]}]}], "      ", "-", " ", 
     RowBox[{"has", " ", "changed", " ", "its", " ", "behavior"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "only", " ", "two", " ", "input", " ", "arguments", " ", "are", " ", 
      RowBox[{"allowed", ".", " ", "\n", "   ", "\n", "   ", "Version"}], " ",
       "1.7", "\n", "\n", "    ", 
      RowBox[{"SelectPart", "[", "]"}]}], "        ", "-", " ", 
     "Superfluous"}], ",", " ", 
    RowBox[{
     RowBox[{"has", " ", "been", " ", 
      RowBox[{"removed", ".", "  ", "\n", "    ", 
       RowBox[{"AssignSymVal", "[", "]"}]}]}], "      ", "-", " ", 
     "Superfluous"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"has", " ", "been", " ", 
       RowBox[{"removed", ".", " ", "\n", "    ", 
        RowBox[{"LPtoMatrix", "[", "]"}]}]}], "        ", "-", " ", 
      RowBox[{
      "has", " ", "been", " ", "modified", " ", "to", " ", "clean", " ", "up",
        " ", "and", " ", "to", " ", "simplify", " ", "the", " ", 
       RowBox[{"code", ".", "\n", "\n", "   ", "Version"}], " ", "1.8", "\n", 
       "    ", 
       RowBox[{"LPtoMatrix", "[", "]"}]}], "        ", "-", " ", 
      RowBox[{
      "fixes", " ", "incorrect", " ", "computation", " ", "due", " ", "to", 
       " ", "wrong", " ", "order", " ", "into", " ", "the", " ", "boundary", 
       " ", 
       RowBox[{"vector", ".", "\n", "\n", "   ", "Version"}], " ", "2.2", 
       "\n", "       ", "Transcription", " ", "of", " ", "the", " ", "old", 
       " ", "option", " ", "rules", " ", "to", " ", "the", " ", "new", " ", 
       "ones", " ", "invented", " ", "by", " ", "Mathematica", " ", "8.", 
       RowBox[{"x", ".", "\n", "       ", "This"}], " ", "package", " ", "is",
        " ", "now", " ", "exclusively", " ", "dedicated", " ", "to", " ", 
       "Mathematica", " ", "version", " ", "8.", "x", " ", "and", " ", 
       RowBox[{"higher", ".", "    ", "\n", "\n", "    ", "Version"}], " ", 
       "2.3"}]}], ":", "\n", "       ", 
     RowBox[{"Change", " ", "protected", " ", "command", " ", 
      RowBox[{"SubsetQ", "[", "]"}], " ", "to", " ", 
      RowBox[{"SubSetQ", "[", "]"}], " ", "from", " ", "the", " ", 
      "VertexEnum", " ", 
      RowBox[{"package", ".", " ", "Order"}], " ", "is", "\n", "       ", 
      "reversed", " ", "to", " ", 
      RowBox[{"SubsetQ", "[", "]"}], " ", "which", " ", "is", " ", "new", " ",
       "in", " ", "Mathematica", " ", "version", " ", "10.", 
      RowBox[{"x", ".", "\n", "\n", "    ", "Version"}], " ", "2.5", ".4"}], 
     ":", "\n", "       ", 
     RowBox[{"Adding", " ", "the", " ", "function", " ", 
      RowBox[{"Sets2Dec", "[", "]"}], " ", "that", " ", "transcribes", " ", 
      "a", " ", "set", " ", "of", " ", "coalitions", " ", "into", " ", "its", 
      " ", "unique", " ", "integer", "\n", "       ", 
      RowBox[{"representations", ".", " ", "Moreover"}]}]}], ",", " ", 
    RowBox[{"we", " ", "add", " ", "the", " ", "function", " ", 
     RowBox[{"BalancedSystemQ", "[", "]"}], " ", "that", " ", "should", " ", 
     "check", " ", "if", " ", "a", " ", "collection", "\n", "       ", "of", 
     " ", "sets", " ", "is", " ", 
     RowBox[{"balanced", ".", " ", "However"}]}], ",", " ", 
    RowBox[{"use", " ", "it", " ", "with", " ", "care"}], ",", " ", 
    RowBox[{
     RowBox[{"it", " ", "returns", " ", "for", " ", "n"}], "=", 
     RowBox[{
      RowBox[{">", 
       RowBox[{
       "4", " ", "incorrect", " ", "results", " ", "probably", " ", "due", 
        " ", "to", " ", "\n", "       ", "a", " ", "bug", " ", "within", " ", 
        "the", " ", 
        RowBox[{"DualLinearProgramming", ".", " ", "For"}], " ", "an", " ", 
        "example", " ", "see", " ", 
        RowBox[{"ChangeLog", ".", "\n", "\n", "\n", "    ", "Version"}], " ", 
        "2.6", ".0"}]}], ":", "\n", "       ", 
      RowBox[{"Performing", " ", "some", " ", "code", " ", 
       RowBox[{"maintenance", ".", "\n", "\n", "    ", "Version"}], " ", 
       "3.0", ".0"}], ":", "\n", "       ", 
      RowBox[{
      "Not", " ", "anymore", " ", "backward", " ", "compatible", " ", "to", 
       " ", "Mathematica", " ", "versions", " ", "smaller", " ", "than", " ", 
       "12", " ", "due", " ", "to", " ", "the", " ", "port", "\n", "       ", 
       "to", " ", "the", " ", "new", " ", "collection", " ", "of", " ", 
       "algorithms", " ", "for", " ", "solving", " ", "convex", " ", 
       "problems", " ", "introduced", " ", "in", " ", "version", " ", "12.", 
       "\n", "\n", "    ", "Version", " ", "3.0", ".1"}], ":", "\n", 
      "        ", 
      RowBox[{"Some", " ", "minor", " ", "bug", " ", 
       RowBox[{"fixes", ".", " ", "Improving"}], " ", "performance", " ", 
       "of", " ", "functions", " ", "revised", " ", "in", " ", "Version", " ",
        "3.", "\n", "\n", "    ", "Version", " ", "3.0", ".2", " ", "and", 
       " ", "later"}], ":", "\n", "        ", 
      RowBox[{"See", " ", 
       RowBox[{"ChangeLog", "."}]}]}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"BeginPackage", "[", "\"\<TUG`TuGamesAux`\>\"", "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Angle", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Angle[x_vec,y_vec] computes the angle of the two vectors x and y.\>\
\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AssignmentProblem", "::", "usage"}], " ", "=", "\n", 
     "\"\<AssignmentProblem[buyers, sellers, profitmat] determines the \
characteristic values from an \n assignment problem. These values can be used \
to define the corresponding assignment game.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AirportProblem", "::", "usage"}], " ", "=", "\n", 
     "\"\<AirportProblem[cost,nj] computes the associated airport cost game \
from (cost,nj). \n The sum of nj should not exceed 48 players.\>\""}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedSystemQ", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<{bcQ,cfs}=BalancedSystemQ[coll,T] checks whether the collection of \
sets 'coll' is balanced.\n It returns a True or False on the first return \
value, at the second position the weights of\n the balanced collection are \
returned.\>\""}], " ", ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeaklyBalancedSystemQ", "::", "usage"}], " ", "=", "\n", 
     "\"\<bcQ=WeaklyBalancedSystemQ[coll,b0,T] checks whether the collection \
of sets 'coll' in connection with \n a set of single coalitions b0 -- could \
be empty -- is weakly balanced. It returns a True or False.\>\""}], " ", 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenProfitMatrix", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<GenProfitMatrix[valuation_buyers,valuation_sellers] generates a \
profit matrix for an assignment \n problem by the list of valuation of buyers \
and sellers.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplementaryMarket", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<ComplementaryMarket[Tlist,Plist_,Qlist,opts] computes the \
coalitional values of a market situation \n with complementary goods. See \
Maschler JET, 13, pp. 184-192. The set P can be understood as manufactures \n \
and Q as workers. The set T is the player set with P union Q.\>\""}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProductGame", "::", "usage"}], " ", "=", "\n", 
     "\"\<ProductGame[wghs] computes from weights vector the characteristic \
values and Harsanyi dividends of a product game.\>\""}], ";"}], " ", "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbabilityGame", "::", "usage"}], " ", "=", "\n", 
     "\"\<ProbabilityGame[wghs] computes from weights vector the \
characteristic values of a probability game.\>\""}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ContestedGarment", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<ContestGarment[Estate,{d1,d2}] computes a solution for a contested \
garment or two-creditor modest \n bankruptcy problem.\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TalmudicRule", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<TalmudicRule[Estate,{d1,d2,d3,...,dn}] computes a solution for a \
contested garment or n-creditor modest \n bankruptcy problem. The solution \
coincides with the nucleolus of the corresponding bankruptcy game.\>\""}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GreedyBankruptcy", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<GreedyBankruptcy[Estate,claims] computes the coalitional values for \
a greedy bankruptcy game.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LPtoMatrix", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<LPtoMatrix[zf, const, var] extracts the coefficient from a LP. \
Where 'zf' is the objective function,\n 'const' is the linear constraint set \
and 'var' is set of variables.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjointMatrix", "::", "usage"}], "=", "\n", 
     "\"\<AdjointMatrix[mat_List] computes the conjugate transpose of the \
matrix 'mat'.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsHermitianMatrixQ", "::", "usage"}], ":=", "\n", 
     "\"\<IsHermitianMatrixQ[mat_List] checks whether a square matrix is self \
adjoint.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModestBankruptcy", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<ModestBankruptcy[Estate,claims] computes the coalitional values for \
a modest bankruptcy game.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCardinalityGame", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<GetCardinalityGame[T,k] assigns a worth of zero to a coalition of \
size=<k<Length[T].\n Larger coalition will be assigned according to its \
cardinality. The resultant vector can be \n used to define a game.\>\""}], 
    ";"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameSizeK", "::", "usage"}], " ", "=", "\n", 
     "\"\<SymGameSize2[T,k,val] constructs a symmetric game where a cycle of \
coalitions of size k getting\n a worth of 'val' and the grand coalition gets \
2*val. The value k must be an integer between\n 2 and Length[T]. Remind that \
T is the player set.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameType2", "::", "usage"}], " ", "=", "\n", 
     "\"\<SymGameType2[T,S,val] constructs a game where all coalitions of \
size 2 satisfying \n Intersection[S,Complement[T,S]] getting a worth of \
'val', the grand coalition gets 2*val,\n and otherwise zero. Coalition S must \
have size not less than 2.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameType3", "::", "usage"}], " ", "=", "\n", 
     "\"\<SymGameType3[T,S,val] constructs a game where all coalitions of \
size 3 satisfying \n Intersection[S,Complement[T,S]] getting a worth of \
'val', the grand coalition gets 2*val,\n and otherwise zero. Coalition S must \
have size not less than 3.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameType4", "::", "usage"}], " ", "=", "\n", 
     "\"\<SymGameType4[T,S,val] constructs a game where all coalitions of \
size 4 satisfying \n Intersection[S,Complement[T,S]] getting a worth of \
'val', the grand coalition gets 2*val,\n and otherwise zero. Coalition S must \
have size not less than 4.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SolvePrimal", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<SolvePrimal[zf, const, var] solves a primal problem.\>\""}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SolveDual", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<SolveDual[zf, const, var] solves the corresponding dual \
problem.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclidianDistance", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<EuclidianDistance[liste,refliste] computes the Euclidian distance \
of the vector 'liste' w.r.t. \n the vector 'refliste'.\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NearRingQ", "::", "usage"}], " ", "=", "\n", 
     "\"\<NearRingQ[list,T] checks if the collection of sets is a near \
ring.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LieBracket", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<LieBracket[mat01,mat02] computes the commutator of the \
(nXn)-matrices mat01 and mat02.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Coal2Dec", "::", "usage"}], " ", "=", "\n", 
     "\"\<Coal2Dec[n_Integer] converts the set of proper coalitions to its \
unique integer representations.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Sets2Dec", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Sets2Dec[list] converts a collection of coalitions to its unique \
integer representations.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RStirlingNumber", "::", "usage"}], "=", "\n", 
     "\"\<RStirlingNumber[r,n,k] computes the r-associated Stirling number of \
the second kind.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SortVecDecOrder", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<SortVecDecOrder[vec] order vec into a non-increasing order. See Eq. \
(5.11) page 82 Peleg and Sudhoelter (2007). \>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", "Options", ":"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "AssignmentProblem", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{"Verbose", " ", "->", " ", "False"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "BalancedSystemQ", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{"Method", "->", " ", "RevisedSimplex"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "ComplementaryMarket", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{"MarketParameter", " ", "->", " ", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "WeaklyBalancedSystemQ", "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{"Method", "->", " ", "RevisedSimplex"}], "}"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", 
     RowBox[{"Error", " ", "Messages"}], ":"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", 
     RowBox[{"One", " ", "Argument"}], ":"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjointMatrix", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Coal2Dec", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsHermitianMatrixQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Sets2Dec", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SortVecDecOrder", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProductGame", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbabilityGame", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", 
     RowBox[{"Two", " ", "Arguments"}], ":"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Angle", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AirportProblem", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedSystemQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ContestedGarment", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclidianDistance", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenProfitMatrix", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GreedyBankruptcy", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCardinalityGame", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LieBracket", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NearRingQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModestBankruptcy", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TalmudicRule", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}]}]}]], "Code",ExpressionUU\
ID->"beacc61c-854b-41fe-b700-40bdde4a9674"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Three", " ", "Arguments"}], ":"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AssignmentProblem", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplementaryMarket", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LPtoMatrix", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RStirlingNumber", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SolveDual", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SolvePrimal", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameSizeK", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameType2", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameType3", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SymGameType4", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeaklyBalancedSystemQ", "::", "argerr"}], "=", 
     "\"\<Three arguments were expected.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"$OperatingSystem", " ", "===", " ", "\"\<Unix\>\""}], ",", " ", 
      RowBox[{"Needs", "[", "\"\<TUG`vertex`VertexEnum`\>\"", "]"}], ",", 
      "\n", "      ", 
      RowBox[{"$OperatingSystem", " ", "===", " ", "\"\<Windows\>\""}], ",", 
      " ", 
      RowBox[{"Needs", "[", "\"\<TUG`vertex`VertexEnum`\>\"", "]"}], ",", 
      "\n", "      ", 
      RowBox[{"$OperatingSystem", " ", "===", " ", "\"\<MacOSX\>\""}], ",", 
      " ", 
      RowBox[{"Needs", "[", "\"\<TUG`vertex`VertexEnum`\>\"", "]"}], ",", 
      "\n", "      ", "True", ",", " ", 
      RowBox[{"Needs", "[", "\"\<VertexEnum`\>\"", "]"}]}], "\n", "]"}], 
    ";"}]}]}]], "Code",ExpressionUUID->"7d311e80-f394-4c61-a618-03d902ced597"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Angle", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Angle", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Angle", "[", 
     RowBox[{
      RowBox[{"x_", "?", "VectorQ"}], ",", " ", 
      RowBox[{"y_", "?", "VectorQ"}]}], "]"}], " ", ":=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcCos", "[", 
       RowBox[{"Divide", "[", 
        RowBox[{
         RowBox[{"x", ".", "y"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"x", ",", " ", "2"}], "]"}], " ", 
           RowBox[{"Norm", "[", 
            RowBox[{"y", ",", " ", "2"}], "]"}]}], ")"}]}], "]"}], "]"}], "/",
       "Degree"}], " ", "//", " ", "N"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Extracting", " ", "the", " ", "coefficients", " ", "from", " ", "an", " ",
     "LP"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LPtoMatrix", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"LPtoMatrix", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LPtoMatrix", "[", 
    RowBox[{"obf_", ",", " ", "const_List", ",", " ", "var_List"}], "]"}], ":=",
    "\n", "    ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "zf", ",", " ", "coemat", ",", " ", "coebv", ",", " ", "greq", ",", " ",
        "lseq", ",", " ", "eqeq", ",", " ", "grout", ",", " ", "lsout", ",", 
       " ", "eqout", ",", " ", "ext1", ",", "\n", "       ", "ext2", ",", " ",
        "ext3", ",", " ", "bv01", ",", " ", "bv02", ",", " ", "bv03", ",", 
       " ", "nbv01", ",", " ", "bvec", ",", "ar", ",", "ps", ",", "rl"}], 
      "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"zf", " ", "=", " ", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"obf", ",", " ", "var"}], "]"}]}], ";", "\n", 
      RowBox[{"(*", "    ", 
       RowBox[{
        RowBox[{"ineq", " ", "=", " ", 
         RowBox[{"Simplify", "[", "const", "]"}]}], ";"}], " ", "*)"}], "\n", 
      "    ", 
      RowBox[{"coemat", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Coefficient", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "var"}], "]"}], " ", 
         "&"}], " ", "/@", " ", "const"}]}], ";", "\n", "    ", 
      RowBox[{"coebv", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "const"}]}], ";", "\n", "    ", 
      RowBox[{"greq", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"const", ",", " ", "GreaterEqual"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"eqeq", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"const", ",", " ", "Equal"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"lseq", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"const", ",", " ", "LessEqual"}], "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"grout", " ", "=", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "greq"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"eqout", " ", "=", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "eqeq"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"lsout", " ", "=", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "lseq"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ext1", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"grout", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "grout", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"coebv", ",", " ", "grout"}], "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"ext2", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"eqout", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "eqout", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"coebv", ",", " ", "eqout"}], "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"ext3", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"lsout", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "lsout", ",", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"coebv", ",", " ", "lsout"}], "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"bv01", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ext1", ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "ext1", ",", "\n", 
         "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", " ", 
                RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}], "]"}], " ", "&"}], 
          " ", "/@", " ", "ext1"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bv02", " ", "=", " ", "\n", "      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ext2", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "ext2", ",", " ", "\n", 
         "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", " ", 
                RowBox[{"{", "0", "}"}]}], "}"}]}], "]"}], "]"}], " ", "&"}], 
          " ", "/@", " ", "ext2"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bv03", " ", "=", " ", "\n", "      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ext3", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "ext3", ",", " ", "\n", 
         "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], "]"}], " ", 
           "&"}], " ", "/@", " ", "ext3"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bv01", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"bv01", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", "bv01", "}"}], ",", " ", "bv01"}], " ", "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"nbv01", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"bv02", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "bv01", ",", " ", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"bv01", ",", " ", "bv02"}], "]"}], ";", " ", 
          RowBox[{"FlattenAt", "[", 
           RowBox[{"bv01", ",", 
            RowBox[{"Length", "[", "bv01", "]"}]}], "]"}]}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"nbv01", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"bv03", ",", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "nbv01", ",", " ", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"nbv01", ",", " ", "bv03"}], "]"}], ";", " ", 
          RowBox[{"FlattenAt", "[", 
           RowBox[{"nbv01", ",", 
            RowBox[{"Length", "[", "nbv01", "]"}]}], "]"}]}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"bvec", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"nbv01", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ar", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], " ", "&"}], ",", 
         RowBox[{"Length", "[", "bvec", "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ps", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"grout", ",", "eqout", ",", "lsout"}], "}"}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"rl", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps", ",", "bvec"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bvec", " ", "=", " ", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"ar", ",", "rl"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"{", 
       RowBox[{"zf", ",", " ", "coemat", ",", " ", "bvec"}], "}"}]}]}], "\n", 
    "    ", "]"}]}], ";"}]}], "Code",ExpressionUUID->"26997b38-8a89-41c3-88cd-\
0d1f2bb5e6bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolvePrimal", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SolvePrimal", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolvePrimal", "[", 
    RowBox[{"zf_", ",", "eq_List", ",", "var_List", ",", " ", 
     RowBox[{"bd_", ":", 
      RowBox[{"{", "}"}]}], ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "LinearOptimization", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "obf", ",", " ", "cmat", ",", " ", "bvect", ",", " ", "res", ",", " ", 
       "nzf", ",", " ", "rl"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect"}], "}"}], " ", "=",
        " ", 
       RowBox[{"LPtoMatrix", "[", 
        RowBox[{"zf", ",", " ", "eq", ",", " ", "var"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"cmat", " ", "=", " ", 
       RowBox[{"SparseArray", "[", "cmat", "]"}]}], ";", "\n", 
      RowBox[{"(*", "    ", 
       RowBox[{
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"LinearProgramming", "[", 
          RowBox[{
          "obf", ",", " ", "cmat", ",", " ", "bvect", ",", " ", "bd", ",", 
           "opts"}], "]"}]}], ";"}], " ", "*)"}], " ", 
      RowBox[{"(*", 
       RowBox[{"second", " ", "solution", 
        RowBox[{"??", "?"}]}], " ", "*)"}], "\n", "    ", 
      RowBox[{"bv", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"First", "[", "#", "]"}]}], " ", "&"}], "/@", " ", 
        "bvect"}]}], ";", "\n", "    ", 
      RowBox[{"eqm", "=", 
       RowBox[{"cmat", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"beq", "=", 
       RowBox[{"bv", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "nzf"}], "}"}], "=", 
       RowBox[{"LinearOptimization", "[", 
        RowBox[{"obf", ",", 
         RowBox[{"{", 
          RowBox[{"cmat", ",", "bv"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "eqm", "}"}], ",", 
           RowBox[{"{", "beq", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<PrimalMinimizer\>\"", ",", " ", "\"\<PrimalMinimumValue\>\""}],
           "}"}], ",", 
         RowBox[{"Method", "->", "\"\<Automatic\>\""}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"rl", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{"var", ",", " ", "res"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"{", "rl", "}"}], ",", " ", "nzf"}], "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"f2365505-ec4a-4dc1-95ce-\
2008e0782f8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolveDual", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SolveDual", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolveDual", "[", 
    RowBox[{"zf_", ",", " ", "eq_List", ",", " ", "var_List", ",", " ", 
     RowBox[{"bd_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "LinearOptimization", "]"}]}]}], "]"}], ":=",
    "\n", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "obf", ",", " ", "cmat", ",", " ", "bvect", ",", " ", "tobf", ",", " ", 
       "eqm", ",", " ", "beq", ",", " ", "res", ",", " ", "nzf", ",", " ", 
       "yvar", ",", " ", "dim", ",", "rl"}], "}"}], ",", "\n", "   ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect"}], "}"}], " ", "=",
        " ", 
       RowBox[{"LPtoMatrix", "[", 
        RowBox[{"zf", ",", "eq", ",", " ", "var"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"tobf", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "bvect"}]}], ";", "\n", "   ", 
      RowBox[{"eqm", "=", 
       RowBox[{"cmat", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"beq", "=", 
       RowBox[{"tobf", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"cmat", " ", "=", " ", 
       RowBox[{"SparseArray", "[", "cmat", "]"}]}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "nzf"}], "}"}], "=", 
       RowBox[{"LinearOptimization", "[", 
        RowBox[{"obf", ",", 
         RowBox[{"{", 
          RowBox[{"cmat", ",", 
           RowBox[{"-", "tobf"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "eqm", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", "beq"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<DualMaximizer\>\"", ",", " ", "\"\<DualMaximumValue\>\""}], 
          "}"}], ",", 
         RowBox[{"Method", "->", "\"\<Automatic\>\""}]}], "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "cmat", "]"}]}], ";", "\n", "   ", 
      RowBox[{"yvar", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Global`y", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"First", "[", "dim", "]"}]}], "}"}]}], "]"}]}]}], ";", 
      "\n", "   ", 
      RowBox[{"rl", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{"yvar", ",", " ", 
           RowBox[{"First", "[", "res", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"{", "rl", "}"}], ",", " ", "nzf"}], "]"}]}]}], "\n", "  ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"dfa13961-8fe7-4346-9ea5-\
ace719f586bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Near", " ", "Ring"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NearRingQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"NearRingQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NearRingQ", "[", 
      RowBox[{"set_List", ",", "T1_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "boolval", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"boolval", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "set", "]"}], " ", "===", " ", "3"}], ",", 
           "  ", 
           RowBox[{"CheckNearRing", "[", 
            RowBox[{"set", ",", "set", ",", "T1"}], "]"}], ",", "\n", 
           "                    ", 
           RowBox[{
            RowBox[{"Depth", "[", "set", "]"}], " ", "===", " ", "4"}], ",", 
           "  ", 
           RowBox[{
            RowBox[{
             RowBox[{"CheckNearRing", "[", 
              RowBox[{"#", ",", "#", ",", "T1"}], "]"}], " ", "&"}], " ", "/@",
             " ", "set"}], ",", "\n", "                    ", "True", ",", 
           " ", 
           RowBox[{"DisplayMessNearRing", "[", "set", "]"}]}], "]"}]}], ";", 
        "\n", "   ", 
        RowBox[{"Return", "[", "boolval", "]"}]}]}], "\n", "    ", "]"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"bfc33b68-1aad-4e29-a4b3-1978d9406d4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CheckNearRing", "[", 
    RowBox[{
    "Univers_List", ",", " ", "RestSet_List", ",", " ", "T2_", ",", " ", 
     RowBox[{"prevres_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fi", ",", " ", "restuni", ",", " ", "res", ",", " ", "allres"}], "}"}],
      ",", "\n", "    ", 
     RowBox[{
      RowBox[{"fi", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"RestSet", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"res", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"NearRingDef", "[", 
          RowBox[{"fi", ",", " ", "#", ",", " ", "T2", ",", " ", "Univers"}], 
          "]"}], " ", "&"}], " ", "/@", " ", "RestSet"}]}], ";", "\n", "    ", 
      RowBox[{"restuni", " ", "=", " ", 
       RowBox[{"Delete", "[", 
        RowBox[{"RestSet", ",", " ", "1"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"allres", " ", "=", " ", 
       RowBox[{"FlattenAt", "[", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"res", ",", " ", "prevres"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Length", "[", "res", "]"}], " ", "+", " ", "1"}]}], 
        "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "restuni", "]"}], " ", "===", " ", "0"}], ",",
         " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "allres"}], "]"}], ",", " ", "True", ",", 
        " ", "\n", "      ", 
        RowBox[{"CheckNearRing", "[", 
         RowBox[{
         "Univers", ",", " ", "restuni", ",", " ", "T2", ",", " ", "allres"}],
          "]"}]}], "]"}]}]}], "\n", "    ", "]"}]}], ";"}]], "Code",Expression\
UUID->"ab9c9af9-dbf3-40fa-b22a-c1617baf3868"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NearRingDef", "[", 
    RowBox[{"A_", ",", " ", "B_", ",", " ", "R1_", ",", "Univers_List"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"Union", "[", 
         RowBox[{"A", ",", " ", "B"}], "]"}], ",", "R1"}], "]"}], " ", "||", 
      " ", 
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"Intersection", "[", 
         RowBox[{"A", ",", " ", "B"}], "]"}], ",", " ", 
        RowBox[{"{", "}"}]}], "]"}], " ", "||", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"Univers", ",", " ", 
            RowBox[{"Union", "[", 
             RowBox[{"A", ",", " ", "B"}], "]"}]}], "]"}], "]"}], " ", "!=", 
         " ", "0"}], " ", "&&", " ", "\n", "          ", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"Univers", ",", " ", 
            RowBox[{"Intersection", "[", 
             RowBox[{"A", ",", " ", "B"}], "]"}]}], "]"}], "]"}], " ", "!=", 
         " ", "0"}]}], ")"}]}]}], "\n", "    ", "]"}]}], ";"}]], "Code",Expres\
sionUUID->"42dd7cfe-8451-421a-becf-1d69ff925065"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DisplayMessNearRing", "[", "set_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Depth is equal to \>\"", ",", " ", 
       RowBox[{"Depth", "[", "set", "]"}]}], "]"}], ";", "\n", "      ", 
     RowBox[{
     "Print", "[", "\"\<The collection of sets must be of depth 3 or 4.\>\"", 
      "]"}], ";", "\n", "      ", 
     RowBox[{"Print", "[", "\"\<Usage: NearRi[set]\>\"", "]"}]}], ")"}]}], 
  ";"}]], "Code",ExpressionUUID->"959ea692-476b-410a-9ee3-6637cd0c84b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Airport", " ", "Cost", " ", "Allocation", " ", "Problem"}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AirportProblem", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"AirportProblem", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AirportProblem", "[", 
      RowBox[{"cost_List", ",", "nj_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmv", ",", "evc", ",", "clv"}], "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"tmv", "=", 
         RowBox[{"Total", "[", "nj", "]"}]}], ";", " ", "\n", "   ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Checking", " ", "if", " ", "the", " ", "game", " ", "is", " ", 
          "not", " ", "too", " ", 
          RowBox[{"large", "."}]}], " ", "*)"}], "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"LessEqual", "[", 
             RowBox[{
              RowBox[{"Total", "[", "nj", "]"}], ",", "48"}], "]"}], ",", 
            "True"}], "]"}], ",", "\t", "\n", "      ", 
          RowBox[{
           RowBox[{"evc", "=", 
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cost", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "&"}], " ", ",", 
                  RowBox[{"nj", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "nj", "]"}]}], "}"}]}], "]"}], ",", 
              "1"}], "]"}]}], ";", "\n", "      ", 
           RowBox[{"clv", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], " ", "&"}], "/@", " ", 
             RowBox[{"Subsets", "[", "evc", "]"}]}]}], ";", "\n", "      ", 
           RowBox[{"clv", " ", "/.", " ", 
            RowBox[{
             RowBox[{"clv", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "->", "0"}]}]}], ",", "\n", 
          "          ", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Game is too large! Should not exceed 48 Players!\>\"", "]"}],
            ";", "\n", "          ", 
           RowBox[{"Return", "[", 
            RowBox[{"{", "}"}], "]"}], ";"}]}], "\n", "   ", "]"}]}]}], "\n", 
      "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Market", " ", "Situation"}], "  ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"teilm", "[", "T_List", "]"}], ":=", 
     RowBox[{"Sort", "[", 
      RowBox[{"Flatten", " ", "/@", " ", 
       RowBox[{"Distribute", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", " ", 
              RowBox[{"{", "#1", "}"}]}], "}"}], " ", "&"}], ")"}], " ", "/@",
           " ", "T"}], ",", " ", "List"}], "]"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplementaryMarket", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ComplementaryMarket", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ComplementaryMarket", "[", 
      RowBox[{"T_List", ",", "P_List", ",", "Q_List", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "ComplementaryMarket", "]"}]}]}], 
      "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"em", ",", "param", ",", "coal", ",", "val"}], "}"}], ",", 
       "\n", "    ", 
       RowBox[{
        RowBox[{"em", " ", "=", " ", 
         RowBox[{"Intersection", "[", 
          RowBox[{"P", ",", "Q"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "em", "]"}], " ", "!=", " ", "0"}], ",", 
          " ", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<The sets P and Q are not disjoint.\>\"", "]"}], 
           ";", " ", 
           RowBox[{"Return", "[", "]"}]}], ",", "\n", "          ", "True", 
          ",", " ", "\n", "              ", 
          RowBox[{
           RowBox[{"param", " ", "=", " ", 
            RowBox[{"OptionValue", "[", "MarketParameter", "]"}]}], ";", "  ",
            "\n", "              ", 
           RowBox[{"coal", " ", "=", " ", 
            RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "              ", 
           RowBox[{"val", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Intersection", "[", 
                  RowBox[{"#", ",", " ", "P"}], "]"}], "]"}], ",", " ", 
                RowBox[{"a", " ", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Intersection", "[", 
                   RowBox[{"#", ",", " ", "Q"}], "]"}], "]"}]}]}], "]"}], " ",
               "&"}], " ", "/@", " ", "coal"}]}], ";", "\n", "              ", 
           RowBox[{"val", " ", "/.", " ", 
            RowBox[{"a", " ", "->", " ", "param"}]}]}]}], "\n", "          ", 
         "]"}]}]}], "\n", "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->\
"944abe29-dfa4-4f15-b7be-f60c2a4175ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Product", " ", "Game"}], "  ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ProductGame", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ProductGame", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProductGame", "[", "wghs_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xlis", ",", "pval", ",", "chval", ",", "ylis", ",", "hdval"}], "}"}],
        ",", "\n", "\t   ", 
       RowBox[{
        RowBox[{"xlis", " ", "=", " ", 
         RowBox[{"Subsets", "[", "wghs", "]"}]}], ";", "\t\t      ", "\n", 
        "           ", 
        RowBox[{"pval", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Times", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
          "xlis"}]}], ";", " ", "\n", "           ", 
        RowBox[{"chval", "=", 
         RowBox[{"pval", "-", "1"}]}], ";", "\n", "\t   ", 
        RowBox[{"ylis", " ", "=", 
         RowBox[{"Subsets", "[", 
          RowBox[{"wghs", "-", "1"}], "]"}]}], ";", "\n", "\t   ", 
        RowBox[{"hdval", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Times", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
          "ylis"}]}], ";", "\n", "\t   ", 
        RowBox[{"{", 
         RowBox[{"chval", ",", "hdval"}], "}"}]}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "characteristic", " ", "values", " ", "and", " ", "Harsanyi", " ", 
        RowBox[{"dividends", "."}]}], "  ", "*)"}], "\n", "\t\t       ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Probability", " ", "Game"}], "  ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbabilityGame", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ProbabilityGame", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbabilityGame", "[", "wghs_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xlis", ",", "pval", ",", "chval"}], "}"}], ",", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"GreaterEqual", "[", 
               RowBox[{"#", ",", "0"}], "]"}], " ", "&"}], "/@", " ", 
             "wghs"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"LessEqual", "[", 
               RowBox[{"#", ",", "1"}], "]"}], " ", "&"}], "/@", " ", 
             "wghs"}]}], "]"}]}], ",", "\n", "           ", 
         RowBox[{
          RowBox[{"xlis", " ", "=", " ", 
           RowBox[{"Subsets", "[", "wghs", "]"}]}], ";", "\n", "           ", 
          
          RowBox[{"pval", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"Times", ",", 
               RowBox[{"1", "-", "#"}]}], "]"}], " ", "&"}], "/@", " ", 
            "xlis"}]}], ";", "\n", "           ", 
          RowBox[{"chval", "=", 
           RowBox[{"1", "-", "pval"}]}]}], ",", 
         RowBox[{
         "Print", "[", "\"\<The weights must lie between zero and one.\>\"", 
          "]"}]}], "]"}]}], "\n", "\t\t       ", "]"}]}], ";"}]}]}]], "Code",E\
xpressionUUID->"3c4859d3-293e-4c41-ad63-0f00371d173e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Bankruptcy", " ", "Situation"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "S_List", "]"}], ":=", " ", 
     RowBox[{"Plus", " ", "@@", " ", 
      RowBox[{"x", " ", "/@", " ", "S"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModestBankruptcy", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ModestBankruptcy", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModestBankruptcy", "[", 
      RowBox[{
       RowBox[{"E_", "?", "NumberQ"}], ",", "claims_List"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lc", ",", "T", ",", "asscl", ",", "compset", ",", "vecval"}],
         "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"lc", "=", 
         RowBox[{"Length", "[", "claims", "]"}]}], ";", "\n", "    ", 
        RowBox[{"T", "=", 
         RowBox[{"Range", "[", "lc", "]"}]}], ";", "\n", "    ", 
        RowBox[{"asscl", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "/@", " ", "T"}], ",", "claims"}], "}"}]}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"compset", " ", "=", " ", 
         RowBox[{"Reverse", "[", 
          RowBox[{"Subsets", "[", "T", "]"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"vecval", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"E", " ", "-", "  ", 
              RowBox[{"x", "[", "#", "]"}]}]}], "]"}], " ", "&"}], "/@", " ", 
          "compset"}]}], ";", " ", "\n", "    ", 
        RowBox[{"vecval", " ", "/.", "asscl"}]}]}], "\n", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GreedyBankruptcy", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"GreedyBankruptcy", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GreedyBankruptcy", "[", 
      RowBox[{
       RowBox[{"E_", "?", "NumberQ"}], ",", "claims_List"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lc", ",", "T", ",", "asscl", ",", "vecval"}], "}"}], ",", 
       "\n", "    ", 
       RowBox[{
        RowBox[{"lc", "=", 
         RowBox[{"Length", "[", "claims", "]"}]}], ";", "\n", "    ", 
        RowBox[{"T", "=", 
         RowBox[{"Range", "[", "lc", "]"}]}], ";", "\n", "    ", 
        RowBox[{"asscl", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "/@", " ", "T"}], ",", "claims"}], "}"}]}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"vecval", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"E", ",", " ", 
             RowBox[{"x", "[", "#", "]"}]}], "]"}], " ", "&"}], "/@", " ", 
          RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", "    ", 
        RowBox[{"vecval", " ", "/.", "asscl"}]}]}], "\n", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ContestedGarment", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ContestedGarment", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ContestedGarment", "[", 
      RowBox[{
       RowBox[{"Estate_", "?", "NumberQ"}], ",", " ", "Claims_List"}], "]"}], 
     " ", ":=", " ", "\n", "  ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "clset", ",", " ", "extdset", ",", " ", "award", ",", " ", "param"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"clset", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "Claims", "]"}], " ", "===", " ", "2"}], 
           ",", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "#", "]"}], " ", "&"}], ",", " ", 
             RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", " ", 
           RowBox[{"ErrorMessage", ";", " ", 
            RowBox[{"Return", "[", "]"}]}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"extdset", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"clset", ",", " ", 
           RowBox[{"Reverse", "[", "clset", "]"}]}], "}"}]}], ";", "\n", 
        "    ", 
        RowBox[{"award", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"E", " ", "-", " ", 
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"E", " ", "-", " ", "#1"}]}], "]"}], " ", "-", " ", 
                
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"E", " ", "-", " ", "#2"}]}], "]"}]}], ")"}], "/", 
              "2"}], "  ", "+", " ", 
             RowBox[{"Max", "[", 
              RowBox[{"0", ",", " ", 
               RowBox[{"E", " ", "-", " ", "#2"}]}], "]"}]}], " ", "&"}], ",",
            " ", "extdset"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"param", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"E", ",", " ", 
               RowBox[{"clset", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"clset", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Estate", ",", " ", 
               RowBox[{"Claims", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"Claims", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], "]"}]}], 
        ";", "\n", "    ", 
        RowBox[{"award", " ", "/.", " ", "param"}]}]}], "\n", "    ", "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ErrorMessage", " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "Print", "[", 
        "\"\<The Contested Garment Problem is a two-Creditor Bankruptcy \
Problem.\>\"", "]"}], ";", "\n", "      ", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<A Claims List of the Length of two is expexted like: \>\"", ",", 
         " ", "\"\<{d1,d2}\>\""}], "]"}], ";"}], ")"}]}], ";"}]}]}]], "Code",E\
xpressionUUID->"fba1043e-c494-43aa-9352-baf701ff0dcc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TalmudicRule", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"TalmudicRule", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TalmudicRule", "[", 
    RowBox[{
     RowBox[{"Estate_", "?", "NumberQ"}], ",", " ", "Claims_List"}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "clvar", ",", " ", "sumcl", ",", " ", "param", ",", " ", "eqsys", ",", 
       " ", "nclsum", ",", "sol", ",", " ", "sol01"}], "}"}], ",", "\n", 
     "    ", 
     RowBox[{
      RowBox[{"clvar", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], ",", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "Claims", "]"}], "]"}]}], "]"}]}], ";", "\n",
       "    ", 
      RowBox[{"sumcl", " ", "=", " ", 
       RowBox[{"Total", "[", " ", "clvar", "]"}]}], ";", "\n", "    ", 
      RowBox[{"param", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{"clvar", ",", " ", "Claims"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"nclsum", " ", "=", " ", 
       RowBox[{"sumcl", " ", "/.", " ", "param"}]}], ";", "\n", "    ", 
      RowBox[{"eqsys", " ", "=", " ", "\n", "      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Greater", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], "*", "nclsum"}], ",", " ", 
           "Estate"}], "]"}], ",", " ", "\n", "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"\[Lambda]", ",", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "2"}], ")"}], "*", "#"}]}], "]"}], " ", 
           "&"}], " ", "/@", " ", "Claims"}], ",", " ", "\n", "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", " ", "-", " ", "\[Lambda]"}], ")"}], ",", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "2"}], ")"}], "*", "#"}]}], "]"}], " ", 
           "&"}], " ", "/@", " ", "Claims"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"Reduce", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", " ", "eqsys", "]"}], " ", "==", " ", 
          "Estate"}], ",", " ", "\[Lambda]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"sol01", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\[Lambda]", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"sol", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"eqsys", " ", "/.", " ", "sol01"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"6a4339be-8aa8-46f4-b65a-927c2b1b26f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Assignment", " ", "Problem"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "interface"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GenProfitMatrix", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"GenProfitMatrix", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenProfitMatrix", "[", 
      RowBox[{"valOfbuyers_List", ",", " ", "valOfsellers_List"}], "]"}], " ",
      ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"prfij", ",", "valmat"}], "}"}], ",", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"Dimensions", "[", "valOfsellers", "]"}], "]"}], ",", 
           RowBox[{"First", "[", 
            RowBox[{"Dimensions", "[", "valOfbuyers", "]"}], "]"}]}], "]"}], 
         ",", "\n", "    ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"VectorQ", "[", "valOfbuyers", "]"}], ",", "True"}], 
            "]"}], ",", "\n", "                   ", 
           RowBox[{
            RowBox[{"valmat", " ", "=", " ", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"valOfbuyers", " ", "-", " ", "#"}], " ", "&"}], ",", 
               " ", "valOfsellers"}], "]"}]}], ";", "\n", 
            "                   ", 
            RowBox[{"prfij", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"0", ",", "#"}], "]"}], "&"}], ",", "#"}], "]"}], 
               " ", "&"}], " ", "/@", " ", "valmat"}]}], ";", " ", "\n", 
            "                   ", 
            RowBox[{"Transpose", "[", "prfij", "]"}]}], ",", "\n", 
           "                 ", 
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"MatrixQ", "[", "valOfbuyers", "]"}], ",", "True"}], 
            "]"}], ",", "\n", "                    ", 
           RowBox[{
            RowBox[{"valmat", "=", 
             RowBox[{"valOfbuyers", " ", "-", " ", "valOfsellers"}]}], ";", 
            "\n", "                    ", 
            RowBox[{"prfij", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"0", ",", "#"}], "]"}], "&"}], ",", "#"}], "]"}], 
               " ", "&"}], " ", "/@", " ", "valmat"}]}]}], ",", " ", "\n", 
           "                 ", "True", ",", "  ", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Valuation of buyers is neither a vector nor a matrix.\>\"", 
             "]"}], ";"}]}], "\n", "       ", "]"}], ",", " ", "\n", " ", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Input data format is not correct. It must be symmetric.\>\"", 
           "]"}], ";", "\n", " ", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Valuation of buyers must be a vector or a matrix of \
dimension: \>\"", ",", " ", 
            RowBox[{"First", "[", 
             RowBox[{"Dimensions", "[", "valOfsellers", "]"}], "]"}]}], " ", 
           "]"}], ";"}]}], "\n", "    ", "]"}]}], "\n", "  ", "]"}]}], ";"}], 
   "\n"}]}]], "Code",ExpressionUUID->"9903f735-b517-48a1-8d81-61b3e8534315"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AssignmentProblem", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"AssignmentProblem", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AssignmentProblem", "[", 
     RowBox[{
     "buyers_List", ",", " ", "sellers_List", ",", " ", "profmat_List", ",", 
      " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AssignmentProblem", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bplayer", ",", " ", "splayer", ",", " ", "extprofmat"}], 
       "}"}], ",", " ", "\n", "     ", 
      RowBox[{
       RowBox[{"vrb", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "buyers", "]"}], " ", ">=", " ", 
          RowBox[{"First", "[", "sellers", "]"}]}], ",", " ", 
         RowBox[{"MessIdenticalPlayerSet", ";"}], ",", "\n", 
         "                       ", "True", ",", " ", "\n", 
         "                       ", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"bplayer", ",", " ", "splayer", ",", " ", "extprofmat"}], 
            "}"}], " ", "=", "  ", "\n", "                             ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "buyers", "]"}], " ", "!=", " ", 
              RowBox[{"Length", "[", "sellers", "]"}]}], ",", " ", "\n", 
             "                                    ", 
             RowBox[{
             "MessInsertDummy", ";", "\n", 
              "                                    ", 
              RowBox[{"ExtAssProb", "[", 
               RowBox[{"buyers", ",", " ", "sellers", ",", " ", "profmat"}], 
               "]"}]}], ",", " ", "\n", "                              ", 
             RowBox[{"{", 
              RowBox[{"buyers", ",", " ", "sellers", ",", " ", "profmat"}], 
              "}"}]}], "]"}]}], ";", "\n", "                       ", 
          RowBox[{"AssignmentVal", "[", 
           RowBox[{
           "bplayer", ",", " ", "splayer", ",", " ", "extprofmat", ",", " ", 
            "opts"}], "]"}]}]}], "\n", "                                 ", 
        "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MessIdenticalPlayerSet", " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "Print", "[", " ", 
       "\"\<The set of buyers and sellers is identical.\>\"", "]"}], ";", 
      "\n", "      ", 
      RowBox[{
      "Print", "[", "\"\<Or the set of buyers and sellers is mixed up.\>\"", 
       "]"}], ";", "\n", "      ", 
      RowBox[{
      "Print", "[", "\"\<Rename at least the set of sellers\>\"", "]"}], ";", 
      "\n", "      ", 
      RowBox[{
      "Print", "[", 
       "\"\<Or put the set of buyers and sellers in correct order.\>\"", 
       "]"}]}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MessInsertDummy", ":=", 
    RowBox[{
    "Print", "[", 
     "\"\<Inserting dummy buyers/sellers to extend the asymmetric assignment \
problem into a symmetric one. \>\"", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtAssProb", "[", 
     RowBox[{
     "buyers_List", ",", " ", "sellers_List", ",", " ", "profmat_List"}], 
     "]"}], " ", ":=", " ", "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newby", ",", " ", "newsel", ",", " ", "extmat"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newby", ",", " ", "newsel"}], "}"}], " ", "=", " ", 
        RowBox[{"NewPlayerSet", "[", 
         RowBox[{"buyers", ",", " ", "sellers"}], "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"extmat", " ", "=", " ", 
        RowBox[{"FillMatrix", "[", "profmat", "]"}]}], ";", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"newby", ",", " ", "newsel", ",", " ", "extmat"}], "}"}]}]}], 
     "\n", "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NewPlayerSet", "[", 
    RowBox[{"buyers_List", ",", " ", "sellers_List"}], "]"}], " ", ":=", " ", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bplayer", ",", " ", "splayer"}], "}"}], ",", "\n", "    ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "buyers", "]"}], " ", ">", " ", 
        RowBox[{"Length", "[", "sellers", "]"}]}], ",", 
       "                                                      ", 
       RowBox[{
        RowBox[{
         RowBox[{"\\\n", "                         ", "splayer"}], " ", "=", 
         " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "buyers", "]"}], " ", "+", " ", "1"}], ",",
            " ", 
           RowBox[{"2", 
            RowBox[{"Length", "[", "buyers", "]"}]}]}], "]"}]}], ";", " ", 
        RowBox[{"{", 
         RowBox[{"buyers", ",", " ", "splayer"}], "}"}]}], ",", "\n", 
       "                  ", 
       RowBox[{
        RowBox[{"Length", "[", "buyers", "]"}], " ", "<", " ", 
        RowBox[{"Length", "[", "sellers", "]"}]}], ",", " ", "\n", 
       "                        ", 
       RowBox[{
        RowBox[{"bplayer", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", " ", 
           RowBox[{"Length", "[", "sellers", "]"}]}], "]"}]}], ";", "  ", 
        "\n", "                        ", 
        RowBox[{"splayer", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "bplayer", "]"}], " ", "+", " ", "1"}], 
           ",", " ", 
           RowBox[{"2", 
            RowBox[{"Length", "[", "bplayer", "]"}]}]}], "]"}]}], ";", " ", 
        "\n", "                       ", 
        RowBox[{"{", 
         RowBox[{"bplayer", ",", " ", "splayer"}], "}"}]}], ",", " ", "\n", 
       "                 ", "True", ",", " ", 
       RowBox[{"{", 
        RowBox[{"buyers", ",", " ", "sellers"}], "}"}]}], "\n", 
      "            ", "]"}]}], "\n", "    ", "]"}]}], ";"}]}], "Code",Expressi\
onUUID->"7a02ed81-a540-4ff9-b71e-81980d9fb16c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FillMatrix", "[", "profmat_List", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "dm", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "profmat", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dm", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", 
          RowBox[{"dm", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{"ClmsFillZeros", "[", 
          RowBox[{"profmat", ",", " ", 
           RowBox[{"dm", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"dm", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\n", 
         "                 ", 
         RowBox[{
          RowBox[{"dm", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
          RowBox[{"dm", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{"RwsFillZeros", "[", 
          RowBox[{"profmat", ",", " ", 
           RowBox[{"dm", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"dm", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\n", 
         "                 ", "True", ",", " ", "profmat"}], "\n", "      ", 
        "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClmsFillZeros", "[", 
     RowBox[{"profmat_List", ",", " ", "rws_", ",", " ", "clms_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"zromat", ",", " ", "nwmat"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"zromat", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "rws"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"rws", " ", "-", " ", "clms"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"nwmat", " ", "=", " ", 
        RowBox[{"FlattenAt", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "profmat", "]"}], ",", " ", "zromat"}], 
           "]"}], ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Transpose", "[", "nwmat", "]"}]}]}], "\n", "    ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RwsFillZeros", "[", 
    RowBox[{"profmat_List", ",", " ", "rws_", ",", " ", "clms_"}], "]"}], " ",
    ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zromat", ",", " ", "nwmat"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"zromat", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "clms"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"clms", " ", "-", " ", "rws"}]}], "}"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"nwmat", " ", "=", " ", 
       RowBox[{"FlattenAt", "[", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"profmat", ",", " ", "zromat"}], "]"}], ",", " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "    ", "nwmat"}]}], "\n", 
    "    ", "]"}]}], ";"}]}], "Code",ExpressionUUID->"45cab418-8589-4fc4-9642-\
028496312b72"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AssignmentVal", "[", 
     RowBox[{
     "bplayer_List", ",", " ", "splayer_List", ",", " ", "assmat_List", ",", 
      " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AssignmentProblem", "]"}]}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cmg", ",", "matchpl", ",", "T1"}], "}"}], ",", "\n", "     ", 
      
      RowBox[{
       RowBox[{"vrb", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Clear", "[", "T1", "]"}], ";", "\n", "    ", 
       RowBox[{"T1", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"bplayer", ",", " ", "splayer"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"cmg", " ", "=", " ", 
        RowBox[{"Teilmg", "[", "T1", "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SubSetQ", "[", 
            RowBox[{"#", ",", " ", "bplayer"}], "]"}], ",", " ", 
           RowBox[{"Set", "[", 
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], ",", " ", "0"}], "]"}], ",", "\n", 
           "                  ", 
           RowBox[{"SubSetQ", "[", 
            RowBox[{"#", ",", " ", "splayer"}], "]"}], ",", " ", 
           RowBox[{"Set", "[", 
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], ",", " ", "0"}], "]"}], ",", "\n", 
           "                  ", "True", ",", " ", 
           RowBox[{
            RowBox[{"matchpl", " ", "=", " ", 
             RowBox[{"MatchPairs", "[", 
              RowBox[{
              "bplayer", ",", " ", "splayer", ",", "#", ",", " ", "opts"}], 
              "]"}]}], ";", "\n", "                        ", 
            RowBox[{"MaxProfit", "[", 
             RowBox[{
             "matchpl", ",", " ", "assmat", ",", " ", "bplayer", ",", " ", 
              "splayer", ",", " ", "opts"}], "]"}]}]}], "]"}], " ", "&"}], 
        " ", "/@", " ", "cmg"}]}]}], " ", "\n", "    ", "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Borrowed", " ", "from", " ", 
    RowBox[{"M", ".", " ", "Carter"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Teilmg", "[", "T_List", "]"}], " ", ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"Flatten", " ", "/@", " ", 
      RowBox[{"Distribute", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "#", "}"}]}], "}"}], " ", "&"}], " ", "/@", " ", 
         "T"}], ",", " ", "List"}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Main", " ", "functions", " ", "to", " ", "compute", " ", "the", " ", 
    "characteristic", " ", "function", " ", "values", " ", "for", " ", "an", 
    " ", "Assignment", " ", 
    RowBox[{"game", "."}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MatchPairs", "[", " ", 
    RowBox[{
    "bplayer_List", ",", " ", "splayer_List", ",", " ", "subst_List", ",", 
     " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "AssignmentProblem", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vrb", ",", "intcob", ",", " ", "intcos", ",", " ", "permcb", ",", " ", 
       "extcob", ",", " ", "extcos", ",", " ", "mptprs", ",", "rvmp"}], "}"}],
      ",", "\n", "  ", 
     RowBox[{
      RowBox[{"vrb", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", "  ", 
      RowBox[{"intcob", " ", "=", " ", 
       RowBox[{"Intersection", "[", 
        RowBox[{"subst", ",", " ", "bplayer"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"intcos", " ", "=", " ", 
       RowBox[{"Intersection", "[", 
        RowBox[{"subst", ",", " ", "splayer"}], "]"}]}], ";", "\n", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"vrb", ",", "True"}], "]"}], ",", " ", "\n", "  ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<intcob=\>\"", ",", "intcob"}], "]"}], ";", "  ", "\n", 
         "  ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<intcos=\>\"", ",", "intcos"}], "]"}], ";"}], ",", "\n",
         "  ", "True"}], "]"}], ";", "\n", "  ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "intcob", "]"}], " ", ">", " ", 
         RowBox[{"Length", "[", "intcos", "]"}]}], ",", " ", "\n", "      ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "intcos", "]"}], " ", "===", " ", "1"}], 
          ",", " ", "\n", "                    ", 
          RowBox[{
           RowBox[{"extcos", " ", "=", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"intcos", ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", 
                 RowBox[{"Length", "[", "intcob", "]"}]}], "}"}]}], "]"}], 
             "]"}]}], ";", " ", "\n", "                    ", 
           RowBox[{"mptprs", " ", "=", " ", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", " ", 
              RowBox[{"{", 
               RowBox[{"intcob", ",", " ", "extcos"}], "}"}]}], "]"}]}], ";", 
           "\n", "                     ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vrb", " ", "===", " ", "True"}], ",", "  ", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<mptprs=\>\"", ",", " ", "mptprs"}], "]"}], ";"}], 
             ",", "True"}], "]"}], ";", "\n", "                    ", 
           RowBox[{"Split", "[", 
            RowBox[{"mptprs", ",", " ", 
             RowBox[{"Length", "[", "mptprs", "]"}]}], "]"}]}], ",", "\n", 
          "             ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"extcob", ",", "extcos"}], "}"}], " ", "=", "  ", 
            RowBox[{"ExtPlayerSet", "[", 
             RowBox[{"intcob", ",", " ", "intcos"}], "]"}]}], ";", "\n", 
           "     ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"vrb", ",", "True"}], "]"}], ",", " ", "\n", 
             "         ", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<extcob=\>\"", ",", " ", "extcob"}], "]"}], ";", 
              "  ", "\n", "         ", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<extcos=\>\"", ",", " ", "extcos"}], "]"}], ";"}], 
             ",", "\n", "         ", "True"}], "]"}], ";", "\n", "        ", 
           RowBox[{"mptprs", " ", "=", " ", 
            RowBox[{"MatchingPairs", "[", 
             RowBox[{"extcos", ",", " ", "extcob"}], "]"}]}], ";", "\n", 
           "       ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"vrb", ",", "True"}], "]"}], ",", "  ", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<mptprs=\>\"", ",", " ", "mptprs"}], "]"}], ";"}], 
             ",", "True"}], "]"}], ";", "\n", "       ", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], ",", "#"}], 
              "]"}], " ", "&"}], " ", "/@", " ", "mptprs"}]}]}], " ", "]"}], 
        ",", "\n", "    ", 
        RowBox[{
         RowBox[{"Length", "[", "intcob", "]"}], " ", "<", " ", 
         RowBox[{"Length", "[", "intcos", "]"}]}], ",", " ", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "intcob", "]"}], " ", "===", " ", "1"}], 
          ",", " ", "\n", "               ", 
          RowBox[{
           RowBox[{"extcob", " ", "=", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{"intcob", ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", 
                 RowBox[{"Length", "[", "intcos", "]"}]}], "}"}]}], "]"}], 
             "]"}]}], ";", " ", "\n", "               ", 
           RowBox[{"mptprs", " ", "=", " ", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", " ", 
              RowBox[{"{", 
               RowBox[{"intcos", ",", " ", "extcob"}], "}"}]}], "]"}]}], ";", 
           " ", "\n", "               ", 
           RowBox[{"rvmp", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
             "mptprs"}]}], ";", "\n", "              ", 
           RowBox[{"Split", "[", 
            RowBox[{"rvmp", ",", " ", 
             RowBox[{"Length", "[", "rvmp", "]"}]}], "]"}]}], ",", "\n", 
          "         ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"extcob", ",", "extcos"}], "}"}], " ", "=", "  ", 
            RowBox[{"ExtPlayerSet", "[", 
             RowBox[{"intcob", ",", " ", "intcos"}], "]"}]}], ";", "\n", 
           "     ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"vrb", ",", "True"}], "]"}], ",", " ", "\n", 
             "         ", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<extcob=\>\"", ",", " ", "extcob"}], "]"}], ";", 
              "  ", "\n", "         ", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<extcos=\>\"", ",", " ", "extcos"}], "]"}], ";"}], 
             ",", "\n", "         ", "True"}], "]"}], ";", "\n", "        ", 
           RowBox[{"MatchingPairs", "[", 
            RowBox[{"extcob", ",", " ", "extcos"}], "]"}]}]}], "]"}], ",", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"Length", "[", "intcob", "]"}], " ", "==", " ", 
         RowBox[{"Length", "[", "intcos", "]"}]}], ",", " ", "\n", "        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "intcob", "]"}], " ", "===", " ", "1"}], 
          ",", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"intcob", ",", " ", "intcos"}], "}"}], "]"}], ",", "\n", 
          "                      ", 
          RowBox[{
           RowBox[{"Length", "[", "intcob", "]"}], " ", "===", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"Union", "[", 
               RowBox[{"bplayer", ",", " ", "splayer"}], "]"}], "]"}], "/", 
             "2"}], ")"}]}], ",", "  ", "\n", "                           ", 
          RowBox[{
           RowBox[{"permcb", " ", "=", " ", 
            RowBox[{"Permutations", "[", "intcob", "]"}]}], ";", "\n", 
           "                          ", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{"List", ",", " ", 
               RowBox[{"{", 
                RowBox[{"#", ",", " ", "intcos"}], "}"}]}], "]"}], " ", "&"}],
             " ", "/@", " ", "permcb"}]}], ",", "\n", "                    ", 
          "True", ",", "\n", "                        ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"extcob", ",", "extcos"}], "}"}], " ", "=", "  ", 
            RowBox[{"ExtPlayerSet", "[", 
             RowBox[{"intcob", ",", " ", "intcos"}], "]"}]}], ";", "\n", 
           "                     ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"vrb", ",", "True"}], "]"}], ",", " ", "\n", 
             "                        ", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<extcob=\>\"", ",", " ", "extcob"}], "]"}], ";", 
              "  ", "\n", "                        ", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<extcos=\>\"", ",", " ", "extcos"}], "]"}], ";"}], 
             ",", "\n", "                         ", "True"}], "]"}], ";", 
           "\n", "                       ", 
           RowBox[{"mptprs", " ", "=", " ", 
            RowBox[{"MatchingPairs", "[", 
             RowBox[{"extcos", ",", " ", "extcob"}], "]"}]}], ";", "\n", 
           "                     ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"vrb", ",", "True"}], "]"}], ",", "  ", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<mptprs=\>\"", ",", " ", "mptprs"}], "]"}], ";"}], 
             ",", "True"}], "]"}], ";", "\n", "                            ", 
           
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], ",", "#"}], 
              "]"}], " ", "&"}], " ", "/@", " ", "mptprs"}]}]}], " ", "]"}]}],
        "\n", "    ", "]"}]}]}], "\n", "  ", "]"}]}], ";"}]}], "Code",Expressi\
onUUID->"826e383f-8dfe-4fe2-9dfb-481d3c118de4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtPlayerSet", "[", 
     RowBox[{"intcob_List", ",", "intcos_List"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"extcob", ",", "extcos"}], "}"}], ",", "\n", "              ", 
      
      RowBox[{
       RowBox[{"extcob", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"intcob", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "2"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
       "              ", 
       RowBox[{"extcos", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"intcos", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "2"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
       "              ", 
       RowBox[{"{", 
        RowBox[{"extcob", ",", "extcos"}], "}"}]}]}], "\n", "             ", 
     "\n", "]"}]}], ";"}], "\n"}]], "Code",ExpressionUUID->"39c9962b-4fd5-\
4ffd-aa92-bff6fe1700f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatchingPairs", "[", 
    RowBox[{"extbuyer_List", ",", " ", "extseller_List"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tkmin", ",", " ", "nwsl", ",", " ", "nwbuy", ",", "mptab"}], 
      "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"tkmin", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Length", "[", "extbuyer", "]"}], ",", " ", 
         RowBox[{"Length", "[", "extseller", "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"nwsl", " ", "=", "  ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"extseller", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "  ", 
             RowBox[{"i", " ", "+", " ", 
              RowBox[{"(", 
               RowBox[{"tkmin", "/", "2"}], ")"}], " ", "-", " ", "1"}]}], 
            "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "extseller", "]"}], "/", "2"}], ")"}]}], 
          "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"nwbuy", " ", "=", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OddQ", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "extbuyer", "]"}], "/", "2"}], ")"}], 
           "]"}], " ", "===", " ", "True"}], ",", " ", "\n", "        ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"extbuyer", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", "  ", 
               RowBox[{"i", " ", "+", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Length", "[", "extbuyer", "]"}], "/", "2"}], ")"}],
                 " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "extbuyer", "]"}], "/", "2"}], ")"}]}], 
            "}"}]}], "]"}], ",", " ", "\n", "        ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"extbuyer", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"i", " ", "+", " ", 
                RowBox[{"(", 
                 RowBox[{"tkmin", "/", "2"}], ")"}], "-", "1"}]}], "}"}]}], 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "extbuyer", "]"}], "/", "2"}], ")"}]}], 
            "}"}]}], "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"mptab", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"List", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"nwbuy", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "}"}]}], 
            "]"}], " ", "&"}], " ", "/@", " ", "nwsl"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "nwbuy", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"Apply", "[", 
       RowBox[{"Join", ",", " ", "mptab"}], "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"17a0834f-c9f8-4957-867b-97d7aefc6815"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxProfit", "[", 
     RowBox[{
     "matchli_List", ",", " ", "assmat_List", ",", " ", "bplayer_List", ",", 
      " ", "splayer_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AssignmentProblem", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vrb", ",", "matchmat", ",", " ", "profitmat", ",", " ", "profitli"}], 
       "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"vrb", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"vrb", ",", "True"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<matpl=\>\"", ",", " ", "matchli"}], "]"}], ";"}], ",",
          " ", "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"Clear", "[", "Global`beta", "]"}], ";", "\n", "    ", 
       RowBox[{"matchmat", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{"List", "[", 
            RowBox[{"#", ",", "splayer"}], "]"}], "]"}], " ", "&"}], " ", "/@",
          " ", "bplayer"}]}], ";", " ", "\n", "    ", 
       RowBox[{"profitmat", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"Global`beta", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@",
          " ", "matchmat"}]}], ";", "\n", "    ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Set", "[", 
           RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"profitmat", ",", " ", "assmat"}], "}"}]}], "]"}], ";", 
       "\n", "    ", 
       RowBox[{"profitli", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "matchli", "]"}], " ", "===", " ", "2"}], 
          ",", " ", 
          RowBox[{"Global`beta", "[", "matchli", "]"}], " ", ",", "\n", 
          "                                    ", 
          RowBox[{
           RowBox[{"Depth", "[", "matchli", "]"}], " ", "===", " ", "3"}], 
          ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Global`beta", "[", "#", "]"}], " ", "&"}], " ", "/@", 
           " ", 
           RowBox[{"{", "matchli", "}"}]}], ",", "\n", 
          "                                    ", 
          RowBox[{
           RowBox[{"Depth", "[", "matchli", "]"}], " ", "===", " ", "5"}], 
          ",", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Global`beta", "[", "#", "]"}], " ", "&"}], " ", "/@",
                " ", 
               RowBox[{"matchli", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", " ", "i"}], "]"}], "]"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", 
                RowBox[{"Length", "[", 
                 RowBox[{"matchli", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
            ",", " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", 
              RowBox[{"Length", "[", "matchli", "]"}]}], "}"}]}], "]"}], ",", 
          "\n", "                                    ", "True", ",", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Global`beta", "[", "#", "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"matchli", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"Length", "[", "matchli", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"vrb", ",", "True"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<prfli=\>\"", ",", " ", "profitli"}], "]"}], ";"}], 
         ",", " ", "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "matchli", "]"}], " ", "<=", " ", "3"}], ",", 
         " ", 
         RowBox[{"Max", "[", 
          RowBox[{"Total", "[", " ", "profitli", "]"}], "]"}], ",", " ", "\n",
          "                 ", 
         RowBox[{
          RowBox[{"Depth", "[", "matchli", "]"}], " ", "===", " ", "5"}], ",",
          " ", 
         RowBox[{"Max", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", " ", "#", "]"}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"profitli", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"Length", "[", "profitli", "]"}]}], "}"}]}], "]"}], 
          "]"}], ",", " ", "\n", "                 ", "True", ",", " ", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", " ", "#", "]"}], " ", "&"}], " ", "/@", " ",
            "profitli"}], "]"}]}], "]"}]}]}], "\n", "    ", "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Euclidean", " ", "Distance"}], ",", " ", 
    RowBox[{"Spelling", " ", "Euclidian", " ", "is", " ", "not", " ", 
     RowBox[{"protected", "!"}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EuclidianDistance", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"EuclidianDistance", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EuclidianDistance", "[", 
     RowBox[{"liste_", ",", "refliste_"}], "]"}], ":=", "\n", "          ", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Depth", "[", "liste", "]"}], " ", "==", " ", "3"}], ",", " ", 
      
      RowBox[{
       RowBox[{
        RowBox[{"EuclidianDist", "[", 
         RowBox[{"#", ",", " ", "refliste"}], "]"}], " ", "&"}], " ", "/@", 
       " ", "liste"}], ",", "\n", "                ", 
      RowBox[{
       RowBox[{"Depth", "[", "liste", "]"}], " ", "==", " ", "2"}], ",", " ", 
      
      RowBox[{"EuclidianDist", "[", 
       RowBox[{"liste", ",", " ", "refliste"}], "]"}], ",", "\n", 
      "                ", "True", ",", 
      RowBox[{"DisplayEuk", "[", "liste", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EuclidianDist", "[", 
     RowBox[{"liste_", ",", " ", "refliste_"}], "]"}], " ", ":=", " ", 
    RowBox[{"N", "[", 
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"Total", "[", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"#1", " ", "-", " ", "#2"}], ",", " ", "2"}], "]"}], " ",
            "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"liste", ",", " ", "refliste"}], "}"}]}], "]"}], "]"}], 
       ",", " ", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}], "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DisplayEuk", "[", "liste_", "]"}], ":=", 
   RowBox[{"(", "\n", "       ", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Depth is equal to \>\"", ",", 
       RowBox[{"Depth", "[", "liste", "]"}]}], "]"}], ";", "\n", "       ", 
     RowBox[{
     "Print", "[", "\"\<Usage: EuclidianDistance[liste,refliste]\>\"", "]"}], 
     ";", "\n", "       ", 
     RowBox[{
     "Print", "[", 
      "\"\<Input format of the variable 'liste' is not correct.\>\"", "]"}], 
     ";", "\n", "       ", 
     RowBox[{
     "Print", "[", "\"\<The variable 'liste' must be a list.\>\"", "]"}]}], 
    "\n", ")"}]}], ";"}]}], "Code",ExpressionUUID->"e9d75547-14bd-4e1e-9e49-\
854c25c857d1"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Assigning", " ", "symmetric", " ", "values"}], " ", "*)"}]], "Code",\
ExpressionUUID->"a396c01f-8cc3-41cf-80ea-02573f5e59c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssignValues", "[", 
    RowBox[{"univers_List", ",", " ", "alp_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "      ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "alp", "]"}], " ", "!=", " ", "0"}], ",", "\n",
        "        ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "univers", "]"}], " ", "===", " ", 
          RowBox[{"First", "[", "alp", "]"}]}], ",", " ", "Global`\[Alpha]", 
         ",", " ", "\n", "          ", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "univers", "]"}], "]"}], " ", "<=", " ", 
          "4"}], ",", " ", "Global`\[Lambda]", ",", " ", "True", ",", " ", 
         "Global`\[Sigma]"}], "]"}], ",", "\n", "                          ", 
       "True", ",", "\n", "        ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "univers", "]"}], "]"}], " ", "==", "  ", 
          "5"}], ",", "Global`\[Theta]", ",", "\n", "          ", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "univers", "]"}], "]"}], " ", "==", "  ", 
          "6"}], ",", " ", "Global`\[Phi]", ",", "\n", "          ", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "univers", "]"}], "]"}], " ", ">=", " ", 
          "7"}], ",", " ", "\n", "          ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"First", "[", "univers", "]"}], "]"}], " ", "===", " ", 
            "7"}], ",", " ", "Global`\[Beta]", ",", " ", "\n", "            ", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"First", "[", "univers", "]"}], "]"}], " ", "=", " ", 
            "Global`\[Gamma]"}]}], "]"}], ",", " ", "True", ",", " ", 
         "Global`\[Sigma]"}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Code",Expres\
sionUUID->"26f2cb31-95c3-4b44-9104-820a54199468"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Coal2Dec", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Coal2Dec", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Coal2Dec", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T", ",", "ps", ",", "prs", ",", "xp", ",", "sxp"}], "}"}], ",",
      "\n", "   ", 
     RowBox[{
      RowBox[{"T", "=", 
       RowBox[{"Range", "[", "n", "]"}]}], ";", "\n", "   ", 
      RowBox[{"ps", "=", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "   ", 
      RowBox[{"prs", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"ps", ",", "1"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"xp", "=", 
       RowBox[{"prs", "-", "1"}]}], ";", "\n", "   ", 
      RowBox[{"sxp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "^", "#"}], ")"}], "&"}], "/@", "xp"}]}], ";", "\n", 
      "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", "#", "]"}], "&"}], "/@", " ", "sxp"}]}]}], "\n",
     "]"}]}], ";"}]}], "Code",ExpressionUUID->"d18be6fe-102a-4506-a826-\
f4740985369d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sets2Dec", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Sets2Dec", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Sets2Dec", "[", "sets_List", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xp", ",", "sxp"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"xp", "=", 
        RowBox[{"sets", "-", "1"}]}], ";", "\n", "   ", 
       RowBox[{"sxp", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "^", "#"}], ")"}], "&"}], "/@", "xp"}]}], ";", "\n", 
       "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", "#", "]"}], "&"}], "/@", " ", "sxp"}]}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BalancedSystemQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"BalancedSystemQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BalancedSystemQ", "[", 
     RowBox[{"coll_List", ",", " ", "T_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "BalancedSystemQ", "]"}]}]}], "]"}], 
    " ", ":=", "\n", "  ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mthd", ",", "zvec", ",", " ", "ovec", ",", " ", "pos", ",", " ", 
        "mat", ",", " ", "tmat", ",", " ", "smat", ",", " ", "d1", ",", " ", 
        "d2", ",", " ", "veco", ",", " ", "zf", ",", " ", "bv", ",", " ", 
        "yineq", ",", " ", "yeq", ",", " ", "cf", ",", " ", "rs", ",", " ", 
        "bq", ",", " ", "bcQ"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"mthd", "=", 
        RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "   ", "\n", 
       "   ", 
       RowBox[{"zvec", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"0", " ", "&"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"ovec", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"1", " ", "&"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ",
          "coll"}]}], ";", "\n", "   ", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ReplacePart", "[", 
           RowBox[{"zvec", ",", " ", "1", ",", " ", "#"}], "]"}], " ", "&"}], 
         " ", "/@", " ", "pos"}]}], ";", "\n", "   ", 
       RowBox[{"tmat", " ", "=", " ", 
        RowBox[{"Transpose", "[", "mat", "]"}]}], ";", "\n", "   ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d1", ",", " ", "d2"}], "}"}], " ", "=", " ", 
        RowBox[{"Dimensions", "[", "tmat", "]"}]}], ";", "\n", "   ", 
       RowBox[{"veco", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "d2"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
       
       RowBox[{"(*", 
        RowBox[{"max", " ", "Problem"}], "*)"}], "\n", "   ", 
       RowBox[{"zf", " ", "=", " ", 
        RowBox[{"-", 
         RowBox[{"tmat", ".", "veco"}]}]}], ";", "\n", "   ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"mat", ",", " ", "ovec"}], "]"}], ";", "\n", "   ", 
       RowBox[{"bv", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"0", " ", "&"}], ",", " ", 
          RowBox[{"d2", " ", "+", " ", "1"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"smat", " ", "=", " ", 
        RowBox[{"SparseArray", "[", "mat", "]"}]}], ";", "\n", "   ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"yineq", ",", "yeq"}], "}"}], ",", "res"}], "}"}], "=", 
        RowBox[{"LinearOptimization", "[", 
         RowBox[{"zf", ",", 
          RowBox[{"{", 
           RowBox[{"smat", ",", "bv"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "ovec", "}"}], ",", 
            RowBox[{"{", "0", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ConstraintSensitivity\>\"", ",", "\"\<PrimalMinimizer\>\""}], 
           "}"}], ",", 
          RowBox[{"Method", "->", "mthd"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"cf", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"-", "yineq"}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}], " ", "+", " ", "1"}], ")"}]}], ";", 
       "\n", "   ", 
       RowBox[{"rs", " ", "=", " ", 
        RowBox[{"tmat", ".", "cf"}]}], ";", "\n", "   ", 
       RowBox[{"bq", " ", "=", " ", 
        RowBox[{"Round", "[", "res", "]"}]}], ";", " ", "\n", 
       RowBox[{"(*", "\n", "   ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<bq=\>\"", ",", "bq"}], "]"}], ";", "\n", "   ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<cf=\>\"", ",", 
           RowBox[{"cf", "/", 
            RowBox[{"First", "[", "rs", "]"}]}]}], "]"}], ";"}], "\n", "*)"}],
        "\n", "   ", 
       RowBox[{"bcQ", " ", "=", " ", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"bq", ",", " ", 
           RowBox[{"_", "?", "Positive"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"bq", ",", " ", 
           RowBox[{"_", "?", "Negative"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"NumberQ", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
            "bq"}]}], "]"}]}]}], ";", "\n", "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"bcQ", ",", " ", "True"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"bcQ", ",", " ", 
           RowBox[{"cf", "/", 
            RowBox[{"First", "[", "rs", "]"}]}]}], "}"}], ",", "\n", "      ", 
         RowBox[{"{", 
          RowBox[{"bcQ", ",", " ", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{"Indeterminate", " ", "&"}], ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "}"}]}], "]"}]}]}],
      "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeaklyBalancedSystemQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"WeaklyBalancedSystemQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeaklyBalancedSystemQ", "[", 
    RowBox[{"coll_List", ",", " ", "b0_List", ",", "T_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "BalancedSystemQ", "]"}]}]}], "]"}], " ",
    ":=", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mthd", ",", "zvec", ",", " ", "ovec", ",", " ", "coll0", ",", "pos0", 
       ",", " ", "pos", ",", " ", "mat", ",", "tmat", ",", " ", "smat", ",", 
       " ", "d1", ",", " ", "d2", ",", " ", "veco", ",", " ", "zf", ",", " ", 
       "bv", ",", " ", "yineq", ",", " ", "yeq", ",", " ", "bq"}], "}"}], ",",
      "\n", "   ", 
     RowBox[{
      RowBox[{"mthd", "=", 
       RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", "   ", 
      RowBox[{"zvec", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", " ", "&"}], ",", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"ovec", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"1", " ", "&"}], ",", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"coll0", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"coll", ",", "b0"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"pos0", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "coll0"}]}], ";", "\n", "   ", 
      RowBox[{"mat0", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ReplacePart", "[", 
          RowBox[{"zvec", ",", " ", "1", ",", " ", "#"}], "]"}], " ", "&"}], 
        " ", "/@", " ", "pos0"}]}], ";", "\n", "   ", 
      RowBox[{"tmat", " ", "=", " ", 
       RowBox[{"Transpose", "[", "mat0", "]"}]}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d1", ",", " ", "d2"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "tmat", "]"}]}], ";", "\n", "   ", 
      RowBox[{"veco", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "d2"}], "}"}]}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"(*", 
       RowBox[{"max", " ", "Problem"}], "*)"}], "\n", "   ", 
      RowBox[{"zf", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"tmat", ".", "veco"}]}]}], ";", "\n", "   ", 
      RowBox[{"pos", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "coll"}]}], ";", "\n", "   ", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ReplacePart", "[", 
          RowBox[{"zvec", ",", " ", "1", ",", " ", "#"}], "]"}], " ", "&"}], 
        " ", "/@", " ", "pos"}]}], ";", "\n", "   ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mat", ",", " ", "ovec"}], "]"}], ";", "\n", "   ", 
      RowBox[{"tmat", " ", "=", " ", 
       RowBox[{"Transpose", "[", "mat", "]"}]}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d1", ",", " ", "d2"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "tmat", "]"}]}], ";", "\n", "   ", 
      RowBox[{"bv", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", " ", "&"}], ",", " ", "d2"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"smat", " ", "=", " ", 
       RowBox[{"SparseArray", "[", "mat", "]"}]}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"yineq", ",", "yeq"}], "}"}], ",", "res"}], "}"}], "=", 
       RowBox[{"LinearOptimization", "[", 
        RowBox[{"zf", ",", 
         RowBox[{"{", 
          RowBox[{"smat", ",", "bv"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "ovec", "}"}], ",", 
           RowBox[{"{", "0", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<ConstraintSensitivity\>\"", ",", "\"\<PrimalMinimizer\>\""}], 
          "}"}], ",", 
         RowBox[{"Method", "->", "mthd"}]}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"bq", " ", "=", " ", 
       RowBox[{"Round", "[", "res", "]"}]}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"bq", ",", " ", 
         RowBox[{"_", "?", "Positive"}]}], "]"}], " ", "&&", " ", 
       RowBox[{"FreeQ", "[", 
        RowBox[{"bq", ",", " ", 
         RowBox[{"_", "?", "Negative"}]}], "]"}], " ", "&&", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"NumberQ", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "bq"}]}], "]"}]}]}]}], "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID\
->"e94abaa6-45f6-4035-9e2b-be28b3627229"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetCardinalityGame", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GetCardinalityGame", "::", "argerr"}], "]"}], ";", "$Failed"}],
     ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetCardinalityGame", "[", 
     RowBox[{"T_List", ",", "k_Integer"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "cos", "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"cos", " ", "=", " ", 
        RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"LessEqual", "[", 
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ",", " ", "k"}], "]"}], ",", 
           "0", ",", 
           RowBox[{"Length", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@", 
        " ", "cos"}]}]}], " ", "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymGameSizeK", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SymGameSizeK", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymGameSizeK", "[", 
    RowBox[{"T_List", ",", "k_Integer", ",", "val_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lt2", ",", "sbs", ",", "rl", ",", "tkr", ",", "srl"}], "}"}], 
     ",", "\n", "  ", 
     RowBox[{
      RowBox[{"lt2", "=", 
       RowBox[{
        RowBox[{"Length", "[", "T", "]"}], "/", "2"}]}], ";", "\n", "  ", 
      RowBox[{"sbs", "=", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], " ", "/@", 
       " ", "sbs"}], ";", "\n", "  ", 
      RowBox[{
       RowBox[{"v", "[", "T", "]"}], "=", 
       RowBox[{"lt2", "*", "val"}]}], ";", "\n", "  ", 
      RowBox[{"rl", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"RotateLeft", "[", 
          RowBox[{"T", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", "T"}]}],
       ";", "\n", "  ", 
      RowBox[{"tkr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", 
           RowBox[{"-", "k"}]}], "]"}], " ", "&"}], " ", "/@", " ", "rl"}]}], 
      ";", "\n", "  ", 
      RowBox[{"srl", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "tkr"}]}], ";", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], ",", "val"}], "]"}], "&"}], " ", "/@",
        " ", "srl"}], ";", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}]}],
     "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->"0f80b940-c04b-4d2f-9671-\
9f854de3b23d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SymGameType2", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SymGameType2", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymGameType2", "[", 
    RowBox[{"T_List", ",", "S_List", ",", "val_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "S2", ",", "sbs", ",", "csb", ",", "asv", ",", "cl2", ",", "cw"}], 
      "}"}], ",", "\n", " ", 
     RowBox[{
      RowBox[{"S2", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"T", ",", "S"}], "]"}]}], ";", "\n", " ", 
      RowBox[{"sbs", "=", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", " ", 
      RowBox[{"cl2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ",", "2"}], "]"}], ",", "#", 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}],
       ";", "\n", " ", 
      RowBox[{"cl2", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"cl2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", " ", 
      RowBox[{"csb", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"sbs", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "cl2"}], "]"}]}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"v", "[", "T", "]"}], "=", 
       RowBox[{"2", "*", "val"}]}], ";", "\n", " ", 
      RowBox[{"asv", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"AssValToCoal2", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "val", ",", "S", ",", 
            "S2"}], "]"}], "]"}], " ", "&"}], " ", "/@", " ", "cl2"}]}], ";", 
      "\n", " ", 
      RowBox[{"cw", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", "sbs"}]}], ";", 
      "\n", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Set", "[", 
          RowBox[{
           RowBox[{"v", "[", "#1", "]"}], ",", "#2"}], "]"}], " ", "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"cl2", ",", "asv"}], "}"}]}], "]"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], " ", "/@", 
       " ", "csb"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}]}],
     "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->"0b807d37-055a-4a83-8758-\
cf9387ecfb6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SymGameType3", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SymGameType3", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymGameType3", "[", 
    RowBox[{"T_List", ",", "S_List", ",", "val_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "S2", ",", "sbs", ",", "csb", ",", "asv", ",", "cl3", ",", "cw"}], 
      "}"}], ",", "\n", " ", 
     RowBox[{
      RowBox[{"S2", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"T", ",", "S"}], "]"}]}], ";", "\n", " ", 
      RowBox[{"sbs", "=", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", " ", 
      RowBox[{"cl3", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ",", "3"}], "]"}], ",", "#", 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}],
       ";", "\n", " ", 
      RowBox[{"cl3", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"cl3", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", " ", 
      RowBox[{"csb", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"sbs", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "cl3"}], "]"}]}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"v", "[", "T", "]"}], "=", 
       RowBox[{"2", "*", "val"}]}], ";", "\n", " ", 
      RowBox[{"asv", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"AssValToCoal3", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "val", ",", "S", ",", 
            "S2"}], "]"}], "]"}], " ", "&"}], " ", "/@", " ", "cl3"}]}], ";", 
      "\n", " ", 
      RowBox[{"cw", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", "sbs"}]}], ";", 
      "\n", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Set", "[", 
          RowBox[{
           RowBox[{"v", "[", "#1", "]"}], ",", "#2"}], "]"}], " ", "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"cl3", ",", "asv"}], "}"}]}], "]"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], " ", "/@", 
       " ", "csb"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}]}],
     "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->"a37de779-059c-4bc2-bbaa-\
25a2a97a2e6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SymGameType4", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SymGameType4", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymGameType4", "[", 
    RowBox[{"T_List", ",", "S_List", ",", "val_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "S2", ",", "sbs", ",", "csb", ",", "asv", ",", "cl4", ",", "cw"}], 
      "}"}], ",", "\n", " ", 
     RowBox[{
      RowBox[{"S2", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"T", ",", "S"}], "]"}]}], ";", "\n", " ", 
      RowBox[{"sbs", "=", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", " ", 
      RowBox[{"cl4", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], ",", "4"}], "]"}], ",", "#", 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}],
       ";", "\n", " ", 
      RowBox[{"cl4", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"cl4", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", " ", 
      RowBox[{"csb", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"sbs", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "cl4"}], "]"}]}], ";", "\n", " ", 
      RowBox[{
       RowBox[{"v", "[", "T", "]"}], "=", 
       RowBox[{"2", "*", "val"}]}], ";", "\n", " ", 
      RowBox[{"asv", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"AssValToCoal4", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "val", ",", "S", ",", 
            "S2"}], "]"}], "]"}], " ", "&"}], " ", "/@", " ", "cl4"}]}], ";", 
      "\n", " ", 
      RowBox[{"cw", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", "sbs"}]}], ";", 
      "\n", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Set", "[", 
          RowBox[{
           RowBox[{"v", "[", "#1", "]"}], ",", "#2"}], "]"}], " ", "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"cl4", ",", "asv"}], "}"}]}], "]"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], " ", "/@", 
       " ", "csb"}], ";", "\n", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "sbs"}]}]}],
     "\n", "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->"9816d62f-9ded-40a7-\
929d-d8293753f7fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssValToCoal2", "[", 
    RowBox[{
    "i_Integer", ",", "j_Integer", ",", "val_Integer", ",", "S1_List", ",", 
     "S2_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "        ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "!=", "j"}], ")"}], ",", "True"}], "]"}], ",", "\n", 
       "                   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"S1", ",", "i"}], "]"}], " ", "&&", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"S1", ",", "j"}], "]"}]}], ")"}], ",", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}], "]"}], "=", "val"}], ",", "0"}], 
        "]"}], ",", "\n", "             ", "True", ",", " ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<NAN\>\"", "]"}], ";"}]}], "\n", "        ",
       "]"}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->"d0c3a8bb-aa97-\
428f-ad4f-cfdca6e7e119"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssValToCoal3", "[", 
    RowBox[{
    "i_Integer", ",", "j_Integer", ",", "k_Integer", ",", "val_Integer", ",", 
     "S1_List", ",", "S2_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "        ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "!=", "j", "!=", "k"}], ")"}], ",", "True"}], "]"}], 
       ",", "\n", "                   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"S1", ",", "i"}], "]"}], " ", "&&", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"S1", ",", "j"}], "]"}], " ", "&&", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"S2", ",", "k"}], "]"}]}], ")"}], ",", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "k"}], "}"}], "]"}], "=", "val"}], 
         ",", "0"}], "]"}], ",", "\n", "             ", "True", ",", " ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<NAN\>\"", "]"}], ";"}]}], "\n", "        ",
       "]"}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->"b08fdb52-fc5d-\
4243-a587-a47348496f9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssValToCoal4", "[", 
    RowBox[{
    "i_Integer", ",", "j_Integer", ",", "k_Integer", ",", "l_Integer", ",", 
     "val_Integer", ",", "S1_List", ",", "S2_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "        ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "!=", "j", "!=", "k", "!=", "l"}], ")"}], ",", 
         "True"}], "]"}], ",", "\n", "                   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"S1", ",", "i"}], "]"}], " ", "&&", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"S1", ",", "j"}], "]"}], " ", "&&", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"S2", ",", "k"}], "]"}], " ", "&&", " ", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"S2", ",", "l"}], "]"}]}], ")"}], ",", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "}"}], "]"}], "=", 
          "val"}], ",", "0"}], "]"}], ",", "\n", "             ", "True", ",",
        " ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<NAN\>\"", "]"}], ";"}]}], "\n", "        ",
       "]"}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->"f89b6320-246f-\
499e-82ef-b6a4e99bd08a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Lie", " ", "Groups"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LieBracket", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"LieBracket", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LieBracket", "[", 
      RowBox[{
       RowBox[{"mat01_", "?", "ListQ"}], ",", 
       RowBox[{"mat02_", "?", "ListQ"}]}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"mat01", ".", "mat02"}], " ", "-", " ", 
      RowBox[{"mat02", ".", "mat01"}]}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Linear", " ", "Algebra"}], " ", "*)"}]}]}]], "Code",ExpressionUUI\
D->"aa3e2570-02ff-4f62-a02d-a40d31f560a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Inspired", " ", "by", " ", 
     RowBox[{"StackExchange", ":", " ", "https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"math", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "4266981"}], "/", "a"}], "-", "simple", "-", 
     "case", "-", "of", "-", "euclidean", "-", "space", "-", "vector"}]}], 
   "  ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SortVecDecOrder", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"SortVecDecOrder", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SortVecDecOrder", "[", "vec_List", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lv", ",", "T1", ",", "pws", ",", "szp", ",", "it", ",", "pos"}], 
        "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"lv", "=", 
         RowBox[{"Length", "[", "vec", "]"}]}], ";", "\n", "  ", 
        RowBox[{"T1", "=", 
         RowBox[{"Range", "[", "lv", "]"}]}], ";", "\n", "  ", 
        RowBox[{"pws", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T1", "]"}], ",", "1"}], "]"}]}], ";", 
        "\n", "  ", 
        RowBox[{"szp", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], " ", "&"}], "/@", " ", 
          "pws"}]}], ";", "\n", "  ", 
        RowBox[{"it", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{"pws", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"szp", ",", "#"}], "]"}]}], "]"}], " ", "&"}], "/@", 
          " ", "T1"}]}], ";", "\n", "  ", 
        RowBox[{"pos", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"List", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
          "it"}]}], ";", "\n", "  ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Extract", "[", 
                RowBox[{"vec", ",", "#"}], "]"}], "]"}], " ", "&"}], "/@", 
             " ", "#"}], "]"}], " ", "&"}], ",", " ", "pos"}], "]"}]}]}], 
      "\n", "]"}]}], ";"}], "\n"}]}]], "Code",ExpressionUUID->"9d65ca91-fbe5-\
408c-bb8e-47dce69f2d7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Borrowed", " ", "from", " ", "WolframMathWorld"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AdjointMatrix", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"AdjointMatrix", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjointMatrix", "[", "mat_List", "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"Conjugate", "@", 
       RowBox[{"Transpose", "@", "mat"}]}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsHermitianMatrixQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"IsHermitianMatrixQ", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsHermitianMatrixQ", "[", "mat_List", "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"mat", " ", "===", " ", 
       RowBox[{"Conjugate", "@", 
        RowBox[{"Transpose", "@", "mat"}]}]}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Borrowed", " ", "from", " ", "StackExchange"}], " ", "*)"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RStirlingNumber", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"RStirlingNumber", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RStirlingNumber", "[", 
      RowBox[{"_", ",", " ", "0", ",", " ", "0"}], "]"}], " ", "=", " ", 
     "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RStirlingNumber", "[", 
       RowBox[{"r_", ",", " ", "n_", ",", " ", "1"}], "]"}], " ", "/;", " ", 
      RowBox[{"n", " ", ">=", " ", "r"}]}], " ", "=", " ", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RStirlingNumber", "[", 
       RowBox[{"r_", ",", " ", "n_", ",", " ", "k_"}], "]"}], " ", "/;", " ", 
      
      RowBox[{
       RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"n", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"n", " ", ">=", " ", 
        RowBox[{"k", " ", "r"}]}]}]}], " ", ":=", " ", "\n", "   ", 
     RowBox[{
      RowBox[{"RStirlingNumber", "[", 
       RowBox[{"r", ",", " ", "n", ",", " ", "k"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"k", " ", 
        RowBox[{"RStirlingNumber", "[", 
         RowBox[{"r", ",", " ", 
          RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "k"}], "]"}]}], " ", 
       "+", " ", 
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"n", " ", "-", " ", "1"}], ",", " ", 
          RowBox[{"r", " ", "-", " ", "1"}]}], "]"}], " ", 
        RowBox[{"RStirlingNumber", "[", 
         RowBox[{"r", ",", " ", 
          RowBox[{"n", " ", "-", " ", "r"}], ",", " ", 
          RowBox[{"k", " ", "-", " ", "1"}]}], "]"}]}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RStirlingNumber", "[", "___", "]"}], " ", "=", " ", "0"}], 
    ";"}], "\n"}]}]], "Code",ExpressionUUID->"0efd1796-5fdc-44f6-a606-\
1f4d5cd411f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}]], "Code",ExpressionUUID->\
"cd3b0f1a-b4a1-4d04-8917-1af64808c737"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Code",ExpressionUUID->"d5cb18e7-6771-4614-a548-52f2d73d5ba0"]
},
WindowSize->{606., 583.5},
WindowMargins->{{144, Automatic}, {Automatic, 90.75}},
TaggingRules-><|"CodeFormatter" -> <|"ToolbarState" -> False|>|>,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"57d63bd7-6711-4be9-a774-12cf0bcd2e0f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 22462, 497, 5152, "Code",ExpressionUUID->"beacc61c-854b-41fe-b700-40bdde4a9674"],
Cell[23023, 519, 2573, 67, 408, "Code",ExpressionUUID->"7d311e80-f394-4c61-a618-03d902ced597"],
Cell[25599, 588, 9470, 250, 841, "Code",ExpressionUUID->"26997b38-8a89-41c3-88cd-0d1f2bb5e6bb"],
Cell[35072, 840, 3023, 83, 70, "Code",ExpressionUUID->"f2365505-ec4a-4dc1-95ce-2008e0782f8f"],
Cell[38098, 925, 3243, 87, 70, "Code",ExpressionUUID->"dfa13961-8fe7-4346-9ea5-ace719f586bb"],
Cell[41344, 1014, 1593, 42, 70, "Code",ExpressionUUID->"bfc33b68-1aad-4e29-a4b3-1978d9406d4d"],
Cell[42940, 1058, 1916, 49, 70, "Code",ExpressionUUID->"ab9c9af9-dbf3-40fa-b22a-c1617baf3868"],
Cell[44859, 1109, 1339, 36, 70, "Code",ExpressionUUID->"42dd7cfe-8451-421a-becf-1d69ff925065"],
Cell[46201, 1147, 573, 13, 70, "Code",ExpressionUUID->"959ea692-476b-410a-9ee3-6637cd0c84b6"],
Cell[46777, 1162, 5752, 148, 70, "Code",ExpressionUUID->"944abe29-dfa4-4f15-b7be-f60c2a4175ca"],
Cell[52532, 1312, 3699, 100, 70, "Code",ExpressionUUID->"3c4859d3-293e-4c41-ad63-0f00371d173e"],
Cell[56234, 1414, 6959, 183, 70, "Code",ExpressionUUID->"fba1043e-c494-43aa-9352-baf701ff0dcc"],
Cell[63196, 1599, 3222, 85, 70, "Code",ExpressionUUID->"6a4339be-8aa8-46f4-b65a-927c2b1b26f6"],
Cell[66421, 1686, 3761, 94, 70, "Code",ExpressionUUID->"9903f735-b517-48a1-8d81-61b3e8534315"],
Cell[70185, 1782, 6434, 164, 70, "Code",ExpressionUUID->"7a02ed81-a540-4ff9-b71e-81980d9fb16c"],
Cell[76622, 1948, 3681, 98, 70, "Code",ExpressionUUID->"45cab418-8589-4fc4-9642-028496312b72"],
Cell[80306, 2048, 13301, 315, 70, "Code",ExpressionUUID->"826e383f-8dfe-4fe2-9dfb-481d3c118de4"],
Cell[93610, 2365, 1057, 29, 70, "Code",ExpressionUUID->"39c9962b-4fd5-4ffd-aa92-bff6fe1700f4"],
Cell[94670, 2396, 3613, 95, 70, "Code",ExpressionUUID->"17a0834f-c9f8-4957-867b-97d7aefc6815"],
Cell[98286, 2493, 8222, 216, 70, "Code",ExpressionUUID->"e9d75547-14bd-4e1e-9e49-854c25c857d1"],
Cell[106511, 2711, 171, 3, 70, "Code",ExpressionUUID->"a396c01f-8cc3-41cf-80ea-02573f5e59c9"],
Cell[106685, 2716, 2166, 50, 70, "Code",ExpressionUUID->"26f2cb31-95c3-4b44-9104-820a54199468"],
Cell[108854, 2768, 1241, 37, 70, "Code",ExpressionUUID->"d18be6fe-102a-4506-a826-f4740985369d"],
Cell[110098, 2807, 11802, 302, 70, "Code",ExpressionUUID->"e94abaa6-45f6-4035-9e2b-be28b3627229"],
Cell[121903, 3111, 3044, 90, 70, "Code",ExpressionUUID->"0f80b940-c04b-4d2f-9671-9f854de3b23d"],
Cell[124950, 3203, 2902, 84, 70, "Code",ExpressionUUID->"0b807d37-055a-4a83-8758-cf9387ecfb6a"],
Cell[127855, 3289, 2984, 86, 70, "Code",ExpressionUUID->"a37de779-059c-4bc2-bbaa-25a2a97a2e6d"],
Cell[130842, 3377, 3072, 88, 70, "Code",ExpressionUUID->"9816d62f-9ded-40a7-929d-d8293753f7fa"],
Cell[133917, 3467, 1191, 33, 70, "Code",ExpressionUUID->"d0c3a8bb-aa97-428f-ad4f-cfdca6e7e119"],
Cell[135111, 3502, 1329, 35, 70, "Code",ExpressionUUID->"b08fdb52-fc5d-4243-a587-a47348496f9f"],
Cell[136443, 3539, 1477, 38, 70, "Code",ExpressionUUID->"f89b6320-246f-499e-82ef-b6a4e99bd08a"],
Cell[137923, 3579, 828, 24, 70, "Code",ExpressionUUID->"aa3e2570-02ff-4f62-a02d-a40d31f560a1"],
Cell[138754, 3605, 2534, 72, 70, "Code",ExpressionUUID->"9d65ca91-fbe5-408c-bb8e-47dce69f2d7d"],
Cell[141291, 3679, 3313, 91, 70, "Code",ExpressionUUID->"0efd1796-5fdc-44f6-a606-1f4d5cd411f8"],
Cell[144607, 3772, 145, 4, 70, "Code",ExpressionUUID->"cd3b0f1a-b4a1-4d04-8917-1af64808c737"],
Cell[144755, 3778, 112, 1, 70, "Code",ExpressionUUID->"d5cb18e7-6771-4614-a548-52f2d73d5ba0"]
}
]
*)

(* End of internal cache information *)

