(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1108775,      27844]
NotebookOptionsPosition[   1088711,      27629]
NotebookOutlinePosition[   1089103,      27645]
CellTagsIndexPosition[   1089060,      27642]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", "Title", ":", " ", 
    RowBox[{"TuGames", ".", "m"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"Syntax", "::", "stresc"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"General", "::", "obspkg"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", "Context", ":", " ", "TuGames`"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", "Summary", ":", "\t", "\n", "    ", 
     RowBox[{
     "This", " ", "package", " ", "is", " ", "an", " ", "extension", " ", 
      "to", " ", "the", " ", "package", " ", "written", " ", "by", " ", 
      "Michael", " ", "Carter", " ", "for", " ", "\n", "    ", "modeling", 
      " ", "and", " ", "calculating", " ", "solutions", " ", "and", " ", 
      "properties", " ", "for", " ", "cooperative", " ", "games", " ", "with",
       " ", "\n", "    ", "transferable", " ", 
      RowBox[{"utilities", "."}]}]}], " ", "\n", "*)"}], "\t\t\t", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", "Author", ":", "\t\t", "\n", "    ", 
     RowBox[{
      RowBox[{
      "Holger", " ", "Ingmar", " ", "Meinhardt", "\n", "    ", "Department", 
       " ", "of", " ", "Economics", "\n", "    ", "University", " ", "of", 
       " ", "Karlsruhe", " ", 
       RowBox[{"(", "KIT", ")"}], "\n", "    ", 
       RowBox[{"holger", ".", 
        RowBox[{"meinhardt", "@", "wiwi"}], ".", "uni"}]}], "-", 
      RowBox[{"karlsruhe", ".", "de"}]}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", 
     RowBox[{"Package", " ", "Version"}], ":", " ", 
     RowBox[{"2.6", ".1"}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", "\n", "   ", 
    RowBox[{
     RowBox[{":", 
      RowBox[{"Mathematica", " ", "Version"}], ":", " ", 
      RowBox[{"8.", "x"}]}], ",", " ", 
     RowBox[{"9.", "x"}], ",", " ", 
     RowBox[{"10.", "x"}], ",", " ", 
     RowBox[{"11.", "x"}], ",", " ", 
     RowBox[{
      RowBox[{
      "12.", "x", "\n", "\n", "   ", "Some", " ", "functions", " ", "are", 
       " ", "still", " ", "using", " ", 
       RowBox[{"ConstrainedMax", "[", "]"}], " ", "or", "\n", "   ", 
       RowBox[{"ConstrainedMin", "[", "]"}], " ", "rather", " ", "than", " ", 
       
       RowBox[{"NMaximize", "[", "]"}], " ", "or", " ", 
       RowBox[{"NMinimize", "[", "]"}], " ", "\n", "   ", "simply", " ", 
       "due", " ", "to", " ", "a", " ", "better", " ", 
       RowBox[{"performance", ".", " ", "According"}], " ", "to", " ", "our", 
       " ", "\n", "   ", "experience", " ", "the", " ", "old", " ", 
       "functions", " ", "are", " ", "up", " ", "to", " ", "50", " ", "times",
        " ", "faster", "\n", "   ", "than", " ", "the", " ", "new", " ", 
       RowBox[{"commands", ".", " ", "To"}], " ", "change", " ", "the", " ", 
       "solver", " ", "one", " ", "needs", "\n", "   ", "just", " ", "to", 
       " ", "set", " ", "CallMaximize"}], " ", "->", " ", 
      RowBox[{
       RowBox[{"True", " ", "or", " ", "CallMinimze"}], " ", "->", " ", 
       RowBox[{
        RowBox[{"True", ".", "\n", "   ", "One"}], " ", "shall", " ", "check",
         " ", "first", " ", "with", " ", 
        RowBox[{"Options", "[", "command", "]"}], " ", "if", " ", "the", " ", 
        "solver", "\n", "   ", "is", " ", 
        RowBox[{"available", ".", " ", "\n", "\n", "   ", "We"}], " ", 
        "observed", " ", "for", " ", "Mathematica", " ", "Version", " ", "7", 
        " ", "under", " ", "Linux", " ", 
        RowBox[{"x86", "/", "64"}], " ", "for", " ", "some", "\n", "   ", 
        "functions", " ", "like", " ", 
        RowBox[{"BalancedSelectionQ", "[", "]"}], " ", "a", " ", "Floating", 
        " ", "Point", " ", "Exception", " ", 
        RowBox[{"error", ".", " ", "\n", "   ", "\n", "   ", "Check"}], " ", 
        "the", " ", "following", " ", "example", " ", "on", " ", "your", " ", 
        "machine"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "if", " ", "you", " ", "also", " ", "encounter", "\n", "   ", "this", 
        " ", "kind", " ", "of", " ", 
        RowBox[{"bug", ".", "\n", "\n", "   ", "foo"}]}], "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"1.0", "&"}], ",", "1000"}], "]"}]}], ";", " ", 
      RowBox[{
       RowBox[{"1", "/", "foo"}], " ", "\n", "\n", "   ", "If", " ", "you", 
       " ", "get", " ", "the", " ", "result"}]}], ",", " ", 
     RowBox[{"everything", " ", "is", " ", "fine"}], ",", " ", 
     RowBox[{
     "otherwise", " ", "upgrade", " ", "to", " ", "Version", " ", "8."}]}], 
    "\n", "\n", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{":", "Package", ":", " ", 
      RowBox[{"Tested", " ", "under", " ", "Linux", " ", 
       RowBox[{"x86", "/", "64"}]}]}], ",", " ", 
     RowBox[{"HP", "-", "UX"}], ",", " ", 
     RowBox[{
     "AIX", " ", "and", " ", "OS", " ", "X", " ", "10.9", " ", "or", " ", 
      "later"}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{":", "Keywords", ":", "\n", "   ", 
      RowBox[{"Dual", " ", "Game"}]}], ",", " ", 
     RowBox[{"Superadditive", " ", "Game"}], ",", " ", 
     RowBox[{"Convex", " ", "Game"}], ",", " ", 
     RowBox[{"Strong", " ", "Convex", " ", "Game"}], ",", " ", 
     RowBox[{"Average", "-", 
      RowBox[{"Convex", " ", "Game"}]}], ",", "\n", "   ", "Kernel", ",", " ", 
     RowBox[{"balancing", " ", "Maximum", " ", 
      RowBox[{"Excesses", "."}]}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{":", "Sources", ":", "\n", "   ", 
        RowBox[{"G", ".", " ", "Bergantinos"}]}], " ", "&"}], " ", 
      RowBox[{"J", ".", " ", "Masso"}]}], ",", " ", 
     RowBox[{"Notes", " ", "on", " ", "a", " ", "new", " ", "compromise", " ", 
      RowBox[{"value", ":", " ", 
       RowBox[{
        RowBox[{"The", " ", "Chi"}], "-", "Value"}]}]}], ",", "\n", "   ", 
     RowBox[{"Optimization", " ", "1996"}], ",", " ", 
     RowBox[{"Vol", ".", " ", "38"}], ",", " ", 
     RowBox[{
      RowBox[{"pp", ".", " ", "277"}], "-", 
      RowBox[{
      "286.", "\n", "   ", "\n", "   ", "Chih", " ", "Chang", " ", "and", " ",
        "Theo", " ", "Driessen"}]}], ",", " ", 
     RowBox[{
      RowBox[{"(", "Pre", ")"}], "Kernel", " ", "Catchers", " ", "for", " ", 
      "Cooperative", " ", "Games"}], ",", "\n", "   ", 
     RowBox[{"OR", " ", "Spectrum"}], ",", " ", 
     RowBox[{"Vol", ".", " ", "17"}], ",", " ", 
     RowBox[{
     "1995", "\n", "\n", "   ", "Chih", " ", "Chang", " ", "and", " ", 
      "Ching", " ", "Yu", " ", "Kan"}], ",", " ", 
     RowBox[{"The", " ", "Bound", " ", "of", " ", "the", " ", "Kernel"}], ",",
      " ", 
     RowBox[{"Mathematical", " ", "Social", "\n", "   ", "Sciences"}], ",", 
     " ", 
     RowBox[{"Vol", ".", " ", "25"}], ",", " ", 
     RowBox[{"87", "-", "93"}], ",", " ", 
     RowBox[{
      RowBox[{
      "1992.", "\n", "\n", "   ", "Chih", " ", "Chang", " ", "and", " ", 
       "Chrong"}], "-", 
      RowBox[{"Hisan", " ", "Lian"}]}], ",", " ", 
     RowBox[{"Some", " ", "Results", " ", "on", " ", 
      RowBox[{"(", "Pre", ")"}], "Kernel", " ", "Catchers", " ", "and", "\n", 
      "   ", "the", " ", "Coincidence", " ", "of", " ", "the", " ", "Kernel", 
      " ", "and", " ", "Prekernel"}], ",", " ", 
     RowBox[{"International", " ", "Game", " ", "Theory", " ", "Review"}], 
     ",", "\n", "   ", 
     RowBox[{"Vol", ".", " ", "4"}], ",", " ", 
     RowBox[{"No", ".", " ", "3"}], ",", " ", 
     RowBox[{"201", "-", "211"}], ",", " ", 
     RowBox[{"2002.", " ", "\n", "\n", "   ", "Theo", " ", "Driessen"}], ",", 
     " ", 
     RowBox[{"Cooperative", " ", "Games"}], ",", " ", 
     RowBox[{"Solutions", " ", "and", " ", "Applications"}], ",", " ", 
     RowBox[{"Kluwer", " ", "Academic", "\n", "   ", "Publishers"}], ",", " ",
      "Dordrecht", ",", " ", 
     RowBox[{"1988.", "\n", "\n", "   ", "Theo", " ", 
      RowBox[{"Driessen", ".", " ", "The"}], " ", "Greedy", " ", "Bankruptcy",
       " ", 
      RowBox[{"Game", ":", " ", 
       RowBox[{
       "An", " ", "Alternative", " ", "Game", " ", "Theoretic", " ", 
        "Analysis", " ", "of", " ", "a", " ", "Bankruptcy", " ", 
        RowBox[{"Problem", ".", " ", "In"}], "\n", "   ", 
        RowBox[{"L", ".", "A", ".", " ", "Petrosjan"}], " ", "and", " ", 
        RowBox[{"V", ".", "V", ".", " ", "Mazalov"}]}]}]}], ",", " ", 
     "editors", ",", " ", 
     RowBox[{"Game", " ", "Theory", " ", "and", " ", "Applications"}], ",", 
     " ", 
     RowBox[{"volume", " ", "IV"}], ",", " ", 
     RowBox[{"pages", " ", "45"}], "\[Dash]", "61", ",", " ", "Commack", ",", 
     "\n", "   ", 
     RowBox[{"New", " ", "York"}], ",", " ", 
     RowBox[{"1998.", " ", "Nova", " ", "Science", " ", "Publishers", " ", 
      RowBox[{"Inc", ".", "\n", "\n", "\n", "   ", "E", ".", " ", "Inarra"}], 
      " ", "and", " ", 
      RowBox[{"J", ".", " ", "Usategui"}]}], ",", " ", 
     RowBox[{
     "The", " ", "Shapley", " ", "value", " ", "and", " ", "average", " ", 
      "convex", " ", "games"}], ",", " ", "\n", "   ", "IJGT", ",", " ", "22",
      ",", " ", 
     RowBox[{"13", "-", "29"}], ",", " ", 
     RowBox[{"1993.", "\n", "\n", "   ", 
      RowBox[{"U", ".", " ", "Faigle"}]}], ",", " ", 
     RowBox[{
      RowBox[{"W", ".", " ", "Kern"}], " ", "and", " ", 
      RowBox[{"J", ".", " ", "Kuipers"}]}], ",", " ", 
     RowBox[{
     "An", " ", "efficient", " ", "algorithm", " ", "for", " ", "nucleolus", 
      " ", "and", "\n", "   ", "prekernel", " ", "computation", " ", "in", 
      " ", "some", " ", "classes", " ", "of", " ", "Tu", " ", 
      RowBox[{"Games", ".", " ", "Memorandum"}], " ", 
      RowBox[{"No", ".", " ", "1464"}]}], ",", "\n", "   ", 
     RowBox[{"Faculty", " ", "of", " ", "Mathematical", " ", "Sciences"}], 
     ",", " ", 
     RowBox[{"University", " ", "of", " ", "Twente"}], ",", " ", 
     RowBox[{"1998.", "\n", "\n", "   ", 
      RowBox[{"Y", ".", " ", "Funaki"}]}], ",", " ", 
     RowBox[{
     "Upper", " ", "and", " ", "Lower", " ", "Bounds", " ", "of", " ", "the", 
      " ", "Kernel", " ", "and", " ", "Nucleolus"}], ",", " ", "\n", "   ", 
     "IJGT", ",", " ", 
     RowBox[{"121", "-", "129"}], ",", " ", 
     RowBox[{"1986.", "\n", "\n", "   ", 
      RowBox[{"Y", ".", " ", "Funaki"}], " ", "and", " ", 
      RowBox[{"H", ".", " ", "I", ".", " ", "Meinhardt"}]}], ",", " ", 
     RowBox[{
      RowBox[{"A", " ", "Note", " ", "on", " ", "the", " ", "Pre"}], "-", 
      RowBox[{"Kernel", " ", "and", " ", "Pre"}], "-", 
      RowBox[{
      "Nucleolus", " ", "\n", "   ", "for", " ", "Bankruptcy", " ", 
       "Game"}]}], ",", " ", 
     RowBox[{
     "The", " ", "Waseda", " ", "Journal", " ", "of", " ", "Political", " ", 
      "Science", " ", "and", " ", "Economics"}], ",", "\n", "   ", "Waseda", 
     ",", " ", "Japan", ",", " ", 
     RowBox[{"2006.", "\n", "\n", "   ", 
      RowBox[{"I", ".", " ", "Katsev"}], " ", "and", " ", 
      RowBox[{"E", ".", " ", "Yanovskaya"}]}], ",", " ", 
     RowBox[{
     "Between", " ", "the", " ", "Prekernel", " ", "and", " ", "the", " ", 
      "Prenucleolus"}], ",", " ", "mimeo", ",", " ", 
     RowBox[{"2009.", " ", "\n", "\n", "   ", 
      RowBox[{"K", ".", " ", "Kido", ".", " ", "A"}], " ", "nonlinear", " ", 
      "Approximation", " ", "of", " ", "the", " ", 
      RowBox[{"Nucleolus", ".", " ", "In"}], " ", 
      RowBox[{"W", ".", " ", "Takahashi"}], " ", "and", " ", 
      RowBox[{"T", ".", " ", "Tanaka"}]}], ",", "\n", "   ", "editors", ",", 
     " ", 
     RowBox[{
     "Proceedings", " ", "of", " ", "the", " ", "International", " ", 
      "Conference", " ", "on", " ", "Nonlinear", " ", "Analysis", " ", "and", 
      "\n", "   ", "Convex", " ", "Analysis"}], ",", " ", 
     RowBox[{"pages", " ", "307"}], "\[Dash]", "317", ",", " ", "Tokyo", ",", 
     " ", 
     RowBox[{"2004.", " ", "Yokohama", " ", "Publishers"}], ",", " ", 
     "Yokohama", ",", " ", 
     RowBox[{
      RowBox[{"Japan", "\n", "   ", "\n", "   ", 
       RowBox[{"K", ".", " ", "Kido", ".", " ", "Convergence"}], " ", 
       "Theorems", " ", "for", " ", "lp"}], "-", 
      RowBox[{
      "Norm", " ", "Minimizers", " ", "with", " ", "respect", " ", "to", " ", 
       
       RowBox[{"p", ".", " ", "Journal"}], " ", "of", "\n", "   ", 
       "Optimization", " ", "Theory", " ", "and", " ", "Applications"}]}], 
     ",", " ", 
     RowBox[{"125", ":", "577"}], "\[Dash]", "589", ",", " ", 
     RowBox[{"2005.", "\n", "   ", "\n", "   ", 
      RowBox[{"K", ".", " ", "Kido", ".", " ", "A"}], " ", "Modified", " ", 
      "Kohlberg", " ", "Criterion", " ", "and", " ", "a", " ", "Nonlinear", 
      " ", "Method", " ", "to", " ", "compute", " ", "the", " ", "Nucleolus", 
      "\n", "   ", "of", " ", "a", " ", "Cooperative", " ", 
      RowBox[{"Game", ".", " ", "Taiwanese"}], " ", "Journal", " ", "of", " ",
       "Mathematics"}], ",", " ", 
     RowBox[{"12", ":", "1581"}], "\[Dash]", "1590", ",", " ", 
     RowBox[{
      RowBox[{"2008.", "\n", "\n", "   ", 
       RowBox[{"M", ".", " ", "Leng"}], " ", "and", " ", 
       RowBox[{"M", ".", " ", "Parlar", ".", " ", "Analytic"}], " ", 
       "solution", " ", "for", " ", "the", " ", "nucleolus", " ", "of", " ", 
       "a", " ", "three"}], "-", 
      RowBox[{"player", " ", "cooperative", "\n", "   ", 
       RowBox[{"game", ".", " ", "Naval"}], " ", "Research", " ", "Logistics",
        " ", 
       RowBox[{"(", "NRL", ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"57", 
       RowBox[{"(", "7", ")"}]}], ":", "667"}], "\[Dash]", "672", ",", " ", 
     RowBox[{
      RowBox[{"2010.", " ", 
       RowBox[{"doi", ":", " ", 
        RowBox[{
         RowBox[{"10.1002", "/", "nav"}], 
         RowBox[{".20429", ".", "\n", "   ", "URL"}], " ", "https"}], ":"}]}],
       "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"onlinelibrary", ".", "wiley", ".", "com"}], "/", "doi"}], 
          "/", "abs"}], "/", "10.1002"}], "/", "nav"}], 
       RowBox[{
       ".20429", ".", "\n", "\n", "   ", "SC", ".", " ", "Littlechild"}], " ",
        "and", " ", 
       RowBox[{"KG", ".", " ", "Vaidya"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "The", " ", "propensity", " ", "to", " ", "disrupt", " ", "and", " ", 
       "the", " ", "disruption", " ", "nucleolus", "\n", "   ", "of", " ", 
       "a", " ", "characteristic", " ", "function", " ", 
       RowBox[{"game", ".", " ", "International"}], " ", "Journal", " ", "of",
        " ", "Game", " ", "Theory", " ", "5", 
       RowBox[{"(", "2", ")"}]}], ":", 
      RowBox[{"151", "-", "161"}]}], ",", "\n", "   ", 
     RowBox[{"1976.", "\n", "\n", "   ", 
      RowBox[{"M", ".", " ", "Maschler"}]}], ",", " ", 
     RowBox[{"The", " ", "Bargaining", " ", "Set"}], ",", " ", 
     RowBox[{"Kernel", " ", "and", " ", "Nucleolus"}], ",", " ", 
     RowBox[{"Handbook", " ", "of", " ", "Game", "\n", "   ", "Theory"}], ",",
      " ", 
     RowBox[{"Chapter", " ", "18"}], ",", " ", 
     RowBox[{"591", "-", "647"}], ",", " ", 
     RowBox[{"1992.", "\n", "\n", "   ", 
      RowBox[{"M", ".", " ", "Maschler"}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", ".", " ", "Peleg"}], " ", "and", " ", 
      RowBox[{"L", ".", "S", ".", " ", "Shapley"}]}], ",", " ", 
     RowBox[{"Geometric", " ", "Properties", " ", "of", " ", "Kernel"}], ",", 
     "  ", "\n", "   ", 
     RowBox[{"Nucleolus", " ", "and", " ", "related", " ", "Concepts"}], ",", 
     " ", 
     RowBox[{
     "in", " ", "Mathematics", " ", "of", " ", "Operations", " ", 
      "Research"}], ",", " ", "\n", "   ", 
     RowBox[{"Vol4", " ", 
      RowBox[{"Nov", ".", " ", "1979"}]}], ",", " ", 
     RowBox[{
      RowBox[{"p", ".", " ", "303"}], "-", 
      RowBox[{"338.", "\n", "\n", "   ", "J"}], "-", 
      RowBox[{"E", ".", " ", "Martinez"}], "-", "Legaz"}], ",", " ", 
     RowBox[{
      RowBox[{
      "Dual", " ", "Representation", " ", "of", " ", "Cooperative", " ", 
       "Games", " ", "based", " ", "on", " ", "\n", "   ", "Fenchel"}], "-", 
      RowBox[{"Moreau", " ", "Conjugation"}]}], ",", " ", "Optimization", ",",
      " ", 
     RowBox[{
      RowBox[{"pp", ".", " ", "291"}], "-", "319"}], ",", " ", 
     RowBox[{"Vol", ".", " ", "36"}], ",", " ", 
     RowBox[{"1996.", "\n", "\n", "   ", 
      RowBox[{"H", ".", " ", "I", ".", " ", "Meinhardt"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "An", " ", "LP", " ", "approach", " ", "to", " ", "compute", " ", "the",
        " ", "pre"}], "-", 
      RowBox[{"kernel", " ", "for", " ", "cooperative", " ", "games"}]}], ",",
      " ", "\n", "   ", 
     RowBox[{"Computers", " ", "and", " ", "Operation", " ", "Research"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"Vol", " ", 
       RowBox[{"33", "/", "2"}], " ", 
       RowBox[{"pp", ".", " ", "535"}]}], "-", "557"}], ",", 
     RowBox[{"2006.", "\n", "\n", "   ", 
      RowBox[{"H", ".", " ", "I", ".", " ", "Meinhardt"}]}], ",", " ", 
     RowBox[{
      RowBox[{"The", " ", "Pre"}], "-", 
      RowBox[{
      "Kernel", " ", "as", " ", "a", " ", "Tractable", " ", "Solution", " ", 
       "for", " ", "Cooperative", " ", 
       RowBox[{"Games", ":", "\n", "   ", 
        RowBox[{
        "An", " ", "Exercise", " ", "in", " ", "Algorithmic", " ", "Game", 
         " ", "Theory"}]}]}]}], ",", " ", 
     RowBox[{
     "Theory", " ", "and", " ", "Decision", " ", "Library", " ", "C"}], ",", 
     "\n", "   ", 
     RowBox[{"Springer", " ", "Publisher"}], ",", " ", 
     RowBox[{
      RowBox[{"Heidelberg", ".", " ", "pp", ".", " ", "1"}], "-", "247"}], 
     ",", " ", 
     RowBox[{"2013.", "  ", "\n", "\n", "   ", 
      RowBox[{"H", ".", " ", "I", ".", " ", "Meinhardt"}]}], ",", " ", 
     RowBox[{
      RowBox[{"A", " ", "Characterization", " ", "of", " ", "Average"}], "-", 
      
      RowBox[{
      "Convexity", " ", "based", " ", "on", " ", "Unanimity", " ", 
       "Coordinates"}]}], ",", "  ", "\n", "    ", "mimeo", ",", " ", 
     RowBox[{"2009.", "  ", "\n", "\n", "   ", 
      RowBox[{"H", ".", " ", "I", ".", " ", "Meinhardt", ".", " ", "The"}], 
      " ", "Modiclus", " ", 
      RowBox[{"Reconsidered", ".", " ", "Technical"}], " ", "report"}], ",", 
     " ", 
     RowBox[{
     "Karlsruhe", " ", "Institute", " ", "of", " ", "Technology", "\n", "   ", 
      RowBox[{"(", "KIT", ")"}]}], ",", " ", "Karlsruhe", ",", " ", "Germany",
      ",", " ", 
     RowBox[{
      RowBox[{"2018", 
       RowBox[{"b", ".", " ", "URL"}], " ", 
       RowBox[{"http", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.13140"}], "/", 
        "RG"}], ".2", ".2", ".32651", 
       RowBox[{
       ".75043", ".", "\n", "\n", "   ", "H", ".", " ", "I", ".", " ", 
        "Meinhardt", ".", " ", "Reconsidering"}], " ", "Related", " ", 
       "Solutions", " ", "of", " ", "the", " ", 
       RowBox[{"Modiclus", ".", " ", "Technical"}], " ", "report"}]}], ",", 
     "\n", "   ", 
     RowBox[{"Karlsruhe", " ", "Institute", " ", "of", " ", "Technology", " ", 
      RowBox[{"(", "KIT", ")"}]}], ",", " ", "Karlsruhe", ",", " ", "Germany",
      ",", " ", 
     RowBox[{
      RowBox[{"2018", 
       RowBox[{"c", ".", "\n", "   ", "URL"}], " ", 
       RowBox[{"http", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.13140"}], "/", 
         "RG"}], ".2", ".2", ".27739", ".82729", "\n", "   ", "\n", "   ", 
        RowBox[{"A", ".", " ", "Meseguer"}]}], "-", "Artola"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "Using", " ", "the", " ", "Indirect", " ", "Function", " ", "to", " ", 
       "characterize", " ", "the", " ", "Kernel", " ", "of", " ", "a", " ", 
       "TU"}], "-", "Game"}], ",", "\n", "   ", 
     RowBox[{"Departament", " ", 
      RowBox[{"d", "'"}], "Economia", " ", "i", " ", 
      RowBox[{"d", "'"}], "Historia", " ", "Economica"}], ",", " ", 
     RowBox[{"1997.", " ", "\n", "   ", "\n", "   ", 
      RowBox[{"G", ".", " ", "Owen"}]}], ",", " ", 
     RowBox[{"A", " ", "Note", " ", "on", " ", "the", " ", "Nucleolus"}], ",",
      " ", 
     RowBox[{
     "International", " ", "Journal", " ", "of", " ", "Game", " ", "Theory"}],
      ",", " ", "\n", "   ", 
     RowBox[{"Vol", ".", " ", "3."}], ",", " ", 
     RowBox[{
      RowBox[{"pp", ".", " ", "101"}], "-", "103"}], ",", " ", 
     RowBox[{"1974.", " ", "\n", "   ", "\n", "   ", 
      RowBox[{"G", ".", " ", "Owen"}]}], ",", " ", 
     RowBox[{"Game", " ", "Theory"}], ",", " ", 
     RowBox[{"Third", " ", "Edition"}], ",", " ", 
     RowBox[{"Academic", " ", "Press"}], ",", " ", 
     RowBox[{"1995.", "\n", "\n", "   ", 
      RowBox[{"C", ".", " ", "Rafels"}], " ", "and", " ", 
      RowBox[{"N", ".", " ", "Ybern"}]}], ",", " ", 
     RowBox[{
     "Even", " ", "and", " ", "Odd", " ", "Marginal", " ", "Worth", " ", 
      "Vectors"}], ",", " ", 
     RowBox[{
      RowBox[{"Owen", "'"}], "s", " ", "\n", "   ", "Multilinear", " ", 
      "Extension", " ", "and", " ", "Convex", " ", "Games"}], ",", " ", 
     "IJGT", ",", " ", 
     RowBox[{"113", "-", "126"}], ",", " ", 
     RowBox[{"1995.", " ", "\n", "\n", "   ", 
      RowBox[{"L", ".", " ", "M", ".", " ", "Ruiz"}]}], ",", " ", 
     RowBox[{"F", ".", " ", "Valenciano"}], ",", " ", 
     RowBox[{
      RowBox[{"and", " ", 
       RowBox[{"J", ".", " ", "M", ".", " ", "Zarzuelo", ".", " ", "The"}], 
       " ", "Least", " ", "Square", " ", "Pre"}], "-", 
      RowBox[{
      "Nucleolus", " ", "and", " ", "the", "\n", "   ", "Least", " ", 
       "Square", " ", 
       RowBox[{"Nucleolus", ".", " ", "Two"}], " ", "Values", " ", "for", " ",
        "TU", " ", "Games", " ", "based", " ", "on", " ", "the", " ", 
       "Excess", " ", 
       RowBox[{"Vector", ".", "\n", "   ", "International"}], " ", "Journal", 
       " ", "of", " ", "Game", " ", "Theory"}]}], ",", " ", 
     RowBox[{"25", ":", "113"}], "\[Dash]", "134", ",", " ", 
     RowBox[{"1996.", "\n", "   ", "\n", "   ", 
      RowBox[{"R", ".", " ", "T", ".", " ", "Rockafellar"}]}], ",", " ", 
     RowBox[{"Convex", " ", "Analysis"}], ",", " ", 
     RowBox[{"Princeton", " ", "University", " ", "Press"}], ",", " ", 
     RowBox[{"1970.", "\n", "\n", "   ", 
      RowBox[{"J", ".", " ", "M", ".", " ", "Solano"}], " ", "and", " ", 
      RowBox[{"C", ".", " ", "Rafels"}]}], ",", " ", 
     RowBox[{"Convexity", " ", "versus", " ", "average", " ", 
      RowBox[{"convexity", ":", " ", "potential"}]}], ",", " ", "\n", "   ", 
     "pmas", ",", " ", 
     RowBox[{
     "the", " ", "shapley", " ", "value", " ", "and", " ", "simple", " ", 
      "games"}], ",", " ", 
     RowBox[{"Documents", " ", "de", " ", "Treball"}], ",", " ", 
     RowBox[{"No", ".", " ", "3"}], ",", " ", "\n", "   ", 
     RowBox[{"Universitat", " ", "de", " ", "Barcelona"}], ",", " ", 
     RowBox[{"1996.", "\n", "\n", "   ", 
      RowBox[{"R", ".", "E", ".", " ", "Stearns"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "Convergent", " ", "Transfer", " ", "Schemes", " ", "for", " ", "N"}], 
      "-", 
      RowBox[{"Person", " ", "Games"}]}], ",", "\n", "   ", 
     RowBox[{
     "Transaction", " ", "American", " ", "Mathematical", " ", "Society"}], 
     ",", " ", 
     RowBox[{"449", "-", "459"}], ",", " ", 
     RowBox[{"1968.", "\n", "\n", "   ", "Sudhoelter", " ", 
      RowBox[{"(", "1997", ")"}]}], ",", " ", 
     RowBox[{"The", " ", "modified", " ", 
      RowBox[{"nucleolus", ":", " ", 
       RowBox[{"Properties", " ", "and", " ", 
        RowBox[{"axiomatizations", ".", "\n", "   ", "International"}], " ", 
        "Journal", " ", "of", " ", "Game", " ", "Theory"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"26", " ", 
       RowBox[{"(", "2", ")"}]}], ":", "147"}], "\[Dash]", "182", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Jun", " ", "1997.", " ", "ISSN", " ", "1432"}], "-", 
       RowBox[{"1270.", "\n", "   ", 
        RowBox[{"doi", ":", " ", 
         RowBox[{
          RowBox[{"10.1007", "/", 
           RowBox[{"BF01295846", ".", " ", "URL"}]}], " ", "https"}], 
         ":"}]}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"doi", ".", "org"}], "/", "10.1007"}], "/", 
        RowBox[{"BF01295846", ".", "\n", "   ", "\n", "   ", "Hal"}]}], " ", 
       "Varian", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ed", "."}], ")"}], ".", " ", "Economics"}], " ", "and", " ",
        "Financial", " ", "Modeling", " ", "with", " ", "Mathematica"}]}], 
     ",", " ", "\n", "   ", "Springer", ",", " ", "1992."}], " ", "\n", 
    "*)"}]}]}]], "Code",ExpressionUUID->"6e90713c-1023-4c94-8452-\
0d9536c84cab"],

Cell[BoxData[
 RowBox[{"(*", " ", "\n", "    ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "See", " ", "ChangeLog", " ", "file", " ", "for", " ", "a", " ", 
     "complete", " ", "list", " ", "of", " ", 
     RowBox[{"revisions", ".", "\n", "   ", "\n", "    ", "Version"}], " ", 
     "2.2"}], ":", "\n", "       ", 
    RowBox[{
    "Transcription", " ", "of", " ", "the", " ", "old", " ", "option", " ", 
     "rules", " ", "to", " ", "the", " ", "new", " ", "ones", " ", "invented",
      " ", "by", " ", "Mathematica", " ", "8.", 
     RowBox[{"x", ".", "\n", "       ", "This"}], " ", "package", " ", "is", 
     " ", "now", " ", "exclusively", " ", "dedicated", " ", "to", " ", 
     "Mathematica", " ", "version", " ", "8.", "x", " ", "and", " ", 
     RowBox[{"higher", ".", "\n", "\n", "       ", 
      RowBox[{"FilledCore", "[", "]"}]}], " ", "is", " ", "deprecated", " ", 
     RowBox[{"now", ".", " ", "Using"}], " ", "the", " ", "old", " ", 
     "graphic", " ", "concept", " ", "Version", " ", "1.8", " ", "is", " ", 
     RowBox[{"required", ".", " ", "\n", "\n", "    ", "Version"}], " ", 
     "2.3"}], ":", "\n", "       ", "Modification", ":", "      ", "\n", 
    "       ", 
    RowBox[{"Change", " ", "protected", " ", "command", " ", 
     RowBox[{"SubsetQ", "[", "]"}], " ", "to", " ", 
     RowBox[{"SubSetQ", "[", "]"}], " ", "from", " ", "the", " ", 
     "VertexEnum", " ", 
     RowBox[{"package", ".", " ", "Order"}], " ", "is", "\n", "       ", 
     "reversed", " ", "to", " ", 
     RowBox[{"SubsetQ", "[", "]"}], " ", "which", " ", "is", " ", "new", " ", 
     "in", " ", "Mathematica", " ", "version", " ", "10.", 
     RowBox[{"x", ".", "\n", "     ", "\n", "       ", "Some"}], " ", "minor",
      " ", "code", " ", 
     RowBox[{"revision", ".", " ", "\n", "   ", "\n", "       ", "New"}], " ",
      "Functions"}], ":", "\n", "        ", 
    RowBox[{
     RowBox[{"MLExtension", "[", "]"}], "           ", "-", " ", 
     RowBox[{"Computes", " ", "the", " ", "multi"}], "-", 
     RowBox[{"linear", " ", "extension", " ", "of", " ", "the", " ", 
      RowBox[{"game", ".", "\n", "        ", 
       RowBox[{"ShapleyValueML", "[", "]"}]}]}], "        ", "-", " ", 
     RowBox[{
     "Computes", " ", "the", " ", "Shapley", " ", "value", " ", "from", " ", 
      "the", " ", "multi"}], "-", 
     RowBox[{"linear", " ", "extension", " ", "of", " ", "the", " ", 
      RowBox[{"game", ".", "\n", "        ", 
       RowBox[{"PreKernel", "[", "]"}]}]}], "             ", "-", " ", 
     RowBox[{"Computes", " ", "a", " ", "pre"}], "-", 
     RowBox[{
     "kernel", " ", "point", " ", "by", " ", "Algorithm", " ", "8.2", ".1", 
      " ", "of", " ", "Meinhardt", " ", 
      RowBox[{
       RowBox[{"(", "2013", ")"}], ".", "\n", "\n", "       ", "Bug"}], " ", 
      RowBox[{"fixes", ":", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"FindKernelSolution", "[", "]"}], " ", "convergence", " ", 
         "process", " ", "to", " ", "the", " ", "kernel", " ", "should", " ", 
         "be", " ", "now", " ", "more", " ", 
         RowBox[{"robust", ".", " ", "\n", "\n", "    ", "Version"}], " ", 
         "2.4", "\n", "\n", "       ", "Some", " ", "minor", " ", "code", " ", 
         RowBox[{"revision", ".", "\n", "   ", "\n", "    ", "Version"}], " ",
          "2.5", "\n", "\n", "       ", "Adding", " ", "the", " ", "function",
          " ", 
         RowBox[{"ApproxNuc", "[", "]"}], " ", "to", " ", "compute", " ", 
         "the", " ", 
         RowBox[{"(", 
          RowBox[{"p", ",", "k"}], ")"}]}], "-", 
        RowBox[{
        "nucleolus", " ", "which", " ", "is", " ", "an", " ", "approximation",
          " ", "of", "\n", "       ", "the", " ", "nucleolus", " ", "by", " ",
          "a", " ", "non"}], "-", 
        RowBox[{"linear", " ", "optimization", " ", "approach"}]}]}]}]}]}], 
   ",", " ", 
   RowBox[{"i", ".", "e", "."}], ",", " ", 
   RowBox[{
    RowBox[{"minimizes", " ", "a", " ", "p"}], "-", 
    RowBox[{
     RowBox[{"norm", ".", " ", "The"}], " ", "function", "\n", "       ", 
     RowBox[{"NonLinNuc", "[", "]"}], " ", "is", " ", "based", " ", "on", " ",
      "this", " ", "function", " ", "to", " ", "compute", " ", "the", " ", 
     RowBox[{"nucleolus", ".", " ", "We"}], " ", "extended", " ", "this", " ",
      "idea", " ", "to", " ", "the", "\n", "       ", "pre"}], "-", 
    RowBox[{"nucleolus", " ", "through", " ", "the", " ", "commands", " ", 
     RowBox[{"ApproxPreNuc", "[", "]"}], " ", "and", " ", 
     RowBox[{
      RowBox[{"NonLinPreNuc", "[", "]"}], ".", " ", "In"}], " ", 
     "addition"}]}], ",", " ", 
   RowBox[{
   "we", " ", "added", "\n", "       ", "the", " ", "least", " ", "square", 
    " ", "computation", " ", "of", " ", "the", " ", 
    RowBox[{"(", 
     RowBox[{"pre", "-"}], ")"}], "nucleolus", " ", "by", " ", "the", " ", 
    "functions", " ", 
    RowBox[{"LSNuc", "[", "]"}], " ", "and", " ", 
    RowBox[{
     RowBox[{"LSPreNuc", "[", "]"}], ".", "\n", "\n", "       ", 
     "Functions"}], " ", "to", " ", "compute", " ", "the", " ", "barycenter", 
    " ", "of", " ", "the", " ", "extreme", " ", "points", " ", "of", " ", 
    "the", " ", "core"}], ",", " ", 
   RowBox[{"dual", " ", "cover", " ", "game"}], ",", "\n", "       ", 
   RowBox[{"dual", " ", "extension"}], ",", " ", 
   RowBox[{"primal", " ", "extension"}], ",", " ", "modiclus", ",", " ", 
   RowBox[{
    RowBox[{"a", " ", "proper", " ", "modified", " ", "pre"}], "-", 
    RowBox[{"kernel", " ", "element"}]}], ",", "\n", "       ", 
   RowBox[{"potential", " ", "of", " ", "a", " ", "game"}], ",", " ", 
   RowBox[{"the", " ", "Lorenz", " ", "solution"}], ",", " ", 
   RowBox[{
    RowBox[{"and", " ", "Dutta"}], "-", 
    RowBox[{
    "Ray", " ", "solution", " ", "for", " ", "convex", " ", "games", "\n", 
     "       ", "have", " ", "been", " ", 
     RowBox[{"added", ".", "\n", "\n", "       ", "Bug"}], " ", 
     RowBox[{"fixes", ":", "\n", "        ", 
      RowBox[{
       RowBox[{
       "An", " ", "insufficient", " ", "coloring", " ", "of", " ", "the", " ",
         "function", " ", 
        RowBox[{"FilledCoreV6", "[", "]"}], " ", "caused", " ", "by", " ", 
        "an", " ", "incomplete", " ", "delaunay", "\n", "        ", 
        "triangulation", " ", "of", " ", "the", " ", "Mathematica", " ", 
        "built"}], "-", 
       RowBox[{"in", " ", "function", " ", 
        RowBox[{"DelaunayTriangulation", "[", "]"}], " ", "has", " ", "been", 
        " ", 
        RowBox[{"fixed", ".", "\n", "\n", "    ", "Version"}], " ", "2.5", 
        ".1", " ", "\n", "        ", "Installation", " ", "procedure", " ", 
        "has", " ", 
        RowBox[{"changed", ".", " ", "The"}], " ", "package", " ", "is", " ", 
        "now", " ", "distributed", " ", "by", " ", 
        RowBox[{"Paclet", ".", " ", "The"}], " ", "documentation", "\n", 
        "        ", "was", " ", "revised", " ", "and", " ", 
        RowBox[{"extended", ".", " ", "About"}], " ", "230", " ", "pages", 
        " ", "were", " ", "added", " ", "to", " ", "the", " ", 
        RowBox[{"documentation", ".", " ", "The"}], " ", "error", " ", "\n", 
        "        ", "handling", " ", "of", " ", "functions", " ", "was", " ", 
        
        RowBox[{"improved", ".", "\n", "        ", "\n", "        ", "Some"}],
         " ", "minor", " ", "code", " ", "revision", " ", "and", " ", "bug", 
        " ", 
        RowBox[{"fixes", ".", "\n", "\n", "    ", "Version"}], " ", "2.5", 
        ".2", "\n", "\n", "        ", "We", " ", "have", " ", "revised", " ", 
        "the", " ", "Install", " ", "procedure", " ", "of", " ", "the", " ", 
        "Cddmathlink", " ", "library"}]}]}]}]}], ",", " ", 
   RowBox[{
   "which", " ", "makes", " ", "it", " ", "not", " ", "anymore", " ", 
    "necessary", "\n", "        ", "to", " ", "explicitly", " ", "formulate", 
    " ", "some", " ", "conditions", " ", "for", " ", "all", " ", "operating", 
    " ", 
    RowBox[{"systems", ".", " ", "Moreover"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "some", " ", "binaries", " ", "for", " ", "RHEL", " ", "7.5", "\n", 
     "        ", "ships", " ", "now", " ", "with", " ", "the", " ", 
     RowBox[{"package", ".", "\n", "\n", "        ", "Some"}], " ", "minor", 
     " ", "code", " ", "revision", " ", "and", " ", "bug", " ", 
     RowBox[{"fixes", ".", "\t", "\n", "\n", "    ", "Version"}], " ", "2.5", 
     ".3", "\n", "\n", "        ", "Adding", " ", "some", " ", "binaries", 
     " ", "for", " ", "Mathematica", " ", "10.0", " ", "or", " ", "later", 
     " ", "on", " ", "OS", " ", "X", " ", "10.9", " ", "or", " ", 
     RowBox[{"later", ".", " ", "We"}], " ", "are", " ", "very", " ", 
     "grateful", "\n", "        ", "to", " ", "Szabolcs", " ", 
     "Horv\[AAcute]t", " ", "for", " ", "providing", " ", "these", " ", "to", 
     " ", "the", " ", 
     RowBox[{"community", ".", "\n", "\n", "        ", "Change"}], " ", "of", 
     " ", "the", " ", "License", " ", "to", " ", "the", " ", "MIT", " ", 
     "License", " ", 
     RowBox[{"terms", ".", "\n", "\n", "    ", "Version"}], " ", "2.5", ".4", 
     " ", "\n", "\n", "        ", "Functions", " ", "to", " ", "compute", " ",
      "and", " ", "to", " ", "verify", " ", "the", " ", "simplified", " ", 
     "modified", " ", "pre"}], "-", 
    RowBox[{
     RowBox[{"kernel", "/", "nucleolus"}], " ", "are", " ", 
     RowBox[{"added", ".", " ", "They"}], " ", "are", " ", "called", "\n", 
     "        ", 
     RowBox[{"SMPrenucleolus", "[", "]"}]}]}], ",", 
   RowBox[{"IsSMPrenucleolusQ", "[", "]"}], ",", 
   RowBox[{"SMPreKernel", "[", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"IsSMPreKernelQ", "[", "]"}], ".", " ", "For"}], " ", "the", " ",
     "last", " ", "two", " ", "commands", " ", "we", " ", "implemented", "\n",
     "        ", "parallel", " ", "counterparts", " ", "called", " ", 
    RowBox[{"ParaSMPreKernel", "[", "]"}]}], ",", 
   RowBox[{
    RowBox[{"and", " ", 
     RowBox[{"ParaIsSMPreKernelQ", "[", "]"}], " ", 
     RowBox[{"respectively", ".", "\n", "\n", "        ", "Adding"}], " ", 
     "the", " ", "function", " ", 
     RowBox[{"BalancedCollectionQ", "[", "]"}], " ", "that", " ", "should", 
     " ", "replace", " ", "in", " ", "the", " ", "future", " ", "the", " ", 
     "function", " ", 
     RowBox[{
      RowBox[{"BalancedSelectionQ", "[", "]"}], ".", "\n", "        ", 
      "For"}], " ", "n"}], "=", 
    RowBox[{">", 
     RowBox[{
     "4", " ", "the", " ", "function", " ", "returns", " ", "incorrect", " ", 
      "results"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "probably", " ", "caused", " ", "by", " ", "a", " ", "bug", " ", "of", 
      " ", "the", " ", 
      RowBox[{"DualLinearProgramming", "[", "]"}], " ", 
      RowBox[{"function", ".", "\n", "\n", "        ", "Example"}], " ", "of",
       " ", "incorrect", " ", 
      RowBox[{"results", ":", "\n", "\n", "        ", 
       RowBox[{
       "Consider", " ", "the", " ", "collection", " ", "of", " ", "sets", " ",
         "given", " ", "by", " ", "\n", "\n", "        ", "cS4"}]}]}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", " ", 
       RowBox[{"{", "2", "}"}], ",", " ", 
       RowBox[{"{", "3", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "4"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "4"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "3", ",", " ", "4"}], "}"}]}], "}"}]}], ";", 
    "\n", "\n", "        ", 
    RowBox[{
     RowBox[{
     "then", " ", "the", " ", "return", " ", "value", " ", "is", " ", "false",
       " ", "\n", "\n", "         ", 
      RowBox[{"In", "[", "29", "]"}]}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"BalancedSystemQ", "[", 
         RowBox[{"cS4", ",", " ", 
          RowBox[{"Range", "[", "4", "]"}]}], "]"}], "]"}], "\n", "\n", 
       "         ", 
       RowBox[{"Out", "[", "29", "]"}]}], "=", " ", 
      RowBox[{"False", "\n", "  ", "\n", "        ", "However"}]}]}]}], ",", 
   " ", 
   RowBox[{"the", " ", "system", " ", "is", " ", "balanced"}], ",", " ", 
   RowBox[{
    RowBox[{
    "since", " ", "the", " ", "balancing", " ", "weights", " ", "are", " ", 
     "given", " ", "by", " ", "\n", "\n", "        ", "whgs"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",",
           "1"}], "}"}], "/", "5"}], "\n", "       ", "\n", "        ", 
       "Related", " ", "to", " ", "this", " ", "context", " ", "we", " ", 
       "provide", " ", "the", " ", "function", " ", 
       RowBox[{"BalancedInequalityQ", "[", "]"}], " ", "to", " ", "check", 
       " ", "whether", " ", "a", " ", "balanced", " ", "system", "\n", 
       "        ", "satisfies", " ", "a", " ", "balanced", " ", "inequality", 
       " ", "of", " ", "a", " ", "TU"}], "-", 
      RowBox[{
       RowBox[{"game", ".", " ", "Notice"}], " ", "that", " ", "if", " ", 
       "all", " ", "balanced", " ", "systems", " ", "satisfying", " ", "this",
        " ", "property", "\n", "        ", "non"}], "-", 
      RowBox[{"emptiness", " ", "of", " ", "the", " ", "core", " ", "is", " ", 
       RowBox[{"guaranteed", ".", " ", "Recall"}], " ", "that", " ", "for", 
       " ", "n"}]}], "=", 
     RowBox[{
     "4", " ", "we", " ", "need", " ", "to", " ", "check", " ", "9", " ", 
      "equivalence", " ", "classes"}]}]}], ",", " ", "however", ",", "\n", 
   "        ", 
   RowBox[{
    RowBox[{"for", " ", "n"}], "=", 
    RowBox[{
     RowBox[{
     "6", " ", "we", " ", "have", " ", "to", " ", "check", " ", "158", " ", 
      RowBox[{"classes", ".", "\n", "\n", "    ", "Version"}], " ", "2.6", 
      ".0", "\n", "\n", "       ", "Adding", " ", "functions", " ", "to", " ",
       "compute", " ", "the", " ", "EPSD"}], "-", "Value"}]}], ",", " ", 
   RowBox[{"Chi", "-", "Value"}], ",", " ", 
   RowBox[{"PD", "-", 
    RowBox[{
    "Value", " ", "and", " ", "the", " ", "nucleolus", " ", "by", " ", "the", 
     " ", "Leng", " ", "and", " ", "Parlar", " ", 
     RowBox[{"(", "2010", ")"}], " ", "formulae", " ", "for", " ", "three", 
     " ", "person", "\n", "       ", "zero"}], "-", 
    RowBox[{"normalized", " ", "and", " ", "super"}], "-", 
    RowBox[{"additive", " ", 
     RowBox[{"games", ".", " ", "Changing"}], " ", "the", " ", "package", " ",
      "extension", " ", "from", " ", "*", 
     RowBox[{".", "m"}], " ", "to", " ", "*", 
     RowBox[{".", "wl", ".", "\n", "\n", "       ", "Performing"}], " ", 
     "some", " ", "code", " ", "maintenance", " ", "and", " ", "minor", " ", 
     "bug", " ", 
     RowBox[{"fixes", ".", "\n", "\n", "    ", "Version"}], " ", "2.6", ".1", 
     "\n", "\n", "       ", "Code", " ", "revision", " ", "and", " ", 
     RowBox[{"optimization", ".", " ", "The"}], " ", 
     RowBox[{"(", 
      RowBox[{"anti", "-"}], ")"}], "pre"}], "-", 
    RowBox[{
    "kernel", " ", "computation", " ", "is", " ", "now", " ", "faster", " ", 
     "up", " ", "to", " ", "a", " ", "factor", " ", "3", " ", "in", " ", 
     "serial", " ", "as", " ", "well", " ", "as", " ", 
     RowBox[{"parallel", "."}]}]}]}], "\n", " ", "\n", "*)"}]], "Code",Express\
ionUUID->"86c90b3c-7e95-4c14-a153-1224f84e30ad"],

Cell[BoxData[
 RowBox[{"(*", " ", "\n", "    ", 
  RowBox[{":", "Limitations", ":", " ", "\n", "    ", 
   RowBox[{"see", " ", 
    RowBox[{
     RowBox[{"TUG", "/", "Guides"}], "/", "ManualTuGames"}], " ", "from", " ",
     "the", " ", "Documentation", " ", 
    RowBox[{"Center", "."}]}]}], " ", "\n", "*)"}]], "Code",ExpressionUUID->\
"7885ae85-4f14-4a42-a986-c66293e02ae6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "   ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"General", " ", "Remarks"}], ":", "\n", " ", "\n", "     ", 
     RowBox[{"Since", " ", "version", " ", "2.5", ".3"}]}], ",", " ", 
    RowBox[{
    "this", " ", "project", " ", "is", " ", "licensed", " ", "under", " ", 
     "the", " ", "MIT", " ", "License", " ", 
     RowBox[{"terms", "."}]}]}], "\n", "    ", "\n", "*)"}], "\n"}]], "Code",E\
xpressionUUID->"d40f526d-4f66-468c-b834-ad7741f52fbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{":", "Requirements", ":", " ", "\n", " ", "\n", "   ", 
     RowBox[{"The", " ", "Package", " ", 
      RowBox[{"Cooperat", ".", "m"}], " ", "by", " ", "Michael", " ", 
      "Carter", " ", "and", " ", 
      RowBox[{"VertexEnum", ".", "m"}], " ", "\n", "   ", "by", " ", "Komei", 
      " ", "Fukuda", " ", "and", " ", "Ichiro", " ", 
      RowBox[{"Mizukoshi", ".", " ", "The"}], " ", 
      RowBox[{"program", " ", "'"}], 
      RowBox[{"cddmathlink", "'"}], " ", "by", " ", "Komei", "\n", "   ", 
      "Fukuda", " ", "is", " ", "highly", " ", "recommended", " ", "for", " ",
       "calculating", " ", "all", " ", "extreme", "\n", "   ", "points", " ", 
      "of", " ", "the", " ", 
      RowBox[{"core", ".", " ", "Nevertheless"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "it", " ", "is", " ", "not", " ", "necessary", " ", "to", " ", "have", 
       " ", "installed", "\n", "   ", "the", " ", "C"}], "-", 
      RowBox[{
      "library", " ", "on", " ", "your", " ", "computer", " ", "to", " ", 
       "run", " ", "properly", " ", "the", " ", 
       RowBox[{"package", " ", "'"}], 
       RowBox[{"TuGames", ".", 
        RowBox[{"m", "'"}], ".", " ", "\n", "   ", "Some"}], " ", "pre"}], 
      "-", 
      RowBox[{"compiled", " ", "binaries", " ", "of", " ", "the", " ", "C"}], 
      "-", 
      RowBox[{
      "library", " ", "can", " ", "be", " ", "found", " ", "under", "\n", 
       "   ", 
       RowBox[{"https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"inf", ".", "ethz", ".", "ch"}], "/", "personal"}], "/", 
         "fukudak"}], "/", "cdd_home"}], "/", "\n", "   ", "As"}], " ", "a", 
      " ", "substitute", " ", "use", " ", "the", " ", "function", " ", 
      RowBox[{"VerticesCore", "[", "]"}], " ", "that", " ", "is", " ", 
      "based", " ", "on", "\n", "   ", 
      RowBox[{"VertexEnum", ".", "m", "."}]}]}]}], " ", "\n", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", "Acknowledgment", ":", "\n", "\n", "   ", 
     RowBox[{
     "We", " ", "are", " ", "very", " ", "thankful", " ", "to", " ", 
      "Szabolcs", " ", "Horv\[AAcute]t", " ", "for", " ", "his", " ", 
      "helpful", " ", "support"}]}], ",", " ", 
    RowBox[{"suggestion", " ", "of", " ", "improvements"}], ",", "\n", "   ", 
    
    RowBox[{
    "and", " ", "of", " ", "his", " ", "piece", " ", "of", " ", "advice", " ",
      "to", " ", "follow", " ", "best", " ", "practice", " ", "of", " ", 
     "publicizing", " ", "a", " ", "Mathematica", " ", "package", "\n", "   ",
      "that", " ", "allows", " ", "a", " ", "custom", " ", "installation", 
     " ", "for", " ", 
     RowBox[{"everyone", ".", " ", "Moreover"}]}], ",", " ", 
    RowBox[{
    "we", " ", "owe", " ", "him", " ", "executables", " ", "for", "\n", "   ",
      "MacOSX"}], ",", " ", 
    RowBox[{
     RowBox[{"which", " ", "ship", " ", "with", " ", "this", " ", 
      RowBox[{"version", ".", "\n", "\n", "\n", "   ", "The"}], " ", "author",
       " ", "acknowledge", " ", "support", " ", "by", " ", "the", " ", 
      "state", " ", "of", " ", "Baden"}], "-", 
     RowBox[{"W\[UDoubleDot]rttemberg", " ", "through", " ", 
      RowBox[{"bwHPC", "."}]}]}]}], "\n", "*)"}], "   "}]], "Code",ExpressionU\
UID->"2ee71cf6-d89d-4b5c-b6b9-82d3aecb12c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<TUG`TuGames`\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<TUG`coop`CooperativeGames`\>\"", ",", "\"\<TUG`TuGamesAux`\>\"", 
      ",", "\"\<TUG`vertex`VertexEnum`\>\"", ",", 
      "\"\<ComputationalGeometry`\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"SameQ", "[", 
      RowBox[{"Global`$ParaMode", ",", "\"\<False\>\""}], "]"}], ",", "\n", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<===================================================\>\"", "]"}], 
      ";", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Loading Package 'TuGames' for \>\"", ",", " ", 
        "$OperatingSystem"}], "]"}], ";", "\n", 
      RowBox[{
      "Print", "[", 
       "\"\<===================================================\>\"", "]"}], 
      ";", "\n", 
      RowBox[{
      "Print", "[", "\"\<TuGames V2.6.1 by Holger I. Meinhardt\>\"", "]"}], 
      ";", "\n", 
      RowBox[{"Print", "[", "\"\<Release Date: 05.05.2020\>\"", "]"}], ";", 
      "\n", 
      RowBox[{
      "Print", "[", 
       "\"\<Program runs under Mathematica Version 8.0 or later\>\"", "]"}], 
      ";", "\n", 
      RowBox[{
      "Print", "[", "\"\<Version 8.x or higher is recommended\>\"", "]"}], 
      ";", "\n", 
      RowBox[{
      "Print", "[", 
       "\"\<===================================================\>\"", "]"}], 
      ";"}], ",", "\n", "   ", "True"}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "\n", 
   RowBox[{
   "The", " ", "following", " ", "describes", " ", "some", " ", "useful", " ",
     "functions", " ", "in", " ", "the", " ", "package", " ", "to", "\n", 
    "check", " ", "properties", " ", "of", " ", "a", " ", 
    RowBox[{"game", "."}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefineGame", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GameName := (DefineGame[T,values];); defines the game to be\n \
analyzed. T is the player set and values are the worth for the coalitions.\n \
Do not forget the semicolons, otherwise some compatibly problems with\n M. \
Carter's ShapleyValue[] occurs\>\""}], ";"}]}], "Code",ExpressionUUID->\
"7ed2d7c7-3656-471d-81e9-4c90f17fbc36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DualGame", "::", "usage"}], "=", " ", "\n", 
    "\"\<DualGame[game] assigns to each coalition the value what it can \
extract from \n the grand coalition by leaving the grand coalition.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CostSaving", "::", "usage"}], "=", "\n", 
    "\"\<CostSaving[costvec_List,T] computes the cost savings for each \
coalition\n from the vector of costs 'costvec'.  T is the player set. The \
resultant cost\n saving vector can be used to define a new game.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SuperAdditiveQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SuperAdditiveQ[game, options] checks if a game is \
superadditive.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WeaklySuperAdditiveQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<WeaklySuperAdditiveQ[game] checks if a game is weakly superadditive.\
\n Suppose the coalitions S_1,S_2,...S_k partition the grand coalition T, \n \
then the game v is weakly superadditive, if sum_i v(S_i) <= v(T). \n This \
superadditivity property is a necessary condition for the core  \n of the \
game v to be nonempty.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelectSuperSets", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SelectSuperSets[i] selects all super sets of i\>\""}], ";"}], "\n", 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IncreasingMargContributions", "::", "usage"}], " ", "=", " ", 
    "\n", "\"\<IncreasingMargContributions[game,i] checks if the marginal \
contributions of player i is increasing.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvCheck", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ConvCheck[game] checks the convexity of the game. It provides \
information whether \n the marginal contributions are increasing for each \
player.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvexQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ConvexQ[game] checks if the Tu-game is convex. It returns the value \
'True' or 'False'.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StrIncreasMargContrib", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<StrIncreasMargContrib[game,i] checks if the marginal contributions \
of player i is \n strictly increasing.\>\""}], ";"}], " ", "\n", "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvStrQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ConvStrQ[game] checks if the Tu-game is strictly convex. It provides \
information \n whether the marginal contributions are increasing for each \
player.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvexStrQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ConvexStrQ[game] checks if the Tu-game is strictly convex. It \
returns only 'True' or 'False'.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AverageConvexQ", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<AverageConvexQ[game,opts] checks the average-convexity of the game.\n \
It returns 'True' or 'False'. Calling the function with the option will \
return\n the sum of the marginal contributions for each coalition S w.r.t. to \
each \n superset S union {j}. These values must be non-negative.\>\""}], 
  ";"}]}], "Code",ExpressionUUID->"90155a2d-7e9a-496f-8a12-7b6880ff3f3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AvConvexQ", "::", "usage"}], " ", "=", "   ", "\n", 
    "\"\<AvConvexQ[game, opts] checks the average-convexity of the game.   \n \
It returns 'True' or 'False'. Now same as AverageConvexQ[]. \n For more \
details see also the description of AverageConvexQ[].\>\""}], ";"}], 
  "  "}]], "Code",ExpressionUUID->"f25d6aae-db59-4f0d-92a1-e65709bb1e93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GameMonotoneQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<GameMonotoneQ[game] verifies if the game is monotone.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MonotoneQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MonotoneQ[game] verifies if the game is monotone. This is done for \
all sub-games.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroMonotoneQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ZeroMonotoneQ[game] verifies if the game is zero-monotone.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroNormalization", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ZeroNormalization[game] determines the zero-normalized game.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroOneNormalization", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ZeroOneNormalization[game] determines the (0,1)-normalized \
game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OneNormalization", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<OneNormalization[game] determines the one-normalized game.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SmallestContributionVector", "::", "usage"}], " ", "=", " ", 
    "\n", "\"\<SmallestContribution[game] calculates the vector of the \
smallest contributions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SmallestContribution", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SamllestContribution[game,i] calculates the smallest contribution of \
player i.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Scrb", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Scrb[game,i] calculates the separable cost-remaining benefits for \
player i. See Funaki (1986).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ScrbSolution", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ScrbSolution[game] calculates the separable cost-remaining benefits. \
See Funaki (1986).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TIJsets", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<TIJsets[i,j] computes the coalitions which contains player i but not \
j.\>\""}], ";"}]}], "Code",ExpressionUUID->"4a9b7909-d594-4d07-85ae-\
d3f64721bff1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExcessPayoff", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ExcessPayoff[game,payoff] calculates the excess vector for the \
(pre-)imputation 'payoff'.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxExcessBalanced", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MaxExcessBalanced[game,payoff] determines whether the maximum \
surpluses induced by \n the imputation 'payoff' are maximal balanced among \
the players. Be careful, the \n function does not check the efficiency \
property.  For checking in addition the efficiency\n property consult the \
function PreKernelQ[].\>\""}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinExcessBalanced", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MinExcessBalanced[game,payoff] determines whether the minimum \
surpluses induced by the \n imputation 'payoff' are minimal balanced among \
the players. Be careful, the function does \n not check the efficiency \
property.  For checking in addition the efficiency \n property consult the \
function AntiPreKernelQ[].\>\""}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxExcessSets", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MaxExcessSets[game,payoff] computes the set of proper coalitions \
having largest excesses.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntersectionOfMaxExcessSets", "::", "usage"}], " ", "=", " ", 
    "\n", "\"\<IntersecionOfMaxExcessSets[game, payoff] determines if the set \
of proper coalitions having \n largest excesses has an empty \
intersection.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelCalculation", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<KernelCalculation[game,options] computes kernel or pre-kernel \
point(s) of a game. \n Optional parameters are: ChangeInternalEps, \
DisplayAllResults, EpsilonValue and \n SetGameToNonZeroMonotonic. The first \
optional parameter AVChangeInternalEps can \n be used to speed up computation \
or to search for different allocations in the initial LPs.\n If the option \
DisplayAllResults is set to 'True', then the return value is related\n to a \
kernel solution, objective function, constraint set of the final LP, \n all \
bi-symmetrical transfers, and the allocations computed by the initial LPs.\n \
In this case invoke the function by \
{solker,obj,const,tra,pay}=KernelCalculation[game].\n The default value is \
set to 'False', that is, the return value is just related to a kernel \n \
solution and the allocation obtained by the initial LPs. The option \
EpsilonValue is a critical \n value for changing the strong epsilon-core. \
This value can be calculated, for instance,\n by the function \
FirstCriticalVal[game]. A solution can be checked with the functions \n \
KernelImputationQ[], KernelImputationListQ[], PreKernelQ[], or \
MaxExcessBalanced[]. To \n search for a kernel solution of an non \
zero-monotonic game set the last variable to \n 'True', but in this case the \
function need not to terminate properly. For its default value \n 'False' the \
function Kernel[game] will be invoked to avoid infinite loops.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Kernel", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Kernel[game,options] computes a kernel point of the game from one \
LP. Options are:\n DisplayAllResults and EpsilonValue. If the option \
DisplayAllResults is set to 'True', \n then the return value is related to a \
kernel solution, objective function, constraint \n set of the final LP, the \
complete variable set, and all bi-symmetrical transfers. In \n this case \
invoke the function by {solker,obj,const,var,tra}=Kernel[game]. The option \n \
EpsilonValue is a critical value to change the strong epsilon-core. This \
value can be \n calculated, for instance, by the function \
FirstCriticalVal[game].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelVertices", "::", "usage"}], " ", "=", "\n", 
    "\"\<KernelVertices[game,options] computes the vertices of the Kernel \
solution from an LP.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModifiedKernel", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<ModifiedKernel[game,options] computes a kernel point from the least \
core.\n That means, a vertex of the kernel solution inside of the least core \
will be computed.\n Thus, in many cases the Nucleolus should be computed. The \
algorithm is based \n on a method by Peleg to translate the definition of the \
Nucleolus into \n a sequence of linear programs.\>\""}], ";"}]}], "Code",Expre\
ssionUUID->"d049eb5e-a05c-476a-a3fc-39736e2bedc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModifiedNucleolus", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<ModifiedNucleolus[game,options] computes the nucleolus from the least \
core.\n The algorithm is based on a method by Peleg to translate the \
definition of the \n Nucleolus into a sequence of linear programs. The \
recursion stops, if the set\n of new equal constraints is empty. A simplex \
method is now used to \n increase its computational reliability.\>\""}], 
  ";"}]], "Code",ExpressionUUID->"0504ea08-07a0-461f-bd00-b65742f0fde6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LexiCenter", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LexiCenter[game,options] computes the lexicographic center of a \
TU-game, i.e. \n the nucleolus. Same as ModifiedNucleolus[].\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LSPreNuc", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LSPreNuc[game] computes the least square pre-nucleolus.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LSNuc", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LSNuc[game] computes the least square nucleolus.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FTPreNuc", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<FTPreNuc[game] computes the pre-nucleolus by a Fenchel Transform \
Method.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NonLinPreNuc", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NonLinPreNuc[game,p,k,tol] computes by a non-linear optimization \
method the pre-nucleolus, otherwise it returns a $Failed.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApproxPreNuc", "::", "usage"}], " ", "=", "\n", 
    "\"\<ApproxPreNuc[game,p,k] computes the (p,k)-nucleolus by a non-linear \
minimization method. It is an approximation of the pre-nucleolus. If \
(p,k)=(2,k), then it computes the least square pre-nucleolus.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NonLinNuc", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NonLinNuc[game,p,k,tol] computes by a non-linear optimization method \
the nucleolus, otherwise it returns a $Failed.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApproxNuc", "::", "usage"}], " ", "=", "\n", 
    "\"\<ApproxNuc[game,p,k] computes the (p,k)-nucleolus by a non-linear \
minimization method. It is an approximation of the nucleolus. If (p,k)=(2,k), \
then it computes the least square nucleolus.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModCoalArray", "::", "usage"}], " ", "=", "\n", 
    "\"\<ModCoalArray[game,payoff] computes a modified coalition array of \
first, second, ..., kth maximal excess.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StandardSolution", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<StandardSolution[game] computes the standard solution of a \
two-person TU-game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NucleolusThreePerson", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NucleolusThreePerson[game] computes the nucleolus of zero-normalized \
super-additive three person games. Uses the formula of Leng and Parlar \
(2010).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreNucleolus", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PreNucleolus[game,options] computes the pre-nucleolus from the set \
of pre-imputations.\n The algorithm is based on a method by Peleg to \
translate the definition of the Nucleolus into \n a sequence of linear \
programs on the pre-imputation set. A simplex method is now used to \n \
increase its computational reliability.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Modiclus", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<Modiclus[game] computes the modiclus as the projection of the \
pre-nucleolus from the\n dual cover game onto the player set T of the \
original game. Do not confound this command\n with the function \
ModfiedNucleolus[]. The algorithm is based on a method by Peleg to translate\n\
 the definition of the Nucleolus into a sequence of linear programs on the \
pre-imputation set.\n A simplex method is now used to increase its \
computational reliability.\>\""}], ";"}]}], "Code",ExpressionUUID->"a1a92790-\
3261-400d-ac2a-3e4d7b9ed092"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsModiclusQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<IsModiclusQ[game,payoff] checks whether the provided payoff vector \
is the modiclus of the game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModPreKernel", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ModPreKernel[game] computes a modified pre-kernel element as the \
solution\n of the pre-kernel from the excess comparability cover game.\n Do \
not confound this command with the function ModfiedKernel[].\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsModPreKernelQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<IsModPreKernelQ[game,payoff] checks whether the provided payoff \
vector is a modified\n pre-kernel element of the game.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProperModPreKernel", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ProperModPreKernel[game] computes a proper modified pre-kernel \
element as the projection\n of the pre-kernel from the dual cover game onto \
the player set T of the original game.\n Do not confound this command with \
the function ModfiedKernel[].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsProperModPreKernelQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<IsProperModPreKernelQ[game,payoff] checks whether the provided \
payoff vector is a proper modified\n pre-kernel element of the game.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DualCover", "::", "usage"}], " ", "=", "\n", 
    "\"\<DualCover[game] computes the dual cover game from which the modiclus \
will be determined.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DualExtension", "::", "usage"}], " ", "=", "\n", 
    "\"\<DualExtension[game] determines the dual extension of the primal \
game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrimalExtension", "::", "usage"}], " ", "=", "\n", 
    "\"\<PrimalExtension[game] determines the primal extension of the dual \
game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ECCoverGame", "::", "usage"}], " ", "=", "\n", 
    "\"\<ECCoverGame[game] computes the excess comparability cover \
game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SMPreKernel", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SMPreKernel[game] computes the simplified modified pre-kernel of the \
game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsSMPreKernelQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<IsSMPreKernelQ[game,payoff] checks if payoff is the simplified \
modified pre-kernel of the game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SMPrenucleolus", "::", "usage"}], " ", "=", "\n", 
    "\"\<SMPrenucleolus[game] computes the simplified modified pre-nucleolus \
of the game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsSMPrenucleolusQ", "::", "usage"}], " ", "=", "\n", 
    "\"\<IsSMPrenucleolusQ[game,payoff] checks if payoff is the simplified \
modified pre-nucleolus of the game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DuttaRay", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<DuttaRay[game] comptes the Dutta-Ray solution for convex \
games.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LorenzSolution", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LorenzSolution[game] comptes the Lorenz solution whenever the core \
exits.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CollectionOfDecreasingExcess", "::", "usage"}], " ", "=", "\n", 
    "\"\<CollectionOfDecreasingExcess[game,payoff] determines the collection \
of coalitions with highest up \n to the lowest level of excesses.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BalancedCollectionQ", "::", "usage"}], " ", "=", "\n", "    ", 
    "\"\<BalancedCollectionQ[game,payoff,options] determines whether the \
induced collections\n are balanced w.r.t. all excess levels.  Implements \
Kohlberg's Theorem. The return value must\n be 'True' for the prenucleolus, \
otherwise 'False'.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"kBalancednessQ", "::", "usage"}], " ", "=", "\n", 
   "\"\<kBalancednessQ[collect_List, coalOfsize_k, options] determines \
whether the coalition collection\n is k-balanced w.r.t. all excess levels. It \
is based on Kurskal rank condition.\>\""}], ";"}]}], "Code",ExpressionUUID->\
"d274cc56-88f7-46b2-9254-63f86b0469f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BalancedSelectionQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<BalancedSelectionQ[game,payoff,options] or \
BalancedSelectionQ[coalstruct, options] \n determines whether the induced \
collections are balanced w.r.t. all excess levels. \n Implements Kohlberg's \
Theorem. The return value must be 'True' for the prenucleolus, \n otherwise \
'False'. It might be that this function returns in any case a 'False', \n \
this is due to circumvent wrong selections. Whenever one has computed the \
prekernel \n set, one can set the option Tight->True to filter out the \
prenucleolus.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WeaklyBalancedSelectionQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<WeaklyBalancedSelectionQ[game,payoff,options] or \
WeaklyBalancedSelectionQ[coalstruct, options] \n determines whether the \
induced collections are weakly balanced w.r.t. all excess levels. \n \
Implements a weak form of Kohlberg's Theorem, i.e. it allows zero \
weights.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelectionKBalancedQ", "::", "usage"}], " ", "=", "\n", 
    "\"\<SelectionKBalancedQ[game, payoff,k options] or \
SelectionKBalancedQ[coalstruct,k options] \n determines whether a coalition \
collection or its induced from an imputation 'payoff'is \n k-balanced. The \
value k must be an integer between 2 and n. Experimental, not stable!\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernel", "::", "usage"}], " ", "=", "\n", 
    "\"\<PreKernel[game] or PreKernel[game,payoff,options] computes a \
pre-kernel element by iteratively solving\n a system of linear equations. \
(cf. Algorithm 8.2.1 of Meinhardt (2013))\>\""}], " ", ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelElement", "::", "usage"}], " ", "=", "\n", 
    "\"\<PreKernelElement[game,payoff,options] computes a pre-kernel element \
by iteratively \n determining a direction of improvement. The iteration \
process stops whenever the \n direction of improvement is equal to the null \
vector. (cf. Algorithm 8.3.1 of Meinhardt (2013)).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelSolution", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PreKernelSolution[game,payoff,options] computes a pre-kernel \
solution by relying on \n Algorithm 8.1.1 and 8.2.1 of Meinhardt (2013). By \
setting the option AntiPreKernel -> True, \n an anti-pre-kernel of the game \
can be computed. In order to look for further solutions, invoke  \n \
{prk,cvfunc,grad} = PreKernelSolution[game,payoff, ConjugateFunction -> True, \
ShowObjectiveFunction -> True].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AntiPreKernelSolution", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AntiPreKernelSolution[game,payoff,options] computes an \
anti-pre-kernel solution by relying on a \n SDM-Method. This approach was \
discussed by Meseguer-Artola (1997). Setting the option AntiPreKernel \n to \
'False', a pre-kernel of the game can be computed.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImputationToMatrix", "::", "usage"}], " ", "=", "   ", "\n", 
    "\"\<ImputationToMatrix[game,payoff,opts] transforms an imputation into \
equivalence class matrix Q. \n Same as BestCoalToMatrix[]. Only the input \
parameters are different. See also BestCoalToMatrix[].\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BestCoalitions", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<BestCoalitions[game,payoff] computes the set of most effective \
coalitions that supports the claim of \n player i against j, for all possible \
pair of players.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BestCoalToMatrix", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<BestCoalToMatrix[bestcoal,T,options] computes an equivalence matrix \
Q, all sub-matrices, and \n determinants from the set of best/most effective \
coalitions. For details see Meinhardt (2013).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetsToVec", "::", "usage"}], " ", "=", "\n", 
    "\"\<SetsToVec[bestcoal,T,options] converts the set of most effective \
coalitions to a set of vectors \n of length T. A vector reflects how the best \
arguments are distributed between a bargaining pair \n (i,j) at a proposal. A \
plus sign indicates that the arguments are skewed in favor of the player i, \n\
 zero means that the arguments are balanced, and a minus sign indicates that \
the arguments are \n skewed in favor of the player j. See also Meinhardt \
(2013).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImputationToVec", "::", "usage"}], " ", "=", "\n", 
   "\"\<ImputationToVec[game,payoff,options] converts an imputation to a set \
of vectors of length T. A \n vector reflects how the best arguments are \
distributed between a bargaining pair i,j at a proposal \n 'payoff'. A \
positive number indicates that the arguments are skewed in favor of the \
player i, zero \n means that the arguments are balanced, and a negative \
number indicates that the arguments are skewed \n in favor of the player j. \
This information can be obtained by invoking the option InFavor. Notice that \
\n whenever the option EffVector is set to 'True', then the first vector must \
be positive, since it is \n related to the grand coalition. Similar to \
SetsToVec[]. See also SetsToVec[].\>\""}], ";"}]}], "Code",ExpressionUUID->\
"67f6bf0a-5136-42aa-80ab-119f48d636ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImputationToEqClass", "::", "usage"}], " ", "=", "    ", "\n", 
    "\"\<ImputationToEqClass[game,payoff] determines an equivalence class \
from an imputation. See also DetEqClass[] for more details.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetEqClass", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<DetEqClass[matrix,T] replicates the set of most effective coalitions \
from the unanimity \n matrix-(Binom(t,2) x 2^t -1), where t is the \
cardinality of the player set. The unanimity \n matrix can be determined by \
the function BargainUnanMatrix[game,payoff,EffVector -> False].\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BargainUnanMatrix", "::", "usage"}], " ", "=", "   ", "\n", 
   "\"\<BargainUnanMatrix[game,payoff,options] computes an unanimity matrix \
of dimension (Binom(t,2) x 2^t -1), \n where t is the cardinality of the \
player set. This is matrix W of equation 5.14, for details,\n see Meinhardt \
(2013).\>\""}], ";"}]}], "Code",ExpressionUUID->"c3bf17d5-e46b-4703-a90a-\
0f7ba28d108b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ValueExcess", "::", "usage"}], " ", "=", "     ", "\n", 
   "\"\<ValueExcess[exc_vec] or ValueExcess[game, payoff] value the excess \
list or the list of all maximum \n surpluses induced by a (pre)imputation. \
This is function h_gamma of Meinhardt (2013).\>\""}], ";"}]], "Code",Expressio\
nUUID->"c1de78e7-ad3c-4878-9ed5-78317e91f2ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvexConjugate", "::", "usage"}], "=", "    ", "\n", 
    "\"\<ConvexConjugate[game, confunc] specifies the convex conjugate \
(Fenchel transform) of the convex \n input function 'confunc'. The convex \
input function must be determined by the function \n PreKernelSolution[] by \
invoking the option ShowObjectiveFunction -> True.\>\""}], ";"}], "\n", " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OptStepSize", "::", "usage"}], " ", "=", "  ", "\n", 
    "\"\<OptStepSize[game, payoff, options] computes the optimal step size in \
order to decrease  the excess \n value of the function ValueExcess[]. A \
direction of improvement 'doi' can be determined by the \n function \
DirectionOfImprovement[]. Then a new payoff vector can be constructed by \n \
newpay = payoff + Optstep * doi. Use this vector to value the excesses by \
ValueExcess[game, newpay]. \n This value should be smaller than \
ValueExcess[game,payoff].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionOfImprovement", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<DirectionOfImprovement[game, payoff, options] determines a vector of \
improvement in order reduce \n the maximum surpluses.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindKernelSolution", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<FindKernelSolution[game,payoff] tries to approximate a pre-kernel \
solution by iteratively carrying \n out transfers between pairs of players. \
The suggested algorithm is due to M. Maschler. For details \n see U. Faigle, \
W. Kern and J. Kuipers (1998).\>\""}], ";"}]}], "Code",ExpressionUUID->\
"4df95570-a7d5-42da-8a6c-2bb2f6844cb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindPreKernelSolution", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<FindKernelSolution[game,payoff] tries to approximate a pre-kernel \
solution by iteratively carrying \n out transfers between pairs of players. \
The suggested algorithm is due to M. Maschler. For details \n see U. Faigle, \
W. Kern and J. Kuipers (1998).\>\""}], ";"}]], "Code",ExpressionUUID->\
"3155f44f-090d-4ac3-9796-9c72d06f6600"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelImputationQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<KernelImputationQ[game,payoff] checks whether the payoff belongs to \
the kernel.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelImputationListQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<KernelImputationListQ[game,payoff] checks whether the list of \
payoffs belongs to the kernel.\>\""}], ";"}], "\n", 
  "                                "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PreKernelQ[game,payoff] checks whether the (pre-)imputation 'payoff' \
is an element of the pre-kernel. \n PreKernelQ checks also the efficiency \
condition in contrast to the function MaxExcessBalanced.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AntiPreKernelQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AntiPreKernelQ[game,payoff] checks whether the vector 'payoff' is an \
element of the anti-pre-kernel. \n AntiPreKernelQ checks also the efficiency \
condition in contrast to the function MinExcessBalanced.\>\""}], ";"}], "\n", 
  "                            "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transfer", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Transfer[payoff, T, d, i, j] determines the bi-symmetrical transfer \
w.r.t. the strong epsilon-core. \n The function Transfer[] computes the \
endpoint of the imputation 'payoff' in the ij-direction by \n transferring \
the amount 'd_ij' from player i to player j. The argument 'payoff' is the \
initial \n distribution, T is the player set, d is the amount which should be \
transferred from player i to j.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DeltaLP", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<DeltaLP[game, i, j, eps] determines the largest amount d_ij that can \
be transferred from player i \n to player j while remaining in the \
epsilon-core.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TransferConstraints", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<TransferConstraints[game, i, j] or TransferConstraints[game, i, j, \
eps] computes the constraints \n for calculating the largest amount that be \
transferred from player i to j while remaining in the \n core or strong \
epsilon core. Default value for 'eps' is zero, and the value 'eps' can be \
omitted\n while calling this function.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllConstraints", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AllConstraints[game] computes the constraints set and variable set \
which are needed to calculate a \n kernel point of a game.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllMaxSurpluses", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AllMaxSurpluses[game,payoff] calculates the maximum surplus of \
player i over j w.r.t. the imputation \n 'payoff' for all possible player \
combinations. Note that the efficiency condition will not be checked.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllAntiSurpluses", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AllAntiSurpluses[game,payoff] calculates the minimum surplus of \
player i over j with respect to the \n imputation 'payoff' for all possible \
player combinations. Note that the efficiency condition will not\n be \
checked.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxSurplus", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<MaxSurplus[game,pi,pj,payoff] calculates the maximum surplus of \
player i over j with respect to the \n imputation 'payoff'. Note that the \
efficiency condition will not be checked.\>\""}], ";"}]}], "Code",ExpressionUU\
ID->"87b3ab76-85af-49fe-8669-7187453f81dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EpsValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EpsValue[game,eps] assigns the cost amount 'eps' to every proper \
coalition.\>\""}], ";"}], "\n", "                    "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EpsCore", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EpsCore[game] determines the least-core. Gives more information than \
the function LeastCore[game].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FirstCriticalVal", "::", "usage"}], "  ", "=", " ", "\n", 
    "\"\<FirstCriticalVal[game] calculates the smallest epsilon such that the \
epsilon-core is nonempty.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SecCriticalVal[game] calculates the largest gain that any group of \
individuals can assure while \n forming a coalition. The epsilon core is \
included in the imputation set iff epsilon is greater \n than the \
sec-critical-val. See Maschler, Peleg and Shapley (1979) on page 306 for more \
details.\>\""}], ";"}], "\n", "                         "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ThirdCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ThridCriticalVal[game] calculates another critical value for epsilon \
to generalize the\n bisection property w.r.t. the strong epsilon-core. The \
epsilon-core is included in the \n reasonable set iff epsilon is greater or \
equal than the third critical value.\>\""}], ";"}], "\n", 
  "                            ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FourthCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<FourthCriticalVal[game] returns the minimum of the SecCriticalVal[] \
and the ThirdCrititcalVal[].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FifthCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<The Union of the lower set and the core is included in the strong \
epsilon-core iff \n epsilon >= epsilon5. See Chang and Kan (1992) for more \
details.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StarCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<StarCriticalVal[game] determines a bound for epsilon as defined by \
Maschler, Peleg and \n Shapley (1979) on page 320. The epsilon-core is \
included in the intersection of the imputation \n set and the reasonable set \
iff epsilon is greater or equal than this epsilon bound. \n Hence, the kernel \
is included in the strong epsilon core if epsilon >= epsilon*.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SecondStarCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SecondStarCriticalVal[game] determines a bound for epsilon as \
defined by Chang and Kan (1992) \n on page 92. This is a better lower epsilon \
bound than the epsilon bound obtained by StarCriticalVal[].\n The kernel is \
included in the strong epsilon core if epsilon >= epsilon**.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ThirdStarCriticalVal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ThirdStarCriticalVal[game] determines a bound for epsilon as defined \
by Chang and Driessen (1994). \n This is a better lower epsilon bound than \
the epsilon or epsilon** bound obtained by StarCriticalVal[] \n and \
ThirdStarCritical[]. The kernel is included in the strong epsilon core if \
epsilon >= epsilon***.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LowerSetQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LowerSetQ[game] checks if the lower set is non empty. An important \
set to define kernel catcher.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperSetQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<UpperSetQ[game] checks if the upper set is non empty. An important \
set to define kernel catcher. \n Furthermore, the kernel is equal to the \
pre-kernel.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LowerSetIncImputationQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LowerSetIncImputationQ[game] checks if the lower set is included in \
the imputation set. This is \n equivalent to the statement that the game is \
zero-monotone.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperSetIncImputationQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<UpperSetIncImputationQ[game] checks if the upper set is included in \
the imputation set.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntersectionUpperLowerSetQ", "::", "usage"}], " ", "=", " ", 
    "\n", "\"\<IntersectionUpperLowerSetQ[game] checks if the intersection of \
the lower and upper set is non-empty.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GrandCoalitionLargestValueQ", "::", "usage"}], " ", "=", " ", 
    "\n", "\"\<GrandCoalitionLargestValueQ[game] checks if the worth of the \
grand coalition is the largest.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelEqualsKernelQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PreKernelEqualsKernelQ[game] checks if 'game' belongs to a class of \
games where the prekernel \n is equal to the kernel.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LargestAmount", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<LargestAmount[game] or LargestAmount[game,i] indicates the largest \
amount a player i can contribute \n to a coalition.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProperAmount", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ProperAmount[game_] or ProperAmount[game,i] indicates the largest \
amount a player i can contribute \n to a proper coalition.\>\""}], ";"}], 
  "\n", "                        "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReasonableSet", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ReasonableSet[game] returns the set of imputations that give no \
player more than his largest amount \n that he can contribute to a coalition.\
\>\""}], ";"}], "\n", "                        "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReasonableOutcome", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ReasonableOutcome[game] set the largest amount to the variable \
r.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Quota", "::", "usage"}], " ", "=", " ", 
    "\"\<Quota[game] determines the quotas of the game.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VerticesCore", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<VerticesCore[game] calculates all vertices of the core. Be careful \
for games greater than n > 6. \n Calculation time explodes.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddVerticesCore", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddVerticesCore[game] calculates all vertices of the core with \
Cddmathlink via Mathlink.\n Cddmathlink uses floating point \
arithmetic.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpVerticesCore", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddGmpVerticesCore[game,Options] calculates all vertices of the core \
with Cddmathlink2gmp via Mathlink.\n Cddmathlink2gmp uses GMP rational exact \
arithmetic.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotCore", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddGmpPlotCore[game,Options] plots the core of a game with \
Cddmathlink2gmp via Mathlink.\n Cddmathlink2gmp uses GMP rational exact \
arithmetic.\>\""}], ";"}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotImputationSet", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddGmpPlotCore[game,Options] plots the core of a game with \
Cddmathlink2gmp via Mathlink.\n Cddmathlink2gmp uses GMP rational exact \
arithmetic.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotReasonableSet", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddGmpPlotReasonableSet[game,Options] plots the reasonable set of a \
game with Cddmathlink2gmp \n via Mathlink. Cddmathlink2gmp uses GMP rational \
exact arithmetic.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpImputationVertices", "::", "usage"}], " ", "=", "\n", 
    "\"\<CddGmpImputationVertices[game] calculates all vertices of the \
imputation set with Cddmathlink2gmp via Mathlink.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddVerticesImputationSet", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddVerticesReasonableSet[game] calculates all vertices of the \
imputation set with Cddmathlink via Mathlink.\>\""}], ";"}], " ", "\n", 
  "                          "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddVerticesReasonableSet", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddVerticesReasonableSet[game] calculates all vertices of the \
reasonable set with Cddmathlink via Mathlink.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddVerticesLowerSet", "::", "usage"}], " ", "=", "\n", 
    "\"\<CddVerticesLowerSet[game] calculates all vertices of the lower set \
with Cddmathlink via Mathlink.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotLowerSet", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CddGmpPlotLowerSet[game,Options] plots the lower set of a game with \
Cddmathlink2gmp via Mathlink.\n Cddmathlink2gmp uses GMP rational exact \
arithmetic.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BaryCenter", "::", "usage"}], " ", "=", "\n", 
    "\"\<BaryCenter[game] computes the barycenter from the extreme points of \
the core.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AnimationKernelProperty2d", "::", "usage"}], " ", "=", "\n", 
    "\"\<AnimationKernelProperty2d[game,options] visualizes the relationship \
between the kernel solution \n and the strong epsilon core for three person \
games.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StrongEpsCore2d", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<StrongEpsCore2d[game,opts] plots the strong epsilon core of a three \
person game. For more details see FilledCoreV6[].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FilledCoreV6", "::", "usage"}], " ", "=", "\n", 
    "\"\<FilledCoreV6[game,opts] plots the core of a three person game. \
Filled the core area with light blue color. Furthermore, the Shapley value \
will be depicted as a blue point, the kernel as a light red, the pre-kernel \
as a red, and the nucleolus as a green point. Dedicated for Mathematica \
Version 6.x or higher only.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Vec3DToSimplex", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Vec3DToSimplex[{x1,x2,x3}] transforms a vector of dimension 3 into a \
vector of dimension 2.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Vec4DToSimplex", "::", "usage"}], " ", "=", "\n", 
    "\"\<Vec4DToSimplex[{x1,x2,x3,x4}] transforms a vector of dimension 4 \
into a vector of dimension 3.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nuc1convex", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Nuc1convex[game] can be only used to calculate the nucleolus for \
1-convex games.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NewShapley", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NewShapley[game] calculates the Shapley Value of the game based on \
the marginal contributions of players. Function not very efficient!\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Potential", "::", "usage"}], " ", "=", "\n", 
    "\"\<Potential[game] computes the potential of a game.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShapleyValueML", "::", "usage"}], " ", "=", "\n", 
    "\"\<ShapleyValueML[game] computes the Shapley Value of the game using \
the multi-linear extension.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MLExtension", "::", "usage"}], " ", "=", "\n", 
    "\"\<MLExtension[game] computes the multi-linear extension of the game.\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaVector", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<UtopiaVector[game] calculates the utopia payoffs for all \
players.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaPayoff", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<UtopiaPayoff[game,i] or UtopiaPayoff[i] represents the utopia payoff \
of player i.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaSum", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<UtopiaSum[game,S_List] calculates the sum of utopia payoffs for \
coalition S.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperVector", "::", "usage"}], " ", "=", "\n", "    ", 
    "\"\<UpperVector[game] calculates the upper payoff for all \
players.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperSum", "::", "usage"}], " ", "=", "\n", "    ", 
    "\"\<UpperSum[game,S_List] calculates the sum of upper payoffs for \
coalition S.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gap", "::", "usage"}], "  ", "=", " ", "\n", 
    "\"\<Gap[game] balances the difference of the total utopia payoff of a \
coalition and its value.\>\""}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenGap", "::", "usage"}], "  ", "=", " ", "\n", 
    "\"\<GenGap[game] balances the difference of the total generalized utopia \
payoff of a coalition and its value.\>\""}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUpperVector", "::", "usage"}], " ", "=", "\n", "    ", 
    "\"\<UpperVector[game] calculates the generalized upper payoff for all \
players.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUpperSum", "::", "usage"}], " ", "=", "\n", "    ", 
    "\"\<GenUpperSum[game,S_List] calculates the sum of generalized upper \
payoffs for coalition S.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjustedEffVector", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AdjustedEffVector[game,i] calculates the adjusted efficient upper \
vector of player i for 1-convex games.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjustedEffUpperVectors", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AdjustedEffUpperVectors[game] calculates the adjusted efficient \
upper vectors for all players \n for 1-convex games. There are exactly |T| \
upper efficient vectors in a 1-convex game.\>\""}], ";"}], " ", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjustedWorthVectors", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AdjustedWorthVectors[game,k] computes the adjusted worth vectors of \
k-convex games. k is a natural number.\>\""}], ";"}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Concession", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Concession[game] is the maximum concession of player w.r.t. his \
utopia payoff UtopiaPayoff[game,i].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisagreeConvex", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<DisagreeConvex[game] calculates the disagreement vector for convex \
games.\>\""}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Disagreement", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Disagreement[game] calculates the disagreement vector of a \
game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TauValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<The TauValue[game] represents some efficient compromise between the \
upper bound 'Utopia-Payoff' \n and some lower bound 'Disagreement' of the \
core.\>\""}], ";"}], "  ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChiValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<The ChiValue[game] represents some efficient compromise between the \
generalized upper bound 'Utopia-Payoff' \n and some lower bound \
'Disagreement' of the core.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GatelyValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<GatelyValue[game] computes the Gately point of an essential game \
v.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PDValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PDValue[game] computes the proportional division value of a \
individually positive TU-game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EPSDValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EPSDValue[game] computes the egalitarian proportional surplus \
division value of a individually positive TU-game.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenConcession", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<GenConcession[game] is the maximum concession of player w.r.t. his \
generalized utopia payoff GenUtopiaPayoff[game,i].\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MargValue", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MargValue[game] calculates the marginal worth for all \
players.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kCover", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<kCover[game,k] determines the k-cover of the game. k is a natural \
number.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoreElementsQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CoreElementsQ[game,payoff] checks if a list of payoffs contain core \
allocations.\>\""}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BelongToCoreQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<BelongToCore[game,payoff] checks if a list of payoffs contain core \
allocations. An imputation x \n is in the core iff x =< dual v.\>\""}], ";"}],
   " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BalancedInequalityQ", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<BalancedInequalityQ[game,coll] checks if the balanced system of sets \
satisfies a balanced inequality\nof the game. It returns True or False. The \
latter includes also the case that the system is not\nbalanced.\>\""}], 
  ";"}]}], "Code",ExpressionUUID->"31db9215-1ad6-4b56-b6c8-7ba9324fd548"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImputationQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ImputationQ[game,payoff] checks whether the imputation or list of \
imputations belongs to the \n imputation set.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoordS", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<CoordS[game,S] determines the unanimity coordinate of coalitions \
S.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GameBasis", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<GameBasis[T] computes the basis of a |T|-person game.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CharacteristicValues", "::", "usage"}], " ", "=", "\n", 
    "\"\<CharacteristicValues[unancrd_List,T,opts] computes the coalitional \
values from the vector of \n unanimity coordinates.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UnanimityCoordinates", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<UnanimityCoordinates[game] determines all unanimity coordinates of \
the game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HarsanyiDividends", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<HarsanyiDividends[game] determines all unanimity coordinates of the \
game. It computes the \n coordinates by multiplying the inverse of the game \
basis with the worth vector of the game.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinUnanimityCoordinates", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MinUnanimityCoordinates[game] calculates the minimum unanimity \
coordinate for each coalition size.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StrictlyConvexUnanConditionQ", "::", "usage"}], " ", "=", " ", 
   "\n", "\"\<StrictlyConvexUnanConditionQ[game] checks at most (n-1) \
inequalities of the unanimity coordinates \n constraints for strict positive \
sums. It examines if the sufficient condition of convexity in terms \n of \
unanimity coordinates is satisfied. The return value is 'True' or 'False'. \
See also EvalSumMinCoord[].\>\""}], ";"}]}], "Code",ExpressionUUID->"e76b2c47-\
c79a-4266-a1b6-45a73bc5e9e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvexUnanConditionQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ConvexUnanConditionQ[game] checks at most (n-1) inequalities of the \
unanimity coordinates constraints \n for positive sums. It examines if the \
sufficient condition of convexity in terms of  unanimity \n coordinates is \
satisfied. The return value is 'True' or 'False'. See also EvalSumMinCoord[].\
\>\""}], ";"}], "     "}]], "Code",ExpressionUUID->"609a611b-ea60-4e5c-90ee-\
58b52b0e6ccd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UnanConvexQ", "::", "usage"}], " ", "=", "\n", 
    "\"\<UnanConvexQ[coord,T,opts] checks if the coordinates satisfy the \
sufficient and necessary condition \n of convexity of the game in terms of \
unanimity coordinates. Calling the function with its options\n open a glance \
on the results, all terms must be non-negative.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnanAvConvexQ", "::", "usage"}], " ", "=", "\n", 
   "\"\<UnanAvConvexQ[coord,T,opts] checks if the coordinates satisfy the \
sufficient and necessary condition \n of average convexity of the game in \
terms of unanimity coordinates. Calling the function with its options\n open \
a glance on the results, all terms must be non-negative. See Solano and \
Rafels (1996).\>\""}], ";"}]}], "Code",ExpressionUUID->"fe52f8b9-1215-4022-\
90b4-41ec9823c310"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetUCoord", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<DetUCoord[coord_List,T] determines the missing unanimity coordinates \
of size greater than 2 to \n generate a TU-game. It is required that the list \
of unanimity coordinates which represents the  \n coordinates of size 2 has \
non-negative input values. Thus, the input dimension of coord_List \n is \
Binomial[|T|,2], where T is the player set. See Meinhardt (2009).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetQuasiAvConvex", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<vallist = DetQuasiAvConvex[Origgame] determines from the game \
'Origame' the coalitional values of \n a quasi average convex game. The \
resultant list of the coalitional values can be used to define \n a new game \
by NewGame := (DefineGame[T, vallist];);. See also DetUCoord[].\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlayerPairs", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PlayerPairs[T] determines the set of all pair of players from the \
player set T.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvalSumMinCoord", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EvalSumMinCoord[game] calculates at most (n-1) inequalities of the \
unanimity coordinates constraints \n of non-negative sums. It is a sufficient \
condition of convexity for a game. If all values are \n non-negative then the \
game is convex. But the converse is not true.\>\""}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeightedMajority", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<WeightedMajority[T,weightList] determines a simple game from the \
non-negative vector [q; p1, ..., pt], \n where T={1,...t}=Range[t]. It is \
admissible to specify the vector of weights by the following \n format of \
lists {q, p1, ...,pt} or {q, {p1, ..., pt}} or {{q}, {p1, ...,pt}}. The \
resultant list can \n then be used to define a game by using the function \
DefineGame[].\>\""}], ";"}]}], "Code",ExpressionUUID->"b1c1b4cb-91f5-4b2b-\
8a2f-7e295aa442c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Some", " ", "explanations", " ", "for", " ", "options", " ", "are", " ", 
    "given", " ", 
    RowBox[{"next", "."}]}], "*)"}], " ", "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CallMaximize", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Is an option for the function KernelCalculation[]. With this option \
the LP solver is changed from\n ConstrainedMax/Min to NMaximize/NMinimize. \
Note that the solver NMaximize seems to be slower\n than the default solver \
ConstrainedMax. The solver ConstrainedMax will be deprecated in \n future \
Mathematica versions (>5).\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeInternalEps", "::", "usage"}], " ", "=", "\n", 
     "\"\<Is an option for the function KernelCalculation[]. With this option \
it is possible to change internally \n the epsilon value within the first \
loop. This option is useful to obtain different allocations from the \n \
initial LPs.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayAllResults", "::", "usage"}], " ", "=", "\n", 
     "\"\<Is an option for the functions Kernel[] and KernelCalculation[]. If \
the option is set to 'True', then \n all internal results are returned, \
otherwise a kernel element and the imputations computed by the \n initial LPs \
are returned.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsilonValue", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Is an option of the functions Kernel[] and KernelCalculation[]. The \
default value is set to zero. Using \n different real numbers, the strong \
epsilon-core can be changed.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RationalApproximate", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Is an option for the function DefineGame[]. The real numbers of the \
coalitional values are approximated \n by rational numbers. Default value is \
true.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RationalExact", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Is an option for the functions CddGmpVerticesCore[] and \
CddGmpPlotCore[].\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetGameToNonZeroMonotonic", "::", "usage"}], " ", "=", " ", 
     "\n", "\"\<Is an option for the function KernelCalculation[]. Switching \
this option on, it is possible \n to search for additional pre-imputations \
for non-zero-monotonic games.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WithIncidences", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Is an option for the function CddGmpVerticesCore[]. Switching this \
option on, a facets-vertices \n incidence matrix will be returned.\>\""}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConjugateFunction", "::", "usage"}], " ", "=", "\n", 
     "\"\<Is an option for the function PreKernelSolution[]. Switching this \
option on, the Fenchel transform \n of a convex function will be returned. \
The Fenchel transform gives evidence whether the pre-kernel \n solution is a \
set solution or whether it consists of a unique vector.\>\""}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Silent", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<If this option is set to 'False', then it is possible to monitor \
the iterative numerical computation \n to search for a (pre)-kernel solution. \
Similar to verbose.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetRecursionLimit", "::", "usage"}], " ", "=", "\n", 
     "\"\<Is an option to change the current limit on the number of level of \
recursion. The default value is \n set to 128.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowObjectiveFunction", "::", "usage"}], " ", "=", "\n", 
     "\"\<Is an option of the function PreKernelSolution[] to return the \
objective function \n (convex function) that has determined a pre-kernel \
solution of the game. In connection  \n with the option 'ConjugateFunction' \
it gives evidence whether the pre-kernel solution \n is a set of solution or \
whether it consists of a unique vector.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllCoalitions", "::", "usage"}], " ", "=", " ", "\n", 
     "\"\<Is an option of the function BestCoalitions[] to return the \
complete set of most effective \n coalitions w.r.t an imputation. When this \
option is switched on, then use the function in this \n way: {bscij,bscji} = \
BestCoalitions[game,payoff,AllCoalitions->True].\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestCardinality", "::", "usage"}], " ", "=", "  ", "\n", 
     "\"\<Is an option of the functions PreKernelSolution[] and \
BestCoalitions[] to return the set of most \n effective coalitions with \
smallest cardinality. Whenever this option is set to 'False', then the \n set \
of coalitions w.r.t. the largest cardinality is returned.\>\""}], ";"}], "\n",
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelRange", "::", "usage"}], " ", "=", "\n", 
     "\"\<Is an option for the function ModifiedKernel[] to search for a line \
segment of the (pre)-kernel.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProperContribution", "::", "usage"}], " ", "=", "\n", 
     "\"\<This is an option to determine the vertices of the upper set, which \
is a kernel catcher.\n This function may useful in connection with the \
package 'TuGamesView3D' to visualize for \n four person games the upper set. \
This set can coincide with the reasonable set.\>\""}], ";"}]}]}]], "Code",Expr\
essionUUID->"e3253276-75ab-4721-9552-9243a0336084"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", " ", "===", " ", "\"\<Unix\>\""}], ",", "\n", 
    "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"Options", "[", "AverageConvexQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "SuperAdditiveQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DefineGame", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalApproximate", " ", "->", " ", "True"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesCore", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpVerticesCore", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RationalExact", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"WithIncidences", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpPlotCore", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesImputationSet", "]"}], " ", "=", 
      "  ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesReasonableSet", "]"}], " ", "=", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RationalExact", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"ProperContribution", " ", "->", " ", "False"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpPlotReasonableSet", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"ProperContribution", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesLowerSet", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpPlotLowerSet", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BestCoalitions", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AllCoalitions", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "OptStepSize", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernelElement", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"PseudoInv", "->", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ModPreKernel", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"PseudoInv", "->", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "       ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DirectionOfImprovement", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"PseudoInv", "->", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "Kernel", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CallMaximize", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"EpsilonValue", " ", "->", " ", "0"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "KernelCalculation", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CallMaximize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"ChangeInternalEps", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"EpsilonValue", " ", "->", " ", "0"}], ",", " ", 
        RowBox[{"SetGameToNonZeroMonotonic", " ", "->", " ", "False"}]}], 
       "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ModifiedKernel", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "KernelVertices", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CallMaximize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"EpsilonValue", " ", "->", " ", "0"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ModifiedNucleolus", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "LexiCenter", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreNucleolus", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "LorenzSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "20"}], ",", " ", 
        RowBox[{"RationalApproximate", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DuttaRay", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "20"}], ",", " ", 
        RowBox[{"RationalApproximate", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "kBalancednessQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BalancedSelectionQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"Tight", "->", "False"}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "WeaklyBalancedSelectionQ", "]"}], " ", ":=", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"Tight", "->", "False"}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "SelectionKBalancedQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"Tight", "->", "False"}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"ConjugateFunction", " ", "->", " ", "False"}], ",", "  ", 
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"Method", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"ShowObjectiveFunction", " ", "->", " ", "False"}], ",", " ", 
        
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", "  ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernel", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", "  ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "        ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AntiPreKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"ConjugateFunction", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"Method", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"ShowObjectiveFunction", " ", "->", " ", "False"}], ",", " ", 
        
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ProperModPreKernel", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"ConjugateFunction", " ", "->", " ", "False"}], ",", "  ", 
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"Method", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"ShowObjectiveFunction", " ", "->", " ", "False"}], ",", " ", 
        
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", "  ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BestCoalToMatrix", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"DisplayMatrixForm", " ", "->", " ", "True"}]}], "}"}]}], ";",
      "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ConvexConjugate", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AllMaxSurpluses", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayMatrixForm", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AllAntiSurpluses", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayMatrixForm", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ExcessPayoff", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayMatrixForm", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "FindKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
        RowBox[{"SetRecursionLimit", " ", "->", " ", "512"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "FindPreKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
        RowBox[{"SetRecursionLimit", " ", "->", " ", "512"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", " ", "\n",
      "  ", 
     RowBox[{
      RowBox[{"Options", "[", "UpperSetIncImputationQ", "]"}], " ", "=", " ", 
      
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "LowerSetIncImputationQ", "]"}], " ", "=", " ", 
      
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernelEqualsKernelQ", "]"}], " ", "=", " ", 
      
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AnimationKernelProperty2d", "]"}], " ", "=", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"UpperCritVal", " ", "->", 
         RowBox[{"{", "5", "}"}]}], ",", " ", 
        RowBox[{"LowerCritVal", " ", "->", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"IncSize", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], "}"}]}], ",", 
        RowBox[{"UseManipulate", "->", "False"}]}], "}"}]}], ";", "\n", "  ", 
     
     RowBox[{
      RowBox[{"Options", "[", "StrongEpsCore2d", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EpsilonValue", " ", "->", " ", "5"}], ",", 
        RowBox[{"FigureSize", " ", "->", " ", "500"}], ",", 
        RowBox[{"Labeling", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "FilledCoreV6", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayLegend", " ", "->", " ", "True"}], ",", 
        RowBox[{"FigureSize", " ", "->", " ", "500"}], ",", 
        RowBox[{"PreImpSet", " ", "->", " ", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "False"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "SetsToVec", "]"}], " ", ":=", 
      RowBox[{"{", 
       RowBox[{"EffVector", " ", "->", " ", "False"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ImputationToVec", "]"}], " ", ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"EffVector", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"InFavor", " ", "->", " ", "False"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ImputationToEqClass", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{"BargUnanMat", " ", "->", " ", "False"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BargainUnanMatrix", "]"}], " ", ":=", 
      RowBox[{"{", 
       RowBox[{"EffVector", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DeltaLP", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"CallMaximize", "->", " ", "False"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "UnanConvexQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayCoord", "->", " ", "False"}], ",", " ", 
        RowBox[{"NumericalPrec", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "12"}], ")"}]}]}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "UnanAvConvexQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayCoord", "->", " ", "False"}], ",", " ", 
        RowBox[{"NumericalPrec", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "12"}], ")"}]}]}]}], "}"}]}], ";"}], ",", "\n", 
    "True", ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"Options", "[", "AverageConvexQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DefineGame", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalApproximate", " ", "->", " ", "True"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesCore", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "False"}], "}"}]}], ";", "\n",
      "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpVerticesCore", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RationalExact", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"WithIncidences", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpPlotCore", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesImputationSet", "]"}], " ", "=", 
      "  ", 
      RowBox[{"{", 
       RowBox[{"RationalExact", " ", "->", " ", "False"}], "}"}]}], ";", "\n",
      "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddVerticesReasonableSet", "]"}], " ", "=", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RationalExact", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"ProperContribution", " ", "->", " ", "False"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpPlotReasonableSet", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"ProperContribution", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "CddGmpPlotLowerSet", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BestCoalitions", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AllCoalitions", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "OptStepSize", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "   ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernelElement", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"PseudoInv", "->", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ModPreKernel", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"PseudoInv", "->", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ProperModPreKernel", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"ConjugateFunction", " ", "->", " ", "False"}], ",", "  ", 
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"Method", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"ShowObjectiveFunction", " ", "->", " ", "False"}], ",", " ", 
        
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", "  ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DirectionOfImprovement", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"PseudoInv", "->", "True"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "Kernel", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CallMaximize", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"EpsilonValue", " ", "->", " ", "0"}]}], "}"}]}], ";", " ", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "KernelCalculation", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CallMaximize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"ChangeInternalEps", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"EpsilonValue", " ", "->", " ", "0"}], ",", " ", 
        RowBox[{"SetGameToNonZeroMonotonic", " ", "->", " ", "False"}]}], 
       "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ModifiedKernel", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "KernelVertices", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CallMaximize", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"EpsilonValue", " ", "->", " ", "0"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", " ", "\n",
      "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ModifiedNucleolus", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "LexiCenter", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreNucleolus", "]"}], " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "LorenzSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "20"}], ",", " ", 
        RowBox[{"RationalApproximate", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DuttaRay", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "20"}], ",", " ", 
        RowBox[{"RationalApproximate", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "kBalancednessQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BalancedSelectionQ", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", "  ", 
          RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
          RowBox[{"Tight", "->", "False"}]}], "}"}], "\n", "  ", 
        RowBox[{"Options", "[", "WeaklyBalancedSelectionQ", "]"}]}], " ", ":=",
        " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", "  ", 
         RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
         RowBox[{"Tight", "->", "False"}]}], "}"}]}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "SelectionKBalancedQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"Tight", "->", "False"}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"ConjugateFunction", " ", "->", " ", "False"}], ",", "  ", 
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"Method", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"ShowObjectiveFunction", " ", "->", " ", "False"}], ",", " ", 
        
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", "  ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernel", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", "  ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}]}], "}"}]}], 
     ";", "    ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AntiPreKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AntiPreKernel", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"ConjugateFunction", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"Method", " ", "->", " ", "Automatic"}], ",", " ", 
        RowBox[{"ShowObjectiveFunction", " ", "->", " ", "False"}], ",", " ", 
        
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SmallestCardinality", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "}"}]}], ";", 
     "   ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BestCoalToMatrix", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "True"}], ",", " ", 
        RowBox[{"DisplayMatrixForm", " ", "->", " ", "True"}]}], "}"}]}], ";",
      " ", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ImputationToMatrix", "]"}], " ", ":=", " ", 
      RowBox[{"Options", "[", "BestCoalToMatrix", "]"}]}], ";", " ", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ConvexConjugate", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AllMaxSurpluses", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayMatrixForm", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AllAntiSurpluses", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayMatrixForm", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ExcessPayoff", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayMatrixForm", " ", "->", " ", "False"}], "}"}]}], ";", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "FindKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
        RowBox[{"SetRecursionLimit", " ", "->", " ", "512"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "FindPreKernelSolution", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DigitPrecision", " ", "->", " ", "6"}], ",", " ", 
        RowBox[{"RationalTol", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
        RowBox[{"SetRecursionLimit", " ", "->", " ", "512"}], ",", " ", 
        RowBox[{"Silent", " ", "->", " ", "True"}]}], "}"}]}], ";", " ", "\n",
      "  ", 
     RowBox[{
      RowBox[{"Options", "[", "UpperSetIncImputationQ", "]"}], " ", "=", " ", 
      
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "LowerSetIncImputationQ", "]"}], " ", "=", " ", 
      
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "PreKernelEqualsKernelQ", "]"}], " ", "=", " ", 
      
      RowBox[{"{", 
       RowBox[{"Silent", " ", "->", " ", "True"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "AnimationKernelProperty2d", "]"}], " ", "=", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"UpperCritVal", " ", "->", 
         RowBox[{"{", "5", "}"}]}], ",", " ", 
        RowBox[{"LowerCritVal", " ", "->", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"IncSize", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], "}"}]}], ",", 
        RowBox[{"UseManipulate", "->", "False"}]}], "}"}]}], ";", "\n", "  ", 
     
     RowBox[{
      RowBox[{"Options", "[", "StrongEpsCore2d", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EpsilonValue", " ", "->", " ", "5"}], ",", 
        RowBox[{"FigureSize", " ", "->", " ", "500"}], ",", 
        RowBox[{"Labeling", " ", "->", " ", "True"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "FilledCoreV6", "]"}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayLegend", " ", "->", " ", "True"}], ",", 
        RowBox[{"FigureSize", " ", "->", " ", "500"}], ",", 
        RowBox[{"PreImpSet", " ", "->", " ", "True"}], ",", 
        RowBox[{"Silent", " ", "->", " ", "False"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "SetsToVec", "]"}], " ", ":=", 
      RowBox[{"{", 
       RowBox[{"EffVector", " ", "->", " ", "False"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ImputationToVec", "]"}], " ", ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"EffVector", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"InFavor", " ", "->", " ", "False"}]}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "ImputationToEqClass", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{"BargUnanMat", " ", "->", " ", "False"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "BargainUnanMatrix", "]"}], " ", ":=", 
      RowBox[{"{", 
       RowBox[{"EffVector", " ", "->", " ", "True"}], "}"}]}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Options", "[", "DeltaLP", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"CallMaximize", "->", " ", "False"}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "UnanConvexQ", "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayCoord", "->", " ", "False"}], ",", " ", 
        RowBox[{"NumericalPrec", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "12"}], ")"}]}]}]}], "}"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Options", "[", "UnanAvConvexQ", "]"}], "  ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DisplayAllResults", " ", "->", " ", "False"}], ",", " ", 
        RowBox[{"DisplayCoord", "->", " ", "False"}], ",", " ", 
        RowBox[{"NumericalPrec", " ", "->", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "12"}], ")"}]}]}]}], "}"}]}], ";"}]}], "\n", "]"}], 
  ";"}]], "Code",ExpressionUUID->"1f025583-ef79-44f6-a23f-c64696650801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Error", " ", "Messages"}], ":"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"One", " ", "Argument"}], ":"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AdjustedEffUpperVectors", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllConstraints", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AntiPreKernelSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AvConvexQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AverageConvexQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BaryCenter", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddGmpPlotCore", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddGmpPlotImputationSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddGmpPlotLowerSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddGmpPlotReasonableSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddGmpVerticesCore", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddGmpImputationVertices", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesCore", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesImputationSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesLowerSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesReasonableSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ChiValue", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Concession", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvCheck", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexStrQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexUnanConditionQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvStrQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DetQuasiAvConvex", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Disagreement", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisagreeConvex", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DualCover", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DualExtension", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DualGame", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DuttaRay", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsCore", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EPSDValue", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EvalSumMinCoord", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FifthCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FilledCoreV6", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindKernelSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindPreKernelSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FourthCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GameBasis", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GameMonotoneQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Gap", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GatelyValue", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenConcession", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenUpperPayoff", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenUpperSum", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GenUpperVector", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GrandCoalitionLargestValueQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"HarsanyiDividends", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IntersectionUpperLowerSetQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelCalculation", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Kernel", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelVertices", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"LargestAmount", "::", "argerr"}], "=", 
    "\"\<One argument was expected.\>\""}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LexiCenter", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LorenzSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LowerSetIncImputationQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LowerSetQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LSNuc", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LSPreNuc", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MargValue", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MinUnanimityCoordinates", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MLExtension", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Modiclus", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedKernel", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedNucleolus", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModPreKernel", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MonotoneQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NewShapley", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NucleolusThreePerson", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Nuc1convex", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OneNormalization", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PDValue", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlayerPairs", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Potential", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelElement", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelEqualsKernelQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernel", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreNucleolus", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PrimalExtension", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProperAmount", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProperModPreKernel", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Quota", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ReasonableOutcome", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ReasonableSet", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StandardSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ScrbSolution", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SecondCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SecondStarCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SelectSuperSets", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ShapleyValueML", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestContributionVector", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SMPreKernel", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SMPrenucleolus", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StarCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StrictlyConvexUnanConditionQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StrongEpsCore2d", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SuperAdditiveQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TauValue", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ThirdCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ThirdStarCriticalVal", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UpperSum", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UpperVector", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UpperPayoff", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UtopiaSum", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UtopiaVector", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UtopiaPayoff", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeaklySuperAdditiveQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UnanimityCoordinates", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UpperSetIncImputationQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UpperSetQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UtopiaVector", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ValueExcess", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"VerticesCore", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeaklyBalancedSelectionQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeaklySuperAdditiveQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroMonotoneQ", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroNormalization", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroOneNormalization", "::", "argerr"}], "=", 
     "\"\<One argument was expected.\>\""}], ";"}]}]}]], "Code",ExpressionUUID\
->"2c05d30e-ec7c-4b41-8f16-7dac9353beca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Two", " ", "Arguments"}], ":"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AdjustedEffVector", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjustedWorthVectors", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllAntiSurpluses", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllMaxSurpluses", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AntiPreKernelQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedSelectionQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedCollectionQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedInequalityQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BargainUnanMatrix", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BelongToCoreQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BestCoalitions", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BestCoalToMatrix", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CharacteristicValues", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CollectionOfDecreasingExcess", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexConjugate", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CoordS", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CoreElementsQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CostSaving", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DefineGame", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DetEqClass", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DetUCoord", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectionOfImprovement", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ECCoverGame", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsValue", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExcessPayoff", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImputationQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImputationToEqClass", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImputationToMatrix", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImputationToVec", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IncreasMargContributions", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IntersectionOfMaxExcessSets", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsModiclusQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsModPreKernelQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsProperModPreKernelQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsSMPreKernelQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsSMPrenucleolusQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"kBalancednessQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"kCover", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelImputationQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelImputationListQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxExcessBalanced", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxExcessSets", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MinExcessBalanced", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModCoalArray", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OptStepSize", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Scrb", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetsToVec", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestContribution", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StrIncreasMargContrib", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TIJsets", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UnanAvConvexQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UnanConvexQ", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UpperSum", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UtopiaPayoff", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UtopiaSum", "::", "argerr"}], "=", 
     "\"\<Two arguments were expected.\>\""}], ";"}]}]}]], "Code",ExpressionUU\
ID->"71d175b4-feb0-4299-a968-ab5bec45977e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Three", " ", "Arguments"}], ":"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TransferConstraints", "::", "argerr"}], "=", 
     "\"\<Threee arguments were expected.\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", 
     RowBox[{"Four", " ", "Arguments"}], ":"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DeltaLP", "::", "argerr"}], "=", 
     "\"\<Four arguments were expected.\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxSurplus", "::", "argerr"}], "=", 
     "\"\<Four arguments were expected.\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{":", 
     RowBox[{"Five", " ", "Arguments"}], ":"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Transfer", "::", "argerr"}], "=", 
     "\"\<Five arguments were expected.\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "the", " ", "directory", " ", "where", " ", "you", " ", 
     "have", " ", "installed", " ", "your", " ", "packages"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"GreaterEqual", "[", 
       RowBox[{"$VersionNumber", ",", "9."}], "]"}], ",", 
      RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], ",", "True"}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "\n", "  ", 
    RowBox[{
     RowBox[{
     "In", " ", "order", " ", "to", " ", "run", " ", "even", " ", "the", " ", 
      "cddmathlink", " ", "libraries", " ", "in", " ", "parallel"}], ",", " ", 
     RowBox[{
     "we", " ", "have", " ", "to", " ", "create", " ", "here", " ", "some", 
      " ", "artificial", " ", "\n", "  ", "links", " ", "for", " ", "the", 
      " ", "SubKernels", " ", "to", " ", "be", " ", "synchronized", " ", 
      "with", " ", "the", " ", "links", " ", "created", " ", "by", " ", "the",
       " ", "Master", " ", 
      RowBox[{"Kernel", ".", " ", "Otherwise"}], "\n", "  ", "the", " ", 
      "link", " ", "numbering", " ", "of", " ", "the", " ", "SubKernels", " ",
       "does", " ", "not", " ", "coincide", " ", "with", " ", "the", " ", 
      "numbering", " ", "created", " ", "by", " ", "the", " ", "Master", " ", 
      
      RowBox[{"Kernel", ".", "\n", "  ", "This"}], " ", "might", " ", "not", 
      " ", "happen", " ", "on", " ", "all", " ", "platforms"}], ",", " ", 
     RowBox[{
      RowBox[{
      "in", " ", "this", " ", "case", " ", "enclose", " ", "the", " ", "line",
        " ", "below", " ", "with", " ", "command", " ", 
       RowBox[{"marks", ".", "\n", "  ", "For"}], " ", "more", " ", "details",
        " ", "have", " ", "a", " ", "look", " ", "in", " ", "the", " ", 
       "README", " ", "file", " ", 
       RowBox[{"and", "/", "or"}], " ", "in", " ", 
       RowBox[{"TuGamesMovieParaModeV6", ".", "nb"}], " ", "in", " ", "the", 
       " ", "Documentation", " ", "\n", "  ", 
       RowBox[{"directory", ".", " ", "See"}], " ", "also", "\n", "\n", "  ", 
       
       RowBox[{"http", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "questions"}], "/", "25561"}], "/", "how"}], "-", "to", "-", "run", 
       "-", "an", "-", "external", "-", "program", "-", "in", "-", "parallel",
        "-", "with", "-", "a", "-", "mathematica", "-", "package"}]}]}], "\n",
     "\n", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$ParaMode", ",", "\"\<False\>\""}], "]"}], " ", "&&", 
       " ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$NotebookMode", ",", "\"\<False\>\""}], "]"}]}], ",", 
      "False", ",", "\n", "      ", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$ParaMode", ",", "\"\<False\>\""}], "]"}], " ", "&&", 
       " ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$NotebookMode", ",", "\"\<True\>\""}], "]"}]}], ",", 
      " ", "False", ",", "\n", "      ", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$ParaMode", ",", "\"\<True\>\""}], "]"}], "  ", "&&", 
       " ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$NotebookMode", ",", "\"\<False\>\""}], "]"}]}], ",", 
      
      RowBox[{
       RowBox[{"kc", "=", "$KernelCount"}], ";", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"LinkCreate", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"kc", "-", "1"}], "}"}]}], "]"}]}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$ParaMode", ",", "\"\<True\>\""}], "]"}], "  ", "&&", 
       " ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"Global`$NotebookMode", ",", "\"\<True\>\""}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"kc", "=", "$KernelCount"}], ";", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"LinkCreate", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"kc", "+", "6"}], "}"}]}], "]"}]}]}], "\n", "      ", "]"}],
     ";"}]}]}]], "Code",ExpressionUUID->"9f15ea88-d739-4e85-8e52-\
cb077a334f7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{
    "Comments", " ", "for", " ", "Windows", " ", "OS", " ", "starts"}], ":", 
    "\n", "   ", 
    RowBox[{
    "Check", " ", "the", " ", "paths", " ", "where", " ", "you", " ", "have", 
     " ", "to", " ", "install", " ", "the", " ", "cddmathlink", " ", 
     RowBox[{"library", ".", "\n", "\n", "   ", 
      RowBox[{"PacletInformation", "[", "\"\<TUG\>\"", "]"}]}], "\n", "\n", 
     "   ", "Then", " ", "open", " ", "the", " ", 
     RowBox[{"directory", ".", "\n", "\n", "   ", 
      RowBox[{"SystemOpen", "@", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"PacletInformation", "[", "\"\<TUG\>\"", "]"}], ",", " ", 
         "\"\<Location\>\""}], "]"}]}]}]}], "\n", "\n", "   ", ":", 
    RowBox[{"Comments", " ", "for", " ", "Windows", " ", "OS", " ", "ends"}], 
    ":"}], " ", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
   "Deactivate", " ", "the", " ", "lines", " ", "below", " ", "if", " ", 
    "you", " ", "have", " ", "not", " ", "installed", " ", 
    RowBox[{"cddmathlink", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"linksQ", "=", 
     RowBox[{"Links", "[", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringFreeQ", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{
              "\"\<TUG\>\"", " ", "~~", " ", "___", " ", "~~", " ", 
               "\"\<cddmathlink\>\""}]}], "]"}], " ", "&"}], " ", "/@", " ", 
           "linksQ"}], ",", " ", "False"}], "]"}], "]"}], "!=", "0"}], ",", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Checking", " ", "first", " ", "if", " ", "a", " ", "LinkObject", " ", 
        "exists", " ", "already", " ", "and", " ", "uninstall", " ", "the", 
        " ", "cddml", " ", 
        RowBox[{"libraries", "."}]}], " ", "*)"}], "\n", "         ", 
      RowBox[{
       RowBox[{"Uninstall", "[", "cddml", "]"}], ";", "\n", "         ", 
       RowBox[{"Uninstall", "[", "cddmlgmp", "]"}], ";", "\n", "         ", 
       RowBox[{"Uninstall", "[", "cddml2", "]"}], ";", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "We", " ", "owe", " ", "the", " ", "following", " ", "lines", " ", 
         "of", " ", "code", " ", "to", " ", "Szabolcs", " ", 
         RowBox[{"Horv\[AAcute]t", "."}]}], " ", "*)"}], "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "In", " ", "the", " ", "second", " ", "step", " ", "install", " ", 
         "the", " ", "cddml", " ", "libraries", " ", 
         RowBox[{"again", "."}]}], "*)"}], "\n", "         ", 
       RowBox[{"cddml", "=", 
        RowBox[{"Install", "@", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DirectoryName", "[", "$InputFileName", "]"}], ",", " ", 
            "\"\<cddmathlink\>\""}], "}"}], "]"}]}]}], ";", "\n", "         ", 
       RowBox[{"cddmlgmp", " ", "=", " ", 
        RowBox[{"Install", "@", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DirectoryName", "[", "$InputFileName", "]"}], ",", " ", 
            "\"\<cddmathlink2gmp\>\""}], "}"}], "]"}]}]}], ";", "\n", 
       "         ", 
       RowBox[{"cddml2", "=", 
        RowBox[{"Install", "@", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DirectoryName", "[", "$InputFileName", "]"}], ",", " ", 
            "\"\<cddmathlink2\>\""}], "}"}], "]"}]}]}], ";"}], ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "the", " ", "LinkObject", " ", "is", " ", "empty"}], ",", 
        " ", 
        RowBox[{"then", " ", "install", " ", "the", " ", "cddml", " ", 
         RowBox[{"libraries", "."}]}]}], "*)"}], "\n", "         ", 
      RowBox[{
       RowBox[{"cddml", " ", "=", " ", 
        RowBox[{"Install", "@", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DirectoryName", "[", "$InputFileName", "]"}], ",", " ", 
            "\"\<cddmathlink\>\""}], "}"}], "]"}]}]}], ";", "\n", "         ", 
       RowBox[{"cddmlgmp", " ", "=", " ", 
        RowBox[{"Install", "@", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DirectoryName", "[", "$InputFileName", "]"}], ",", " ", 
            "\"\<cddmathlink2gmp\>\""}], "}"}], "]"}]}]}], ";", "\n", 
       "         ", 
       RowBox[{"cddml2", " ", "=", " ", 
        RowBox[{"Install", "@", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DirectoryName", "[", "$InputFileName", "]"}], ",", " ", 
            "\"\<cddmathlink2\>\""}], "}"}], "]"}]}]}]}]}], "\n", "]"}], 
    ";"}]}]}]], "Code",ExpressionUUID->"b26542bf-fe55-472c-ac0c-8f98c2ffa05d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ConstrainedMin", "::", "deprec"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ConstrainedMax", "::", "deprec"}], "]"}], ";"}]}], "Code",Expressi\
onUUID->"65d8f992-6546-42c3-b52e-a6a05d197b80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Section", " ", "general", " ", "functions", " ", "starts"}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DefineGame", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"DefineGame", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DefineGame", "[", 
      RowBox[{"R_List", ",", " ", "values_List", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "DefineGame", "]"}]}]}], "]"}], " ", ":=",
      " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Clear", "[", "T", "]"}], ";", " ", 
       RowBox[{"T", " ", "=", " ", "R"}], ";", " ", 
       RowBox[{"Clear", "[", "v", "]"}], ";", "\n", "    ", 
       RowBox[{"approxrat", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalApproximate", "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"2", "^", 
            RowBox[{"Length", "[", "T", "]"}]}], ",", 
           RowBox[{"Length", "[", "values", "]"}]}], "]"}], ",", "True", ",", 
         
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<Game is not consistent defined!\>\"", "]"}], ";", 
          RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"approxrat", " ", "&&", " ", 
            RowBox[{"$VersionNumber", " ", ">=", " ", "5."}]}], ")"}], " ", "==",
           " ", "True"}], ",", " ", "\n", "      ", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Set", "[", 
              RowBox[{
               RowBox[{"v", "[", "#1", "]"}], ",", " ", "#2"}], "]"}], " ", 
             "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"Coalitions", ",", " ", 
              RowBox[{"Rationalize", "[", 
               RowBox[{"values", ",", " ", 
                RowBox[{"5", "^", 
                 RowBox[{"(", 
                  RowBox[{"-", "12"}], ")"}]}]}], "]"}]}], "}"}]}], "]"}], 
          ";"}], ",", " ", "\n", "      ", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Set", "[", 
              RowBox[{
               RowBox[{"v", "[", "#1", "]"}], ",", " ", "#2"}], "]"}], " ", 
             "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"Coalitions", ",", " ", "values"}], "}"}]}], "]"}], 
          ";"}]}], "]"}]}], ")"}]}], ";"}]}]}]], "Code",ExpressionUUID->\
"a9e28b5b-4488-4996-a7c5-ac26fce18b7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CostSaving", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CostSaving", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CostSaving", "[", 
    RowBox[{"costvec_List", ",", "T_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "cs", "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SetDelayed", "[", 
          RowBox[{
           RowBox[{"c", "[", "#1", "]"}], ",", " ", "#2"}], "]"}], " ", "&"}],
         ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Subsets", "[", "T", "]"}], ",", " ", "costvec"}], "}"}]}], 
       "]"}], ";", "\n", "  ", 
      RowBox[{"cs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
             "#"}], "]"}], " ", "-", " ", 
           RowBox[{"c", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
        
        RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Drop", "[", 
          RowBox[{"cs", ",", "1"}], "]"}]}], "}"}], "]"}]}]}], "\n", "  ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"f3894796-d0d7-4afd-9751-\
ddc7723b78cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DualGame", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"DualGame", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DualGame", "[", "game_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", "T", "]"}], "-", 
        RowBox[{"v", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
      RowBox[{"Reverse", "[", "Coalitions", "]"}]}], ")"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Def", "."}], ":", " ", 
     RowBox[{"Let", " ", "S_", "1"}]}], ",", 
    RowBox[{"S_", "2"}], ",", 
    RowBox[{
    "...", "S_k", " ", "be", " ", "a", " ", "partition", " ", "of", " ", 
     "the", " ", "grand", " ", "coalition", " ", "T"}], ",", " ", 
    RowBox[{
    "then", "\n", "the", " ", "game", " ", "v", " ", "is", " ", "called", " ",
      "weakly", " ", "superadditive"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"if", " ", "sum_", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", "=", "1"}], "}"}], "^", "k"}], " ", "v", 
       RowBox[{"(", "S_i", ")"}]}], " ", "<=", " ", 
      RowBox[{"v", 
       RowBox[{
        RowBox[{"(", "T", ")"}], ".", " ", "\n", "\t", "\n", "Prop", 
        "."}]}]}], ":", "\n", 
     RowBox[{
      RowBox[{
      "v", " ", "is", " ", "a", " ", "weakly", " ", "superadditive", " ", 
       "game", " ", "if", " ", "and", " ", "only", " ", "if", " ", "v"}], " ",
       "<=", " ", 
      RowBox[{"dual", " ", "v"}]}]}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeaklySuperAdditiveQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"WeaklySuperAdditiveQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WeaklySuperAdditiveQ", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "truelist", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"truelist", " ", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
            "Coalitions"}], ")"}], " ", "<=", " ", 
          RowBox[{"DualGame", "[", "game", "]"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "truelist"}], "]"}]}]}], "\n", "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Def", ".", " ", "Every"}], " ", "subset", " ", "S", " ", "of", 
      " ", "T", " ", "induce", " ", "a", " ", "subgame", " ", "w", " ", "via",
       " ", "w", 
      RowBox[{"(", "S", ")"}]}], " ", "=", " ", 
     RowBox[{"v", 
      RowBox[{"(", "S", ")"}], " ", "on", " ", "the", " ", "new", " ", 
      "player", " ", "set", " ", 
      RowBox[{"S", ".", "\n", "Prop", ".", " ", "A"}], " ", "game", " ", "v", 
      " ", "is", " ", "superadditive"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "if", " ", "for", " ", "every", " ", "subgame", " ", "w", " ", "it", " ",
       "holds", " ", "w"}], " ", "=", 
     RowBox[{"<", " ", 
      RowBox[{"dual", " ", 
       RowBox[{"w", "."}]}]}]}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SuperAdditiveQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SuperAdditiveQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SuperAdditiveQ", "[", 
    RowBox[{"game_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "SuperAdditiveQ", "]"}]}]}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sil", ",", " ", "coal", ",", " ", "clsup"}], "}"}], ",", "\n", 
     "    ", 
     RowBox[{
      RowBox[{"sil", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
      RowBox[{"clsup", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"SupAddQ", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "Coalitions"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"sil", "===", "False"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<w greater dual w= \>\"", ",", "clsup"}], "]"}], ";"}], 
        " ", ",", " ", "True"}], "]"}], ";", "\n", "    ", 
      RowBox[{"Apply", "[", 
       RowBox[{"And", ",", " ", "clsup"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"c4a85d94-2ae3-4940-83a2-e50c683f8334"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"Checking", " ", "if", " ", "w"}], " ", "=", 
    RowBox[{"<", " ", 
     RowBox[{
     "dual", " ", "w", " ", "holds", " ", "for", " ", "every", " ", "subgame",
       " ", 
      RowBox[{"w", "."}]}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SupAddQ", "[", "teilmg_List", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tpws", ",", "valsubg", ",", " ", "duval", ",", " ", "leq"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"tpws", "=", 
         RowBox[{"Subsets", "[", "teilmg", "]"}]}], ";", "\t\t\t       ", 
        "\n", "    ", 
        RowBox[{"valsubg", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "tpws"}]}], ";", "\n", "    ", 
        RowBox[{"duval", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "T", "]"}], "-", 
             RowBox[{"v", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"Reverse", "[", "tpws", "]"}]}], ")"}]}], ";", "\n", 
        "    ", 
        RowBox[{"leq", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"LessEqual", ",", " ", 
           RowBox[{"{", 
            RowBox[{"valsubg", ",", " ", "duval"}], "}"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "leq"}], "]"}]}]}], "\n", " ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SelectSuperSets", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"SelectSuperSets", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SelectSuperSets", "[", "i_Integer", "]"}], ":=", 
     RowBox[{"W", "[", "i", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"W", "[", "i_Integer", "]"}], ":=", " ", 
     RowBox[{"Cases", "[", 
      RowBox[{"Coalitions", ",", 
       RowBox[{"{", 
        RowBox[{"___", ",", "i", ",", "___"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Assign", "[", "values_List", "]"}], ":=", 
     RowBox[{"Thread", "[", 
      RowBox[{"Rule", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", 
          "Coalitions"}], ")"}], ",", "values"}], "]"}], "]"}]}], ";"}], "\n",
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeightedMajority", "[", 
      RowBox[{"T_", ",", "weight_List"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "wgs", "}"}], ",", "\n", "                    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "weight", "]"}], "===", "3"}], ",", "\n", 
         "                               ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"Last", "[", "weight", "]"}], "]"}], ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", "\n", 
           "                                  ", 
           RowBox[{
            RowBox[{"wgs", "=", 
             RowBox[{"Flatten", "[", "weight", "]"}]}], ";", "\n", 
            "                                  ", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"SameQ", "[", 
               RowBox[{
                RowBox[{"Length", "[", "wgs", "]"}], ",", 
                RowBox[{
                 RowBox[{"Length", "[", "T", "]"}], "+", "1"}]}], "]"}], ",", 
              
              RowBox[{"WeightedMajMain", "[", 
               RowBox[{"T", ",", "wgs"}], "]"}], ",", "\n", 
              "                                        ", "True", ",", 
              RowBox[{"Print", "[", "\"\<Wrong Input\>\"", "]"}]}], "]"}]}], 
           ",", "\n", "                                   ", 
           RowBox[{"Print", "[", "\"\<Wrong Input\>\"", "]"}]}], "]"}], ",", 
         "\n", "                          ", 
         RowBox[{
          RowBox[{"Depth", "[", "weight", "]"}], "===", "2"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", "weight", "]"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "T", "]"}], "+", "1"}]}], "]"}], ",", 
           "\n", "                                             ", 
           RowBox[{"WeightedMajMain", "[", 
            RowBox[{"T", ",", "weight"}], "]"}], ",", "\n", 
           "                                              ", 
           RowBox[{"Print", "[", "\"\<Wrong Input\>\"", "]"}]}], "]"}], ",", 
         "\n", "                          ", "True", ",", 
         RowBox[{"Print", "[", "\"\<Wrong Input\>\"", "]"}]}], "]"}]}], " ", 
      "\n", "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"86dc8a83-88ef-4557-\
9f18-1a182ff37fbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WeightedMajMain", "[", 
     RowBox[{"T_", ",", "weight_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "outersets", ",", "coalweights", ",", "sumweights", ",", "threshold"}],
        "}"}], ",", "\n", "       ", 
      RowBox[{
       RowBox[{"outersets", " ", "=", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"List", ",", " ", 
          RowBox[{"Subsets", "[", "T", "]"}]}], "]"}]}], ";", "\n", "       ", 
       RowBox[{"coalweights", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"weight", ",", "1"}], "]"}], ",", " ", "#"}], "]"}], " ",
           "&"}], " ", "/@", " ", "outersets"}]}], ";", "\n", "       ", 
       RowBox[{"sumweights", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "coalweights"}]}], ";", "\n", "       ", 
       RowBox[{"threshold", " ", "=", " ", 
        RowBox[{"First", "[", "weight", "]"}]}], ";", " ", "\n", "       ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"GreaterEqual", "[", 
            RowBox[{"#", ",", " ", "threshold"}], "]"}], " ", "&"}], " ", "/@",
           " ", "sumweights"}], " ", "/.", " ", 
         RowBox[{"True", " ", "->", " ", "1"}]}], " ", "/.", " ", 
        RowBox[{"False", " ", "->", " ", "0"}]}]}]}], " ", "\n", "]"}]}], 
   ";"}], "\n"}]], "Code",ExpressionUUID->"6440eca2-c093-4edc-9cb4-\
e6c4b44b5e50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WeightedMajority", "[", 
      RowBox[{"T_", ",", "weight_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "outersets", ",", "coalweights", ",", "sumweights", ",", "threshold", 
         ",", "boolval", ",", "un", ",", "trq", ",", "pos"}], "}"}], ",", 
       "\n", "       ", 
       RowBox[{
        RowBox[{"Off", "[", 
         RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "       ", 
        RowBox[{"outersets", " ", "=", " ", 
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", " ", 
           RowBox[{"Subsets", "[", "T", "]"}]}], "]"}]}], ";", "\n", 
        "       ", 
        RowBox[{"coalweights", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "weight", "]"}], " ", "===", " ", "3"}], 
           ",", " ", "\n", "                         ", 
           RowBox[{
            RowBox[{
             RowBox[{"Extract", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Drop", "[", 
                 RowBox[{"weight", ",", "1"}], "]"}], "]"}], ",", " ", "#"}], 
              "]"}], " ", "&"}], " ", "/@", " ", "outersets"}], ",", " ", 
           "\n", "                       ", 
           RowBox[{
            RowBox[{"Depth", "[", "weight", "]"}], " ", "===", " ", "2"}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Extract", "[", 
              RowBox[{
               RowBox[{"Drop", "[", 
                RowBox[{"weight", ",", "1"}], "]"}], ",", " ", "#"}], "]"}], 
             " ", "&"}], " ", "/@", " ", "outersets"}]}], "]"}]}], ";", "\n", 
        "       ", 
        RowBox[{"sumweights", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "coalweights"}]}], ";", "\n", "       ", 
        RowBox[{"threshold", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Depth", "[", "weight", "]"}], " ", "==", " ", "3"}], ",",
            " ", "\n", "                          ", 
           RowBox[{
            RowBox[{"un", " ", "=", " ", 
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"First", "[", "weight", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"First", "[", "weight", "]"}]}], "}"}], "]"}], 
              "]"}]}], ";", "\n", "                                ", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "un", "]"}], " ", "===", " ", "0"}], 
              ",", " ", "un", ",", " ", "\n", 
              "                                      ", "True", ",", " ", 
              RowBox[{
               RowBox[{"trq", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"NumberQ", "[", "#", "]"}], " ", "&"}], "/@", " ", 
                 "un"}]}], ";", "\n", 
               "                                            ", 
               RowBox[{"pos", " ", "=", " ", 
                RowBox[{"Position", "[", 
                 RowBox[{"trq", ",", "True"}], "]"}]}], ";", "\n", 
               "                                            ", 
               RowBox[{"Extract", "[", 
                RowBox[{"un", ",", 
                 RowBox[{"Flatten", "[", "pos", "]"}]}], "]"}]}]}], "\n", 
             "                                               ", "]"}]}], ",", 
           " ", "\n", "                         ", 
           RowBox[{
            RowBox[{"Depth", "[", "weight", "]"}], " ", "==", " ", "2"}], ",",
            " ", 
           RowBox[{"First", "[", "weight", "]"}]}], "]"}]}], ";", "\n", 
        "       ", 
        RowBox[{"On", "[", 
         RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "       ", 
        RowBox[{"boolval", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"GreaterEqual", "[", 
            RowBox[{"#", ",", " ", "threshold"}], "]"}], " ", "&"}], " ", "/@",
           " ", "sumweights"}]}], ";", "\n", "       ", 
        RowBox[{
         RowBox[{"boolval", " ", "/.", " ", 
          RowBox[{"True", " ", "->", " ", "1"}]}], " ", "/.", " ", 
         RowBox[{"False", " ", "->", " ", "0"}]}]}]}], "\n", "]"}]}], ";"}], 
   "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"StandardSolution", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"StandardSolution", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StandardSolution", "[", "game_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "dmQ", "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"dmQ", "=", 
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"2", "^", 
            RowBox[{"Length", "[", "T", "]"}]}], ",", 
           RowBox[{"2", "^", "2"}]}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{"dmQ", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"{", "#", "}"}], "]"}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"v", "[", "T", "]"}], "-", 
                RowBox[{"v", "[", 
                 RowBox[{"{", "1", "}"}], "]"}], "-", 
                RowBox[{"v", "[", 
                 RowBox[{"{", "2", "}"}], "]"}]}], ")"}], "/", "2"}]}], " ", 
            "&"}], "/@", " ", "T"}], ",", "\n", "      ", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<Game has incorrect dimension!\>\"", "]"}], ";", 
           
           RowBox[{"Return", "[", "]"}]}]}], "]"}]}]}], "\n", "   ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Section", " ", "general", " ", "functions", " ", "ends"}], " ", 
    "*)"}]}]}]], "Code",ExpressionUUID->"8a3e44f1-54a8-4bc0-a1c5-\
da2346a9b6a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"convexity", " ", "and", " ", "av"}], "-", 
    RowBox[{"convexity", " ", "section", " ", "starts"}]}], " ", "*)"}], "\n",
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IncreasMargContributions", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"IncreasMargContributions", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IncreasMargContributions", "[", 
      RowBox[{"game_", ",", "i_Integer", " ", ",", "values_List"}], "]"}], ":=",
      "\n", "\t", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], "-", 
              RowBox[{"v", "[", 
               RowBox[{"DeleteCases", "[", 
                RowBox[{"#", ",", "i"}], "]"}], "]"}]}], " ", "<=", " ", "\n",
              "         ", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"Union", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "j"}], "}"}], "]"}], "]"}], "]"}], " ", 
              "-", " ", 
              RowBox[{"v", "[", 
               RowBox[{"DeleteCases", "[", " ", "\n", "          ", 
                RowBox[{
                 RowBox[{"Union", "[", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "j"}], "}"}], "]"}], "]"}], ",", "i"}], 
                "]"}], "]"}]}]}], ")"}], "&"}], " ", "/@", " ", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"W", "[", "i", "]"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"W", "[", "i", "]"}], "]"}], "-", "1"}]}], "]"}]}], "/.", 
         RowBox[{"Assign", "[", "values", "]"}]}], "]"}], ",", "\n", 
       "           ", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IncreasingMargContributions", "[", 
      RowBox[{"game_", ",", "i_Integer"}], "]"}], ":=", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", "#", "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", "i"}], "]"}], "]"}]}], " ", "<=", " ", "\n", 
           "          ", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"Union", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"#", ",", "j"}], "}"}], "]"}], "]"}], "]"}], " ", "-",
             " ", 
            RowBox[{"v", "[", 
             RowBox[{"DeleteCases", "[", " ", "\n", "            ", 
              RowBox[{
               RowBox[{"Union", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "j"}], "}"}], "]"}], "]"}], ",", "i"}], 
              "]"}], "]"}]}]}], ")"}], "&"}], " ", "/@", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"W", "[", "i", "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"W", "[", "i", "]"}], "]"}], "-", "1"}]}], "]"}]}], " ", 
       ",", "\n", "              ", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvCheck", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ConvCheck", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvCheck", "[", "game_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"IncreasingMargContributions", "[", 
        RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
      "T"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ConvexQ", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
     ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexQ", "[", "game_", "]"}], ":=", " ", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "liste", "}"}], ",", " ", "\n", "    ", 
       RowBox[{
        RowBox[{"liste", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"IncreasingMargContributions", "[", 
              RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
            "T"}], ",", "1"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", "liste", ",", "1"}], "]"}]}], "]"}]}]}], "\n", 
      "\t", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StrIncreasMargContrib", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"StrIncreasMargContrib", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StrIncreasMargContrib", "[", 
      RowBox[{"game_", ",", " ", "i_Integer"}], "]"}], ":=", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Rationalize", "[", 
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
             RowBox[{"v", "[", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"#", ",", "i"}], "]"}], "]"}]}], "]"}], " ", "<", " ", 
           "\n", "          ", 
           RowBox[{"Rationalize", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"Union", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "j"}], "}"}], "]"}], "]"}], "]"}], " ", 
             "-", " ", 
             RowBox[{"v", "[", 
              RowBox[{"DeleteCases", "[", " ", "\n", "             ", 
               RowBox[{
                RowBox[{"Union", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", "j"}], "}"}], "]"}], "]"}], ",", "i"}], 
               "]"}], "]"}]}], "]"}]}], ")"}], "&"}], " ", "/@", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"W", "[", "i", "]"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"W", "[", "i", "]"}], "]"}], "-", "1"}]}], "]"}]}], " ", 
       ",", "\n", "              ", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvStrQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ConvStrQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvStrQ", "[", "game_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"StrIncreasMargContrib", "[", 
        RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
      "T"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexStrQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ConvexStrQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexStrQ", "[", "game_", "]"}], ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "liste", "}"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"liste", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"StrIncreasMargContrib", "[", 
              RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
            "T"}], ",", "1"}], "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", "liste", ",", "1"}], "]"}]}], "]"}]}]}], "\n", 
      "\t", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AverageConvexQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"AverageConvexQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AverageConvexQ", "[", 
      RowBox[{"game_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "AverageConvexQ", "]"}]}]}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dispres", ",", " ", "pwset", ",", " ", "chsum", ",", "delmp"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"dispres", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"pwset", " ", "=", " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "    ", 
        RowBox[{"chsum", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"CheckSumQ", "[", 
            RowBox[{"#", ",", " ", "T", ",", " ", "opts"}], "]"}], "  ", 
           "&"}], " ", "/@", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"pwset", ",", " ", "1"}], "]"}]}]}], ";", "\n", "     ", 
        RowBox[{"delmp", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"chsum", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", " ", 
             RowBox[{"{", "}"}]}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"dispres", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", 
            RowBox[{"Union", "[", "chsum", "]"}]}], "]"}], ",", "\n", 
          "                  ", "True", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"And", ",", 
              RowBox[{"Union", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", 
                 " ", "delmp"}], "]"}], "]"}]}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
             "delmp"}]}], "}"}]}], "\n", "                ", "]"}]}]}], "\n", 
      " ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckSumQ", "[", 
      RowBox[{"teilmg_List", ",", " ", "T_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "AverageConvexQ", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"supset", ",", " ", "smarg", ",", " ", "dispres"}], "}"}], 
       ",", "\n", "    ", 
       RowBox[{
        RowBox[{"dispres", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"supset", " ", "=", " ", 
         RowBox[{"OberMenge", "[", 
          RowBox[{"teilmg", ",", " ", "T"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"smarg", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"SumMargContribution", "[", 
            RowBox[{"#", ",", " ", "teilmg", ",", " ", "opts"}], "]"}], " ", 
           "&"}], " ", "/@", " ", "supset"}]}], ";", "\n", "    ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"dispres", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", 
            RowBox[{"Union", "[", "smarg", "]"}]}], "]"}], ",", "\n", 
          "                  ", "True", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
             "smarg"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
             "smarg"}]}], "}"}]}], "\n", "                 ", "]"}]}]}], "\n",
       "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"158c879f-fb2f-4a94-985b-\
8d039e58c1c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OberMenge", "[", 
    RowBox[{"teilmg_List", ",", " ", "T_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"compl", ",", "subc", ",", "prop"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"compl", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"T", ",", " ", "teilmg"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"subc", "=", 
       RowBox[{"Subsets", "[", "compl", "]"}]}], ";", "\n", "    ", 
      RowBox[{"prop", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"teilmg", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
        " ", "subc"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
       "prop"}]}]}], "\n", "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->\
"58832112-b94f-4611-9098-fc764a2926a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SumMargContribution", "[", 
     RowBox[{"superset_List", ",", " ", "teilmg_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AverageConvexQ", "]"}]}]}], "]"}], " ",
     ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dispres", ",", " ", "delisp", ",", " ", "delitlm", ",", " ", "sumtmg",
         ",", " ", "add", ",", " ", "nnegQ"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"dispres", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"delisp", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"superset", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
         " ", "teilmg"}]}], ";", "\n", "    ", 
       RowBox[{"delitlm", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"teilmg", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
         " ", "teilmg"}]}], ";", "\n", "    ", 
       RowBox[{"sumtmg", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"v", "[", "superset", "]"}], " ", "-", " ", 
             RowBox[{"v", "[", "#1", "]"}], " ", "-", " ", 
             RowBox[{"v", "[", "teilmg", "]"}], " ", "+", " ", 
             RowBox[{"v", "[", "#2", "]"}]}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"delisp", ",", " ", "delitlm"}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"add", " ", "=", " ", 
        RowBox[{
         RowBox[{"Total", "[", "sumtmg", "]"}], " ", "//", " ", 
         "Simplify"}]}], ";", "\n", "    ", 
       RowBox[{"nnegQ", " ", "=", " ", 
        RowBox[{"NonNegative", "[", "add", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"dispres", ",", "False"}], "]"}], ",", " ", "nnegQ", ",", 
         "\n", "                 ", "True", ",", " ", 
         RowBox[{"{", 
          RowBox[{"nnegQ", ",", " ", "add"}], "}"}]}], "]"}]}]}], "\n", 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"AvConvexQ", "[", "]"}], " ", "is", " ", "same", " ", "as", " ", 
    RowBox[{"AverageConvexQ", "[", "]"}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AvConvexQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"AvConvexQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AvConvexQ", "[", 
     RowBox[{"game_", ",", "  ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AverageConvexQ", "]"}]}]}], "]"}], 
    "  ", ":=", " ", 
    RowBox[{"AverageConvexQ", "[", 
     RowBox[{"game", ",", " ", "opts"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Old", " ", "Average", " ", "Convex", " ", "Function", " ", "is", " ", 
    "deprecated"}], " ", "*)"}]}]}], "Code",ExpressionUUID->"b87c846e-e14c-\
4e48-b819-ffbf79006a0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"convexity", " ", "and", " ", "av"}], "-", 
    RowBox[{"convexity", " ", "section", " ", "ends"}]}], " ", "*)"}], "\n", 
  "      ", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", "zero", ")"}], "-", 
    RowBox[{"monotonicity", " ", "section", " ", "starts"}]}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ZeroMonotoneQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ZeroMonotoneQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroMonotoneQ", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "zeroval", ",", " ", "orgval", ",", "newgame", ",", "mQ", ",", 
         "oldgame"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"orgval", " ", "=", " ", 
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"Subsets", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"zeroval", " ", "=", " ", 
         RowBox[{"ZeroNormalization", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"newgame", " ", ":=", " ", 
         RowBox[{"DefineGame", "[", 
          RowBox[{"T", ",", " ", "zeroval"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"mQ", "=", 
         RowBox[{"MonotoneQ", "[", "newgame", "]"}]}], ";", "\n", "    ", 
        RowBox[{"oldgame", " ", "=", " ", 
         RowBox[{"DefineGame", "[", 
          RowBox[{"T", ",", "orgval"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Reconstruction", " ", "of", " ", "the", " ", "original", " ", 
          RowBox[{"game", "."}]}], " ", "*)"}], "\n", "    ", 
        RowBox[{"Return", "[", "mQ", "]"}], ";"}]}], "\n", "    ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroNormalization", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ZeroNormalization", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroNormalization", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"genIndVal", ",", " ", "addIndVal", ",", " ", "coalval"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"coalval", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "Coalitions"}]}], " ", ";", "\n", "    ", 
        RowBox[{"genIndVal", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"v", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", " ", "Coalitions"}], "]"}]}]}], ";", "\n", 
        "    ", 
        RowBox[{"addIndVal", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "genIndVal"}]}], ";", "\n", "    ", 
        RowBox[{"Subtract", "[", 
         RowBox[{"coalval", ",", " ", "addIndVal"}], "]"}]}]}], "\n", "    ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroOneNormalization", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ZeroOneNormalization", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroOneNormalization", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zeroli", ",", " ", "div"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"zeroli", " ", "=", " ", 
         RowBox[{"ZeroNormalization", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"div", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Divide", "[", " ", 
            RowBox[{"#", ",", " ", 
             RowBox[{"Take", "[", 
              RowBox[{"zeroli", ",", " ", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], " ", "&"}], " ", "/@", 
          " ", "zeroli"}]}], ";", "\n", "    ", 
        RowBox[{"Flatten", "[", "div", "]"}]}]}], "\n", "    ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OneNormalization", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"OneNormalization", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OneNormalization", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "newgame", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"newgame", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", "    ", 
        RowBox[{"newgame", " ", "*", " ", 
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"Last", "[", "newgame", "]"}]}], ")"}]}]}]}], "\n", "\n", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", "\n", 
    RowBox[{
     RowBox[{
     "A", " ", "game", " ", "v", " ", "is", " ", "monotone", " ", "if", " ", 
      "v", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"S", " ", "\\", "cup"}], " ", "i"}], ")"}]}], " ", "-", " ", 
     RowBox[{"v", 
      RowBox[{"(", "S", ")"}], " ", "is", " ", "non"}], "-", 
     RowBox[{"negative", " ", "for", " ", "all", " ", 
      RowBox[{"i", " ", "\\", "in"}], " ", 
      RowBox[{"N", "."}]}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GameMonotoneQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"GameMonotoneQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GameMonotoneQ", "[", "game_", "]"}], ":=", " ", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "liste", "}"}], ",", " ", "\n", "      ", 
       RowBox[{
        RowBox[{"liste", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"MargContribPositive", "[", 
              RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
            "T"}], ",", "1"}], "]"}]}], ";", "\n", "      ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", "liste", ",", "1"}], "]"}]}], "]"}]}]}], "\n", 
      "\t", "]"}]}], ";"}], "\n"}]}]], "Code",ExpressionUUID->"3bd8b1cb-8612-\
46b3-8a17-614b4bb66046"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MargContribPositive", "[", 
     RowBox[{"game_", ",", "i_Integer"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "margli", "}"}], ",", "\n", "        ", 
      RowBox[{
       RowBox[{"margli", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{
            RowBox[{"v", "[", "#", "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", "i"}], "]"}], "]"}]}], ")"}], "&"}], " ", "/@",
          " ", 
         RowBox[{"W", "[", "i", "]"}]}]}], ";", "\n", "        ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"GreaterEqual", ",", 
         RowBox[{"{", 
          RowBox[{"margli", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "margli", "]"}]}], "}"}]}], "]"}]}], 
          "}"}]}], "]"}]}]}], "\n", " ", "]"}]}], ";"}], "\n"}]], "Code",Expre\
ssionUUID->"0b2f75d1-b9da-4e08-855c-ba0c7e9cf52b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MonotoneQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MonotoneQ", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MonotoneQ", "[", "game_", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "coal", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"coal", " ", "=", " ", "Coalitions"}], ";", "\n", "    ", 
      RowBox[{"MonoCheck", "[", 
       RowBox[{"game", ",", " ", "coal"}], "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"aea2032a-bd28-418d-9c45-935fee26b38a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Checks", " ", "monotonicity", " ", "for", " ", "every", " ", "subgame"}], 
   "  ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MonoCheck", "[", 
      RowBox[{"game_", ",", " ", "liste_"}], "]"}], " ", ":=", " ", "\n", 
     "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mengen", " ", "=", " ", "liste"}], ",", " ", "obermenge", 
         ",", " ", "gensub", ",", " ", "newsets", ",", " ", "val", ",", " ", 
         "pruef", ",", 
         RowBox[{"truelist", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ",", " ", "wahrQ"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "mengen", "]"}], " ", ">", " ", "0"}], ",", 
          "\n", "      ", 
          RowBox[{
           RowBox[{"obermenge", " ", "=", " ", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"mengen", ",", " ", 
               RowBox[{"-", "1"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "      ", 
           RowBox[{"newsets", " ", "=", " ", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"mengen", ",", " ", "obermenge"}], "]"}]}], ";", "\n", 
           "      ", 
           RowBox[{"gensub", " ", "=", " ", 
            RowBox[{"Subsets", "[", "obermenge", "]"}]}], ";", "\n", "      ", 
           RowBox[{"val", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
             "gensub"}]}], ";", "\n", "      ", 
           RowBox[{"pruef", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"val", "[", 
                 RowBox[{"[", 
                  RowBox[{"Length", "[", "gensub", "]"}], "]"}], "]"}], " ", ">=",
                 "  ", "#"}], ")"}], " ", "&"}], " ", "/@", " ", "val"}]}], 
           ";", "\n", "      ", 
           RowBox[{"mengen", " ", "=", " ", "newsets"}], ";", "\n", "      ", 
           
           RowBox[{"wahrQ", " ", "=", " ", 
            RowBox[{"Apply", "[", 
             RowBox[{"And", ",", " ", "pruef"}], "]"}]}], ";", "\n", "      ", 
           RowBox[{"truelist", " ", "=", " ", 
            RowBox[{"Append", "[", 
             RowBox[{"truelist", ",", " ", "wahrQ"}], "]"}]}], ";"}]}], "\n", 
         "     ", "]"}], ";", "\n", "    ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "truelist"}], "]"}]}]}], "\n", "    ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"(", "zero", ")"}], "-", 
     RowBox[{"monotonicity", " ", "section", " ", "ends"}]}], " ", "*)"}], 
   "\n", "\n"}]}]], "Code",ExpressionUUID->"c589db3b-0c41-464e-b0fa-\
d83e81f4bfe0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "strong", " ", "epsilon", " ", "core", " ", "section", " ", "starts"}], 
   " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EpsValue", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"EpsValue", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsValue", "[", 
      RowBox[{"game_", ",", " ", "eps_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "-", " ", "eps"}]}], "]"}], " ",
         "&"}], ",", " ", "ProperCoalitions"}], "]"}]}], ";"}], "\n", 
   "      ", "\n", "     ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NewRelax", "[", 
      RowBox[{"ineq_", ",", " ", "epsilon_"}], "]"}], " ", ":=", " ", 
     RowBox[{"ineq", " ", "/.", " ", 
      RowBox[{
       RowBox[{"lhs_", " ", ">=", " ", "rhs_"}], " ", "->", " ", 
       RowBox[{"lhs", " ", ">=", " ", 
        RowBox[{"rhs", " ", "-", " ", "epsilon"}]}]}]}]}], ";"}], "\n", 
   "      ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsCore", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"EpsCore", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsCore", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"ConstrainedMin", "[", 
      RowBox[{
       RowBox[{"Global`e", " ", "-", " ", "f"}], ",", "\n", "        ", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"NewRelax", "[", 
          RowBox[{"CoalitionalRationality", ",", 
           RowBox[{"Global`e", " ", "-", " ", "f"}]}], "]"}], ",", " ", 
         "ParetoOptimality"}], "]"}], ",", " ", "\n", "        ", 
       RowBox[{"Join", "[", 
        RowBox[{"PayoffVector", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Global`e", ",", " ", "f"}], "}"}]}], "]"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Section", " ", "critical", " ", "values", " ", "starts"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "The", " ", "following", " ", "critical", " ", "values", " ", "are", " ",
       "due", " ", "to", " ", "Maschler"}], ",", " ", 
     RowBox[{"Peleg", " ", "and", " ", "Shapley", " ", 
      RowBox[{"(", "1979", ")"}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"FirstCriticalVal", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstCriticalVal", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "con", "}"}], ",", "\n", "          ", 
       RowBox[{
        RowBox[{"con", " ", "=", " ", 
         RowBox[{"ConstrainedMin", "[", 
          RowBox[{
           RowBox[{"e", " ", "-", " ", "f"}], ",", " ", 
           RowBox[{"Append", "[", "\n", "          ", 
            RowBox[{
             RowBox[{"NewRelax", "[", 
              RowBox[{"CoalitionalRationality", ",", " ", 
               RowBox[{"e", " ", "-", " ", "f"}]}], "]"}], ",", "\n", 
             "          ", "ParetoOptimality"}], "]"}], ",", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"PayoffVector", ",", " ", 
             RowBox[{"{", 
              RowBox[{"e", ",", " ", "f"}], "}"}]}], "]"}]}], "]"}]}], ";", 
        "\n", "          ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`eps1", "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"con", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}]}], 
      "\n", "    ", "]"}]}], ";"}], "\n", "        ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SecondCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"SecondCriticalVal", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SecondCriticalVal", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "cval2", "}"}], ",", "\n", "         ", 
       RowBox[{
        RowBox[{"cval2", " ", "=", " ", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
              RowBox[{"Total", "[", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"v", "[", 
                   RowBox[{"{", "#1", "}"}], "]"}], " ", "&"}], ",", " ", 
                 "#"}], "]"}], "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
           "ProperCoalitions"}], "]"}]}], ";", "\n", "         ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`eps2", "}"}], ",", " ", 
            RowBox[{"{", "cval2", "}"}]}], "}"}]}], "]"}]}]}], "\n", "    ", 
      "]"}]}], ";"}], "\n", "            ", "\n", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ThirdCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ThirdCriticalVal", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ThirdCriticalVal", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "cval3", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"ReasonableOutcome", "[", "game", "]"}], ";", "\n", "    ", 
        RowBox[{"cval3", " ", "=", " ", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
              RowBox[{"v", "[", "T", "]"}], " ", "+", " ", 
              RowBox[{"Total", "[", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Global`r", "[", "#1", "]"}], " ", "&"}], ",", " ", 
                 
                 RowBox[{"Complement", "[", 
                  RowBox[{"T", ",", "#"}], "]"}]}], "]"}], "]"}]}], ")"}], 
            " ", "&"}], " ", "/@", " ", "ProperCoalitions"}], "]"}]}], ";", 
        "\n", "         ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`eps3", "}"}], ",", " ", 
            RowBox[{"{", "cval3", "}"}]}], "}"}]}], "]"}]}]}], "\n", "     ", 
      "]"}]}], ";"}], "\n", "    ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FourthCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"FourthCriticalVal", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FourthCriticalVal", "[", "game_", "]"}], ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "cval4", "}"}], ",", "\n", "     ", 
       RowBox[{
        RowBox[{"cval4", " ", "=", " ", 
         RowBox[{"Min", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"SecondCriticalVal", "[", "game", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"ThirdCriticalVal", "[", "game", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", "                ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`eps4", "}"}], ",", " ", 
            RowBox[{"{", "cval4", "}"}]}], "}"}]}], "]"}]}]}], "\n", 
      "        ", "]"}]}], ";"}], "\n", "    ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StarCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"StarCriticalVal", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StarCriticalVal", "[", "game_", "]"}], " ", ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cval", ",", " ", "upbd"}], "}"}], ",", "\n", "        ", 
       RowBox[{
        RowBox[{"upbd", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"up", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], ",", " ", 
             RowBox[{"ReasonableOutcome", "[", "game", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\n", "        ", 
        RowBox[{"cval", " ", "=", "  ", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"v", "[", 
                    RowBox[{"{", "#1", "}"}], "]"}], " ", "&"}], " ", "/@", 
                  " ", "#"}], "]"}]}], ",", " ", "\n", "            ", 
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"up", "[", 
                   RowBox[{"Complement", "[", 
                    RowBox[{"T", ",", " ", "#"}], "]"}], "]"}], " ", "/.", 
                  " ", "upbd"}], ")"}], " ", "-", " ", 
                RowBox[{"v", "[", "T", "]"}]}]}], "}"}], "]"}], " ", "&"}], 
           " ", "/@", " ", "\n", "         ", "ProperCoalitions"}], "]"}]}], 
        ";", " ", "\n", "      ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`stareps", "}"}], ",", " ", 
            RowBox[{"{", "cval", "}"}]}], "}"}]}], "]"}]}]}], "\n", "  ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"up", "[", "S_List", "]"}], " ", ":=", " ", 
     RowBox[{"Plus", " ", "@@", " ", 
      RowBox[{"up", " ", "/@", " ", "S"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"m", "[", "S_List", "]"}], " ", ":=", " ", 
     RowBox[{"Plus", " ", "@@", " ", 
      RowBox[{"m", " ", "/@", " ", "S"}]}]}], ";"}], "\n", "\n", " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "The", " ", "next", " ", "two", " ", "critical", " ", "values", " ", 
     "are", " ", "defined", " ", "by", " ", "Chang", " ", "and", " ", "Kan", 
     " ", 
     RowBox[{"(", "1992", ")"}], " ", "and", " ", "Chang", " ", "and", " ", 
     "Driessen", " ", 
     RowBox[{"(", "1994", ")"}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SecondStarCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"SecondStarCriticalVal", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SecondStarCriticalVal", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lwbd", ",", " ", "lwpara", ",", " ", "upbd", ",", " ", "uppara", ",",
          " ", "dstarcval"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"lwbd", " ", "=", " ", 
         RowBox[{"SmallestContributionVector", "[", "game", "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"lwpara", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"m", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], ",", " ", "lwbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        
        RowBox[{"upbd", " ", "=", " ", 
         RowBox[{"ReasonableOutcome", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"uppara", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"up", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], ",", " ", "upbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        
        RowBox[{"dstarcval", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
               RowBox[{"Drop", "[", 
                RowBox[{
                 RowBox[{"Subsets", "[", "T", "]"}], ",", " ", 
                 RowBox[{"-", "1"}]}], "]"}]}], "]"}], " ", ">", "  ", 
             RowBox[{"v", "[", "T", "]"}]}], " ", "===", " ", "False"}], ",", 
           "\n", "                        ", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"LowerSetQ", "[", "game", "]"}], " ", "===", " ", 
              "False"}], ",", " ", 
             RowBox[{"CaseOne", "[", 
              RowBox[{"game", ",", " ", "uppara"}], "]"}], ",", "\n", 
             "                         ", "True", ",", " ", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"CoreQ", "[", "game", "]"}], " ", "===", " ", 
                "False"}], ",", " ", 
               RowBox[{"CaseTwo", "[", 
                RowBox[{"game", ",", " ", "lwpara", ",", " ", "uppara"}], 
                "]"}], ",", "\n", "                                        ", 
               "True", ",", " ", 
               RowBox[{"CaseThree", "[", 
                RowBox[{"game", ",", " ", "lwpara", ",", " ", "uppara"}], 
                "]"}]}], "]"}]}], "\n", "             ", "]"}], ",", "\n", 
           "        ", "True", ",", " ", 
           RowBox[{
            RowBox[{"StarCriticalVal", "[", "game", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "\n", "        ", 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`dstareps", "}"}], ",", " ", 
            RowBox[{"{", "dstarcval", "}"}]}], "}"}]}], "]"}]}]}], "\n", 
      "    ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ThirdStarCriticalVal", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ThirdStarCriticalVal", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ThirdStarCriticalVal", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lwbd", ",", " ", "lwpara", ",", " ", "upbd", ",", " ", "uppara", ",",
          " ", "thstarcval"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"lwbd", " ", "=", " ", 
         RowBox[{"SmallestContributionVector", "[", "game", "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"lwpara", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"m", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], ",", " ", "lwbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        
        RowBox[{"upbd", " ", "=", " ", 
         RowBox[{"ProperAmount", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"uppara", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"up", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], ",", " ", "upbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        
        RowBox[{"thstarcval", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
               RowBox[{"Drop", "[", 
                RowBox[{
                 RowBox[{"Subsets", "[", "T", "]"}], ",", " ", 
                 RowBox[{"-", "1"}]}], "]"}]}], "]"}], " ", ">", "  ", 
             RowBox[{"v", "[", "T", "]"}]}], " ", "===", " ", "False"}], ",", 
           "\n", "                        ", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"LowerSetQ", "[", "game", "]"}], " ", "||", " ", 
                  RowBox[{"UpperSetQ", "[", "game", "]"}]}], ")"}], " ", "&&",
                 " ", 
                RowBox[{"CoreQ", "[", "game", "]"}]}], ")"}], " ", "===", " ",
               "True"}], ",", " ", "0", ",", "\n", 
             "                         ", "True", ",", " ", 
             RowBox[{"Which", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"CoreQ", "[", "game", "]"}], " ", "===", " ", 
                "False"}], ",", " ", 
               RowBox[{"CaseTwo", "[", 
                RowBox[{"game", ",", " ", "lwpara", ",", " ", "uppara"}], 
                "]"}], ",", "\n", "                                        ", 
               "True", ",", " ", 
               RowBox[{"CaseThreeFor3", "[", 
                RowBox[{"game", ",", " ", "lwpara", ",", " ", "uppara"}], 
                "]"}]}], "]"}]}], "\n", "             ", "]"}], ",", "\n", 
           "        ", "True", ",", " ", 
           RowBox[{
            RowBox[{"StarCriticalVal", "[", "game", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "\n", "        ", 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "Global`thstareps", "}"}], ",", " ", 
            RowBox[{"{", "thstarcval", "}"}]}], "}"}]}], "]"}]}]}], "\n", 
      "    ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CaseOne", "[", 
      RowBox[{"game_", ",", " ", "uppara_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
                RowBox[{"up", "[", 
                 RowBox[{"Complement", "[", 
                  RowBox[{"T", ",", " ", "#"}], "]"}], "]"}], " ", "-", " ", 
                RowBox[{"v", "[", "T", "]"}]}], ")"}], ",", " ", 
              RowBox[{
               RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"v", "[", 
                   RowBox[{"{", "#1", "}"}], "]"}], " ", "&"}], " ", "/@", 
                 " ", "#"}], "]"}]}], ",", " ", "0"}], "}"}], "]"}], " ", 
           "&"}], " ", "/@", " ", "ProperCoalitions"}], "  ", "/.", " ", 
         "uppara"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CaseTwo", "[", 
      RowBox[{"game_", ",", " ", "lwpara_List", ",", " ", "uppara_List"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                RowBox[{"m", "[", "#", "]"}]}], ",", " ", 
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"v", "[", 
                    RowBox[{"{", "#1", "}"}], "]"}], " ", "&"}], " ", "/@", 
                  " ", "#"}], "]"}]}], ",", " ", 
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
                RowBox[{"up", "[", 
                 RowBox[{"Complement", "[", 
                  RowBox[{"T", ",", " ", "#"}], "]"}], "]"}], " ", "-", " ", 
                RowBox[{"v", "[", "T", "]"}]}]}], "}"}], "]"}], " ", "&"}], 
           " ", "/@", " ", "ProperCoalitions"}], "  ", "/.", " ", "lwpara"}], 
         "  ", "/.", " ", "uppara"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CaseThree", "[", 
      RowBox[{"game_", ",", " ", "lwpara_List", ",", " ", "uppara_List"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                   RowBox[{"m", "[", "#", "]"}]}], ",", " ", "0"}], "}"}], 
                "]"}], ",", " ", 
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"v", "[", 
                    RowBox[{"{", "#1", "}"}], "]"}], " ", "&"}], " ", "/@", 
                  " ", "#"}], "]"}]}], ",", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
                 RowBox[{"up", "[", 
                  RowBox[{"Complement", "[", 
                   RowBox[{"T", ",", " ", "#"}], "]"}], "]"}], "  ", "-", " ", 
                 RowBox[{"v", "[", "T", "]"}]}], ")"}]}], "}"}], "]"}], " ", 
            "&"}], " ", "/@", " ", "ProperCoalitions"}], "  ", "/.", " ", 
          "lwpara"}], " ", "/.", " ", "uppara"}], "]"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CaseThreeFor3", "[", 
      RowBox[{"game_", ",", " ", "lwpara_List", ",", " ", "uppara_List"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Min", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", 
                    RowBox[{"{", "#1", "}"}], "]"}], " ", "&"}], " ", "/@", 
                    " ", "#"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                    RowBox[{"m", "[", "#", "]"}]}]}], "}"}], "]"}], ",", 
                  "0"}], "}"}], "]"}], ",", " ", 
               RowBox[{"Max", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
                    RowBox[{"up", "[", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"T", ",", " ", "#"}], "]"}], "]"}], " ", "-", " ", 
                    RowBox[{"v", "[", "T", "]"}]}], ")"}], ",", "0"}], "}"}], 
                "]"}]}], "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
           "ProperCoalitions"}], "  ", "/.", " ", "lwpara"}], "  ", "/.", " ",
          "uppara"}], "]"}]}], "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->\
"8b44f068-588a-4447-aa7d-2b5c83c40a71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FifthCriticalVal", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"FifthCriticalVal", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FifthCriticalVal", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lwbd", ",", " ", "lwpara", ",", "cval5"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{
       RowBox[{"lwbd", " ", "=", " ", 
        RowBox[{"SmallestContributionVector", "[", "game", "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"lwpara", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"m", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}],
             ",", " ", "lwbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"cval5", "=", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"LowerSetQ", "[", "game", "]"}], " ", "===", " ", 
           "False"}], ",", " ", "0", ",", "\n", "                 ", 
          RowBox[{
           RowBox[{"LowerSetQ", "[", "game", "]"}], " ", "===", " ", "True"}],
           ",", "\n", "      ", 
          RowBox[{"Which", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"CoreQ", "[", "game", "]"}], " ", "===", " ", "False"}], 
            ",", " ", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"m", "[", "#", "]"}], " ", "/.", " ", "lwpara"}], 
                  ")"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
              "ProperCoalitions"}], "]"}], ",", "\n", "       ", "True", ",", 
            " ", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"m", "[", "#", "]"}], " ", "/.", " ", "lwpara"}], 
                    ")"}]}], ")"}], ",", " ", "0"}], "}"}], "]"}], " ", "&"}],
               " ", "/@", " ", "ProperCoalitions"}], "]"}]}], "]"}]}], " ", 
         "\n", "      ", "]"}]}], ";", "\n", "    ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Global`eps5", "}"}], ",", " ", 
           RowBox[{"{", "cval5", "}"}]}], "}"}]}], "]"}]}]}], "\n", "   ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperSetQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UpperSetQ", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperSetQ", "[", "game_", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"upbd", ",", "uppara"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"upbd", " ", "=", " ", 
       RowBox[{"ProperAmount", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"uppara", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"up", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}],
            ",", " ", "upbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"up", "[", "T", "]"}], " ", "/.", " ", "uppara"}], ")"}], 
       " ", ">=", "  ", 
       RowBox[{"v", "[", "T", "]"}]}]}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"85304359-1a2e-4364-8b8d-4fe8eef56885"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LowerSetQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"LowerSetQ", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LowerSetQ", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lwbd", ",", " ", "lwpara"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"lwbd", " ", "=", " ", 
        RowBox[{"SmallestContributionVector", "[", "game", "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"lwpara", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"m", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}],
             ",", " ", "lwbd"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m", "[", "T", "]"}], " ", "/.", " ", "lwpara"}], ")"}], 
        " ", "<=", "  ", 
        RowBox[{"v", "[", "T", "]"}]}]}]}], "\n", "    ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LowerSetIncImputationQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"LowerSetIncImputationQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LowerSetIncImputationQ", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "LowerSetIncImputationQ", "]"}]}]}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "sil", "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "   ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sil", ",", "False"}], "]"}], ",", 
         RowBox[{"DisplayMessageLower", ";", "True"}]}], "]"}], ";", "\n", 
       "   ", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"SmallestContributionVector", "[", "game", "]"}], "]"}], " ",
         ">=", " ", "0"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DisplayMessageLower", ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "Print", "[", "\"\<Checking if Kernel and Pre-kernel are identical\>\"",
        "]"}], ";", "\n", "                      ", 
      RowBox[{
      "Print", "[", 
       "\"\<True is equivalent to zero-monotonicity of the game.\>\"", "]"}], 
      ";"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperSetIncImputationQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UpperSetIncImputationQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperSetIncImputationQ", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "UpperSetIncImputationQ", "]"}]}]}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sil", ",", "prub", ",", " ", "prpara", ",", " ", "setwoi"}], 
      "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"sil", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"UpperSetQ", "[", "game", "]"}], " ", "===", " ", "True"}], 
        ",", "\n", "      ", 
        RowBox[{
         RowBox[{"prub", " ", "=", " ", 
          RowBox[{"ProperAmount", "[", "game", "]"}]}], ";", "\n", "      ", 
         RowBox[{"prpara", " ", "=", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"Rule", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"up", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
               "T"}], ",", " ", "prub"}], "}"}]}], "]"}]}], ";", "\n", 
         "      ", 
         RowBox[{"setwoi", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"T", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
           "T"}]}], ";", "\n", "      ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"sil", ",", "False"}], "]"}], ",", 
           RowBox[{"DisplayMessageUpper", ";", "True"}]}], "]"}], ";", "\n", 
         "      ", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], " ", ">=", " ", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"up", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
             "setwoi"}], " ", "/.", " ", "prpara"}], "]"}]}]}], ",", "\n", 
        "      ", "True", ",", " ", 
        RowBox[{
        "Print", "[", "\"\<Upper Set is empty. Nothing to check.\>\"", 
         "]"}]}], "]"}]}]}], "\n", " ", "]"}]}], ";"}]}], "Code",ExpressionUUI\
D->"c66ddbfc-de35-4fc2-a33f-530911722050"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DisplayMessageUpper", ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<This class of games is different from zero-monotonic games.\>\"", 
       "]"}], ";", "\n", "                      ", 
      RowBox[{
      "Print", "[", 
       "\"\<If True, then the pre-kernel is equal to the kernel.\>\"", "]"}], 
      ";"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntersectionUpperLowerSetQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"IntersectionUpperLowerSetQ", "::", "argerr"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntersectionUpperLowerSetQ", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"LowerSetQ", "[", "game", "]"}], " ", "&&", " ", 
       RowBox[{"UpperSetQ", "[", "game", "]"}]}]}], "\n", "   ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GrandCoalitionLargestValueQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GrandCoalitionLargestValueQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GrandCoalitionLargestValueQ", "[", "game_", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}], "]"}], " ", "<=", " ", 
       RowBox[{"v", "[", "T", "]"}]}]}], " ", "\n", "  ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreKernelEqualsKernelQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"PreKernelEqualsKernelQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelEqualsKernelQ", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "PreKernelEqualsKernelQ", "]"}]}]}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "sil", "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "  ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"sil", "===", "False"}], ",", "\n", "         ", 
         RowBox[{"Switch", "[", 
          RowBox[{"True", ",", " ", 
           RowBox[{"ZeroMonotoneQ", "[", "game", "]"}], ",", 
           RowBox[{"PrintMessPreKernelEq01", ";", " ", "True"}], ",", " ", 
           "\n", "                      ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"!", 
                RowBox[{"LowerSetQ", "[", "game", "]"}]}], ")"}]}], " ", "&&",
              " ", 
             RowBox[{"(", 
              RowBox[{"!", 
               RowBox[{"UpperSetQ", "[", "game", "]"}]}], ")"}]}], ")"}], ",",
            " ", 
           RowBox[{"PrintMessPreKernelEq02", ";", " ", "True"}], ",", "\n", 
           "                      ", 
           RowBox[{"UpperSetIncImputationQ", "[", "game", "]"}], ",", " ", 
           RowBox[{"PrintMessPreKernelEq03", ";", " ", "True"}], ",", "\n", 
           RowBox[{"(*", "  ", 
            RowBox[{
             RowBox[{"This", " ", "statement", " ", "needs", " ", 
              RowBox[{"more", "!"}], "  ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"GrandCoalitionLargestValueQ", "[", "game", "]"}], 
                " ", "&&", " ", 
                RowBox[{"IntersectionUpperLowerSetQ", "[", "game", "]"}]}], 
               ")"}]}], ",", "\n", "                                 ", 
             RowBox[{"PrintMessPreKernelEq04", ";", " ", "True"}], ","}], 
            "*)"}], "\n", "                ", "True", ",", " ", 
           RowBox[{"PrintMessPreKernelEq05", ";", "False"}]}], "\n", 
          "         ", "]"}], ",", "\n", "        ", "True", ",", "\n", 
         "          ", 
         RowBox[{"Switch", "[", 
          RowBox[{"True", ",", " ", 
           RowBox[{"ZeroMonotoneQ", "[", "game", "]"}], ",", " ", "True", ",",
            "\n", "                     ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"!", 
                RowBox[{"LowerSetQ", "[", "game", "]"}]}], ")"}]}], " ", "&&",
              " ", 
             RowBox[{"(", 
              RowBox[{"!", 
               RowBox[{"UpperSetQ", "[", "game", "]"}]}], ")"}]}], ")"}], ",",
            " ", "True", ",", "\n", "                     ", 
           RowBox[{"UpperSetIncImputationQ", "[", "game", "]"}], ",", " ", 
           "True", ",", "\n", 
           RowBox[{"(*", "                     ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GrandCoalitionLargestValueQ", "[", "game", "]"}], " ",
                "&&", " ", 
               RowBox[{"IntersectionUpperLowerSetQ", "[", "game", "]"}]}], 
              ")"}], ",", "True", ","}], "*)"}], "\n", 
           "                      ", "True", ",", "False"}], "\n", "      ", 
          "]"}]}], "\n", "    ", "]"}]}]}], "\n", "  ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"PrintMessPreKernelEq01", " ", ":=", " ", 
   RowBox[{
   "Print", "[", "\"\<Checking if the game is zero monotone.\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"PrintMessPreKernelEq02", " ", ":=", " ", 
   RowBox[{
   "Print", "[", 
    "\"\<Checking if the intersection of the upper and lower set is \
empty.\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintMessPreKernelEq03", " ", ":=", " ", 
    RowBox[{
    "Print", "[", 
     "\"\<Checking if the upper set is included in the imputation set.\>\"", 
     "]"}]}], ";"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"PrintMessPreKernelEq04", " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "Print", "[", 
        "\"\<Checking if the intersection of the upper and lower set is non \
empty\>\"", "]"}], ";", "\n", "                           ", 
       RowBox[{
       "Print", "[", 
        "\"\<and that the grand coalition has the largest value.\>\"", "]"}], 
       ";"}], ")"}]}], ";"}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintMessPreKernelEq05", " ", ":=", " ", 
    RowBox[{
    "Print", "[", "\"\<Checked sufficient conditions are not satisfied.\>\"", 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Section", " ", "critical", " ", "values", " ", "ends"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LargestAmount", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"LargestAmount", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LargestAmount", "[", 
    RowBox[{"game_", ",", " ", "i_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
        RowBox[{"v", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"#", ",", " ", "i"}], "]"}], "]"}]}], ")"}], " ", "&"}], 
     " ", "/@", " ", 
     RowBox[{"W", "[", "i", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LargestAmount", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"LargestAmount", "[", 
       RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], "/@", " ", "T"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ProperAmount", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ProperAmount", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ProperAmount", "[", 
    RowBox[{"game_", ",", " ", "i_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
        RowBox[{"v", "[", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"#", ",", " ", "i"}], "]"}], "]"}]}], ")"}], " ", "&"}], 
     " ", "/@", " ", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"W", "[", "i", "]"}], ",", " ", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProperAmount", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ProperAmount", "[", 
       RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], "/@", " ", "T"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplementReas", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"Global`r", ",", " ", "T"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReasonableOutcome", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ReasonableOutcome", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReasonableOutcome", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Clear", "[", "Global`r", "]"}], ";", " ", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Set", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ImplementReas", "[", "game", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"\\\n", "LargestAmount"}], "[", "game", "]"}]}], "}"}]}], 
       "]"}]}], ")"}]}], ";"}], "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReasonableConst", " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "#", "]"}], " ", "<=", " ", 
       RowBox[{"Global`r", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
     "T"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReasonableSet", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ReasonableSet", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReasonableSet", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "assr", "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"ReasonableOutcome", "[", "game", "]"}], ";", "\n", "    ", 
       RowBox[{"assr", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Clear", "[", "Global`r", "]"}], ";", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"Set", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ImplementReas", "[", "game", "]"}], ",", " ", 
              RowBox[{"LargestAmount", "[", "game", "]"}]}], "}"}]}], "]"}]}],
          ")"}]}], ";", "\n", "    ", 
       RowBox[{"Append", "[", 
        RowBox[{"ReasonableConst", ",", " ", "ParetoOptimality"}], "]"}]}]}], 
     "\n", "    ", "]"}]}], ";"}], "\n", " ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "strong", " ", "epsilon", " ", "core", " ", "section", " ", "ends"}], " ", 
   "*)"}], " "}], "\n"}], "Code",ExpressionUUID->"469e9d80-5b9b-4084-bb30-\
af62f2ad71f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NewShapley", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"NewShapley", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NewShapley", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "pot", "}"}], ",", "\n", "                   ", 
      RowBox[{
       RowBox[{"pot", "=", 
        RowBox[{"Potential", "[", "game", "]"}]}], ";", "\n", 
       "                   ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"pot", ",", "1"}], "]"}], "-", 
          RowBox[{"Part", "[", 
           RowBox[{"pot", ",", 
            RowBox[{
             RowBox[{"-", "#"}], "-", "1"}]}], "]"}]}], " ", "&"}], "/@", " ",
         "T"}]}]}], "\n", "\t\t   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Potential", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Potential", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Potential", "[", "game_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"rho", "[", "#", "]"}], " ", "&"}], "/@", " ", 
     RowBox[{"Subsets", "[", "T", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", 
    RowBox[{"{", "}"}], "]"}], ":=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", 
    RowBox[{"S_List", " ", "/;", " ", 
     RowBox[{
      RowBox[{"Length", "[", "S", "]"}], "==", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"rho", "[", "S", "]"}], "=", 
    RowBox[{"v", "[", "S", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", 
    RowBox[{"S_List", " ", "/;", " ", 
     RowBox[{
      RowBox[{"Length", "[", "S", "]"}], ">", "1"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"rho", "[", "S", "]"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"v", "[", "S", "]"}], "+", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"rho", "[", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{"S", ",", "#"}], "]"}], "]"}], " ", "&"}], "/@", " ", 
         "S"}], "]"}]}], ")"}], "/", 
     RowBox[{"Length", "[", "S", "]"}]}]}]}], ";"}]}], "Code",ExpressionUUID->\
"56090248-43a1-421e-97dc-bfe46f37848e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ShapleyValueML", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ShapleyValueML", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShapleyValueML", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vars", ",", "tv", ",", "rl", ",", "F", ",", "dmat", ",", "G"}], "}"}],
       ",", "\n", "     ", 
      RowBox[{
       RowBox[{"vars", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
       "\t\t\t      ", "\n", "     ", 
       RowBox[{"tv", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"t", " ", "&"}], ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"rl", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", 
          RowBox[{"{", 
           RowBox[{"vars", ",", "tv"}], "}"}]}], "]"}]}], ";", "\t\t\t      ",
        "\n", "     ", 
       RowBox[{"F", "=", 
        RowBox[{"MLExtension", "[", "game", "]"}]}], ";", "\n", "     ", 
       RowBox[{"dmat", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"F", ",", "#"}], "]"}], " ", "&"}], "/@", " ", "vars"}]}], 
       ";", "\n", "     ", 
       RowBox[{"G", "=", 
        RowBox[{"dmat", " ", "/.", " ", "rl"}]}], ";", "\n", "     ", 
       RowBox[{
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], " ", "&"}], "/@",
         " ", "G"}]}]}], "\t\t\t      ", "\n", "\t\t", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MLExtension", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MLExtension", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MLExtension", "[", "game_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ss", ",", "cS", ",", "ms", ",", "ns", ",", "smd"}], "}"}], ",",
      "\n", "   ", 
     RowBox[{
      RowBox[{"ss", "=", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "   ", 
      RowBox[{"cS", "=", 
       RowBox[{"Reverse", "[", "ss", "]"}]}], ";", "\n", "   ", 
      RowBox[{"ms", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", "#", "}"}]}], "]"}], " ", "&"}], "/@", " ", "ss"}]}], 
      ";", "\t\t\t   ", "\n", "   ", 
      RowBox[{"ns", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", "#", "}"}]}], "]"}], " ", "&"}], "/@", " ", "cS"}]}], 
      ";", "\n", "   ", 
      RowBox[{"smd", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"Times", ",", 
              RowBox[{"ms", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "*", 
            RowBox[{"Apply", "[", 
             RowBox[{"Times", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Subtract", "[", 
                 RowBox[{"1", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
               RowBox[{"ns", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], ")"}], "*", 
          RowBox[{"v", "[", 
           RowBox[{"ss", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "ms", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"Total", "[", "smd", "]"}]}]}], "\t\t\t   ", "\n", "\t\t    ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"0cb81a2f-5eec-41d3-8a25-\
efa3486305fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrintRemark", "[", "payoff_List", "]"}], ":=", " ", 
    RowBox[{"(", "\n", "      ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Dimensions is equal to \>\"", ",", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], "]"}], ";", "\n", 
      "      ", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Depth is equal to \>\"", ",", 
        RowBox[{"Depth", "[", "payoff", "]"}]}], "]"}], ";", "\n", "      ", 
      RowBox[{
      "Print", "[", 
       "\"\<Usage: MaxExcessBalanced[game,payoff] and \
ExcessPayoff[game,payoff]\>\"", "]"}], ";", "\n", "      ", 
      RowBox[{
      "Print", "[", 
       "\"\<The variable 'payoff' has not the correct input format.\>\"", 
       "]"}], ";", "\n", "      ", 
      RowBox[{
      "Print", "[", 
       "\"\<The variable 'payoff' must be a list of payoff vectors or a \
single payoff vector.\>\"", "]"}]}], "\n", ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExcessPayoff", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ExcessPayoff", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExcessPayoff", "[", 
     RowBox[{"game_", ",", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ExcessPayoff", "]"}]}]}], "]"}], ":=", 
    " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dispmat", ",", "assg", ",", "li", ",", "res"}], "}"}], ",", 
      "\n", "  ", 
      RowBox[{
       RowBox[{"dispmat", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayMatrixForm", "]"}]}], ";", "    ",
        "\n", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], " ", 
          "||", " ", 
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}]}], 
         ",", "\n", "    ", 
         RowBox[{
          RowBox[{"li", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Dimensions", "[", "payoff", "]"}], "]"}], "==", "1"}],
              ",", 
             RowBox[{"{", "payoff", "}"}], ",", "payoff"}], "]"}]}], ";", 
          "\n", "    ", 
          RowBox[{"assg", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{"Rule", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{"x", ",", "T"}], "]"}], ",", "#"}], "}"}]}], "]"}], 
             " ", "&"}], " ", "/@", " ", "li"}]}], ";", "\n", "    ", 
          RowBox[{"res", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"v", "[", "#", "]"}], "-", 
                   RowBox[{"x", "[", "#", "]"}]}], ")"}], "&"}], " ", "/@", 
                " ", "Coalitions"}], ",", " ", "#"}], "]"}], " ", "&"}], " ", 
            "/@", " ", "assg"}]}], ";", "\n", "    ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"dispmat", " ", "==", " ", "False"}], ",", " ", "res", 
            ",", " ", "True", ",", " ", 
            RowBox[{"DisplayErgb", "[", "res", "]"}]}], "]"}]}], ",", "\n", 
         "            ", 
         RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", "\t\t", 
        "]"}]}]}], "\n", "  ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplayErgb", "[", "payoff_List", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"exc", ",", "coal", ",", "mpc"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"exc", " ", "=", " ", "payoff"}], ";", "\n", "    ", 
       RowBox[{"coal", " ", "=", " ", 
        RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "    ", 
       RowBox[{"mpc", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Global`Co", ",", "coal"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"MatrixForm", "[", 
        RowBox[{"PrependTo", "[", 
         RowBox[{"exc", ",", "mpc"}], "]"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxExcessSets", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MaxExcessSets", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxExcessSets", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "exclist", ",", " ", "propexc", ",", " ", "maxexc", ",", " ", "pos"}], 
       "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"exclist", " ", "=", " ", 
        RowBox[{"ExcessPayoff", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"propexc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"#", ",", " ", "1"}], "]"}], ",", " ", 
            RowBox[{"-", "1"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
         "exclist"}]}], ";", "\n", "    ", 
       RowBox[{"maxexc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "propexc"}]}], ";", "\n", "    ", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"propexc", ",", " ", "maxexc"}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"Extract", "[", 
          RowBox[{"ProperCoalitions", ",", " ", "#"}], "]"}], " ", "&"}], " ",
         "/@", " ", "pos"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IntersectionOfMaxExcessSets", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"IntersectionOfMaxExcessSets", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntersectionOfMaxExcessSets", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "dsets", "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"dsets", " ", "=", " ", 
        RowBox[{"MaxExcessSets", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"GrandCoalitionLargestValueQ", "[", "game", "]"}], "===", 
          "False"}], ",", 
         RowBox[{"DisplayMessFalse", "[", 
          RowBox[{"game", ",", "payoff"}], "]"}], ",", "\n", "         ", 
         "True", ",", " ", 
         RowBox[{"DisplayMessTrue", "[", 
          RowBox[{"game", ",", "payoff"}], "]"}]}], "]"}], ";", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"Intersection", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@",
         " ", "dsets"}]}]}], "\n", "  ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DisplayMessFalse", "[", 
    RowBox[{"game_", ",", "payoff_List"}], "]"}], " ", ":=", " ", "\n", 
   "                 ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
     "Print", "[", "\"\<Grand Coalition has not largest value.\>\"", "]"}], 
     ";", "\n", "                  ", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Payoff vector/s is/are kernel element(s)? \>\"", ",", " ", 
       RowBox[{"KernelImputationListQ", "[", 
        RowBox[{"game", ",", "payoff"}], "]"}]}], "]"}], ";"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DisplayMessTrue", "[", 
    RowBox[{"game_", ",", "payoff_List"}], "]"}], " ", ":=", " ", "\n", 
   "                  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
     "Print", "[", 
      "\"\<If kernel payoff, then the intersection set is empty.\>\"", "]"}], 
     ";", "\n", "                   ", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Payoff vector/s is/are kernel element(s)? \>\"", ",", " ", 
       RowBox[{"KernelImputationListQ", "[", 
        RowBox[{"game", ",", "payoff"}], "]"}]}], "]"}], ";"}], ")"}]}], 
  ";"}]}], "Code",ExpressionUUID->"45764c10-cd47-4ff0-936b-be8a76d2fb12"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TIJsets", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"TIJsets", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TIJsets", "[", 
    RowBox[{"i_Integer", ",", " ", "j_Integer"}], "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"ProperCoalitions", ",", 
       RowBox[{"{", 
        RowBox[{"___", ",", "i", ",", "___"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"___", ",", "j", ",", "___"}], "}"}]}], "]"}]}], ";"}]}], "Code",\
ExpressionUUID->"4e7cba3c-933c-46f7-89ef-1fc28034a541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MaxExcessBalanced", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MaxExcessBalanced", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxExcessBalanced", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "dimpay", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"dimpay", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "2"}], ",",
          "\n", "         ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
            ")"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"MaxExcessBalCheck", "[", 
              RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
            " ", "payoff"}], ",", " ", "\n", "                       ", 
           "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
         "\n", "   ", 
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "1"}], ",",
          "\n", "            ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}],
             " ", ")"}], ",", " ", 
           RowBox[{"MaxExcessBalCheck", "[", 
            RowBox[{"game", ",", " ", "payoff"}], "]"}], ",", " ", "\n", 
           "                         ", "True", ",", "  ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
         "\n", "   ", "True", ",", " ", 
         RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}]}]}], "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxExcessBalCheck", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "plpr", ",", "rvpr", ",", "asspay", ",", "sij", ",", "sji", ",", 
        "msrplij", ",", "msrplji", ",", "msrij", ",", "msrji", ",", "lthij", 
        ",", "tolvec", ",", "sysij", ",", "sysji", ",", "eqQ"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"plpr", " ", "=", " ", 
        RowBox[{"PlayerPairs", "[", "T", "]"}]}], ";", "\n", "    ", 
       RowBox[{"rvpr", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "plpr"}]}], ";", "\n", "    ", 
       RowBox[{"asspay", " ", "=", " ", 
        RowBox[{"AssgPay", "[", "payoff", "]"}]}], ";", "\n", "    ", 
       RowBox[{"sij", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"TIJsets", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", 
         " ", "plpr"}]}], ";", "\n", "    ", 
       RowBox[{"sji", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"TIJsets", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", 
         " ", "rvpr"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"msrplij", ",", "msrplji"}], "}"}], "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MaxExcess", "[", 
           RowBox[{"sij", ",", " ", "asspay"}], "]"}], ",", 
          RowBox[{"MaxExcess", "[", 
           RowBox[{"sji", ",", " ", "asspay"}], "]"}]}], "}"}]}], ";", "\n", 
       "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"msrij", ",", "msrji"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"msrplij", " ", "-", " ", "msrplji"}], ",", 
          RowBox[{"msrplji", " ", "-", " ", "msrplij"}]}], "}"}]}], ";", "\n",
        "    ", 
       RowBox[{"lthij", " ", "=", " ", 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"tolvec", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1.5", "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "7"}], ")"}]}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "lthij"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"sysij", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"MapThread", "[", 
          RowBox[{"LessEqual", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "msrij", "]"}], ",", " ", "tolvec"}], 
            "}"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"sysji", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"MapThread", "[", 
          RowBox[{"LessEqual", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "msrji", "]"}], ",", " ", "tolvec"}], 
            "}"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"eqQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"Join", ",", " ", 
          RowBox[{"{", 
           RowBox[{"sysij", ",", " ", "sysji"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "eqQ"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinExcessBalanced", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MinExcessBalanced", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinExcessBalanced", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "dimpay", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"dimpay", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "2"}], ",",
          "\n", "         ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
            ")"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"MinExcessBalCheck", "[", 
              RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
            " ", "payoff"}], ",", " ", "\n", "                       ", 
           "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
         "\n", "   ", 
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "1"}], ",",
          "\n", "            ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}],
             " ", ")"}], ",", " ", 
           RowBox[{"MinExcessBalCheck", "[", 
            RowBox[{"game", ",", " ", "payoff"}], "]"}], ",", " ", "\n", 
           "                         ", "True", ",", "  ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
         "\n", "   ", "True", ",", " ", 
         RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}]}]}], "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinExcessBalCheck", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "plpr", ",", " ", "rvpr", ",", " ", "asspay", ",", "sij", ",", "sji", 
        ",", "msrplij", ",", "msrplji", ",", "msrij", ",", " ", "msrji", ",", 
        "lthij", ",", "tolvec", ",", "sysij", ",", "sysji", ",", "eqQ"}], 
       "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"plpr", " ", "=", " ", 
        RowBox[{"PlayerPairs", "[", "T", "]"}]}], ";", "\n", "    ", 
       RowBox[{"rvpr", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "plpr"}]}], ";", "\n", "    ", 
       RowBox[{"asspay", " ", "=", " ", 
        RowBox[{"AssgPay", "[", "payoff", "]"}]}], ";", "\n", "    ", 
       RowBox[{"sij", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"TIJsets", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", 
         " ", "plpr"}]}], ";", "\n", "    ", 
       RowBox[{"sji", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"TIJsets", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", 
         " ", "rvpr"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"msrplij", ",", "msrplji"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"MinExcess", "[", 
           RowBox[{"sij", ",", " ", "asspay"}], "]"}], ",", 
          RowBox[{"MinExcess", "[", 
           RowBox[{"sji", ",", " ", "asspay"}], "]"}]}], "}"}]}], ";", "\n", 
       "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"msrij", ",", "msrji"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"msrplij", " ", "-", " ", "msrplji"}], ",", 
          RowBox[{"msrplji", " ", "-", " ", "msrplij"}]}], "}"}]}], ";", "\n",
        "    ", 
       RowBox[{"lthij", " ", "=", " ", 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"tolvec", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1.5", "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "8"}], ")"}]}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "lthij"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"sysij", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"MapThread", "[", 
          RowBox[{"LessEqual", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "msrij", "]"}], ",", " ", "tolvec"}], 
            "}"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"sysji", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"MapThread", "[", 
          RowBox[{"LessEqual", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "msrji", "]"}], ",", " ", "tolvec"}], 
            "}"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"eqQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"Join", ",", " ", 
          RowBox[{"{", 
           RowBox[{"sysij", ",", " ", "sysji"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "eqQ"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Quota", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Quota", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Quota", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"secsize", ",", "matrix"}], "}"}], ",", "\n", "\t\t ", 
      RowBox[{
       RowBox[{"secsize", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"T", ",", "#"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "T"}], "]"}]}], ";", "\n", "\t\t ", 
       RowBox[{"matrix", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "==", "j"}], ",", "0", ",", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}], "]"}]}], 
       ";", "   ", "\n", "                 ", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"matrix", ",", "secsize"}], "]"}]}]}], "\n", "\t\t   ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VerticesCore", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"VerticesCore", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VerticesCore", "[", "game_", "]"}], ":=", "\n", "   ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"liste", ",", "mat", ",", "values"}], "}"}], ",", "\n", "   ", 
     RowBox[{
      RowBox[{"liste", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">=", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
          " ", "liste"}], ",", "1"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mat", ",", " ", 
        RowBox[{"-", 
         RowBox[{"Last", "[", "mat", "]"}]}]}], "]"}], ";", "\n", "   ", 
      RowBox[{"values", " ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"Rest", "[", "Coalitions", "]"}]}]}], " ", ";", "\n", "   ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"values", ",", " ", 
        RowBox[{"-", 
         RowBox[{"Last", "[", "values", "]"}]}]}], "]"}], ";", "\n", "   ", 
      RowBox[{"VertexEnumeration", "[", 
       RowBox[{
        RowBox[{"-", "mat"}], ",", 
        RowBox[{"-", "values"}]}], "]"}]}]}], "\n", "\t  ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"045bc4e7-c1d1-4a0f-905a-b58b65541a90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Nucleolus", "/", "Kernel"}], " ", "section", " ", "starts"}], 
   " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"See", " ", 
    RowBox[{"M", ".", " ", "Maschler"}], " ", "1992", " ", "for", " ", "a", 
    " ", "detailed", " ", "description", " ", "of", " ", "the", " ", 
    "algorithm", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Kopelowitz", " ", "Algorithm"}], ")"}], "."}]}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedNucleolus", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ModifiedNucleolus", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedNucleolus", "[", 
      RowBox[{"game_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "ModifiedNucleolus", "]"}]}]}], "]"}], 
     " ", ":=", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "essgQ", ",", "propsets", ",", "const01", ",", "const02", ",", 
         "const", ",", "var", ",", "obf", ",", "cmat", ",", "bvect", ",", 
         "pra", ",", "minf", ",", "bds", ",", "ubds", ",", "blg", ",", "pbd", 
         ",", "zv", ",", "rl"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"essgQ", "=", 
         RowBox[{"EssentialQ", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"essgQ", ",", "False"}], "]"}], ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<No solution can be found. Game not essential\>\"", "]"}], 
           ";", 
           RowBox[{"Return", "[", 
            RowBox[{"{", "}"}], "]"}]}]}], "]"}], ";", "\n", "    ", 
        RowBox[{"propsets", " ", "=", " ", "ProperCoalitions"}], ";", "\n", 
        "    ", 
        RowBox[{"const01", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"{", "#", "}"}], "]"}], " ", "+", " ", 
              "Global`\[Alpha]"}], " ", ">=", "  ", 
             RowBox[{"v", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
           "propsets"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"const02", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Equal", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Total", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
                "T"}], "]"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"v", "[", "T", "]"}], "}"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"const", " ", "=", " ", 
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"const01", ",", " ", "const02"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"Length", "[", "const01", "]"}], " ", "+", " ", "1"}]}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"var", " ", "=", " ", 
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Global`\[Alpha]", ",", " ", 
             RowBox[{"x", " ", "/@", " ", "T"}]}], "}"}], ",", " ", "2"}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect"}], "}"}], " ", 
         "=", " ", 
         RowBox[{"LPtoMatrix", "[", 
          RowBox[{"Global`\[Alpha]", ",", " ", "const", ",", " ", "var"}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"pra", " ", "=", " ", 
         RowBox[{"LargestAmount", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"minf", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], "/@", " ", "T"}]}], 
        ";", "\n", "    ", 
        RowBox[{"bds", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{"minf", ",", "pra"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"ubds", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Union", "[", "#", "]"}], " ", "&"}], "/@", " ", "bds"}]}],
         ";", "\n", "    ", 
        RowBox[{"blg", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], " ", "&"}], "/@", " ", 
          "ubds"}]}], ";", "\n", "    ", 
        RowBox[{"pbd", " ", "=", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"blg", ",", "1"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"pbd", "==", 
             RowBox[{"{", "}"}]}], ",", "False"}], "]"}], ",", " ", "\n", 
          "             ", 
          RowBox[{
           RowBox[{"zv", " ", "=", " ", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{"Infinity", " ", "&"}], ",", " ", 
              RowBox[{"Length", "[", "pbd", "]"}]}], "]"}]}], ";", "\n", 
           "             ", 
           RowBox[{"rl", " ", "=", " ", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Rule", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Flatten", "[", "pbd", "]"}], ",", "zv"}], "}"}]}], 
             "]"}]}], ";", "\n", "             ", 
           RowBox[{"pra", "=", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"pra", ",", "rl"}], "]"}]}], ";", "\n", "             ", 
           
           RowBox[{"bds", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"minf", ",", "pra"}], "}"}]}], "]"}]}], ";"}]}], "\n", 
         "      ", "]"}], ";", "\n", "    ", 
        RowBox[{"bds", " ", "=", " ", 
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
             "bds"}], "}"}], ",", "2"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"SeqLP", "[", 
         RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect", ",", "bds"}], 
         "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", "\n", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedKernel", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ModifiedKernel", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ModifiedKernel", "[", 
      RowBox[{"game_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "ModifiedKernel", "]"}]}]}], "]"}], 
     " ", ":=", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "essgQ", ",", "propsets", ",", "const01", ",", "const02", ",", 
         "const", ",", "var", ",", "obf", ",", "cmat", ",", "bvect", ",", 
         "pra", ",", "minf", ",", "bds", ",", "ubds", ",", "blg", ",", "pbd", 
         ",", "zv", ",", "rl"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"essgQ", "=", 
         RowBox[{"EssentialQ", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"essgQ", ",", "False"}], "]"}], ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<No solution can be found. Game not essential\>\"", "]"}], 
           ";", 
           RowBox[{"Return", "[", 
            RowBox[{"{", "}"}], "]"}]}]}], "]"}], ";", "\n", "    ", 
        RowBox[{"propsets", " ", "=", " ", "ProperCoalitions"}], ";", "\n", 
        "    ", 
        RowBox[{"const01", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"{", "#", "}"}], "]"}], " ", "+", " ", 
              "Global`\[Alpha]"}], " ", ">=", "  ", 
             RowBox[{"v", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
           "propsets"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"const02", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Equal", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Total", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
                "T"}], "]"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"v", "[", "T", "]"}], "}"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"const", " ", "=", " ", 
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"const01", ",", " ", "const02"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"Length", "[", "const01", "]"}], " ", "+", " ", "1"}]}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"var", " ", "=", " ", 
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Global`\[Alpha]", ",", " ", 
             RowBox[{"x", " ", "/@", " ", "T"}]}], "}"}], ",", " ", "2"}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect"}], "}"}], " ", 
         "=", " ", 
         RowBox[{"LPtoMatrix", "[", 
          RowBox[{"Global`\[Alpha]", ",", " ", "const", ",", " ", "var"}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"pra", " ", "=", " ", 
         RowBox[{"LargestAmount", "[", "game", "]"}]}], ";", "\n", "    ", 
        RowBox[{"minf", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], "/@", " ", "T"}]}], 
        ";", "\n", "    ", 
        RowBox[{"bds", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{"minf", ",", "pra"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"ubds", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Union", "[", "#", "]"}], " ", "&"}], "/@", " ", "bds"}]}],
         ";", "\n", "    ", 
        RowBox[{"blg", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], " ", "&"}], "/@", " ", 
          "ubds"}]}], ";", "\n", "    ", 
        RowBox[{"pbd", " ", "=", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"blg", ",", "1"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"pbd", "==", 
             RowBox[{"{", "}"}]}], ",", "False"}], "]"}], ",", " ", "\n", 
          "             ", 
          RowBox[{
           RowBox[{"zv", " ", "=", " ", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{"Infinity", " ", "&"}], ",", " ", 
              RowBox[{"Length", "[", "pbd", "]"}]}], "]"}]}], ";", "\n", 
           "             ", 
           RowBox[{"rl", " ", "=", " ", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Rule", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Flatten", "[", "pbd", "]"}], ",", "zv"}], "}"}]}], 
             "]"}]}], ";", "\n", "             ", 
           RowBox[{"pra", "=", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"pra", ",", "rl"}], "]"}]}], ";", "\n", "             ", 
           
           RowBox[{"bds", "=", 
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"minf", ",", "pra"}], "}"}]}], "]"}]}], ";"}]}], "\n", 
         "      ", "]"}], ";", "\n", "    ", 
        RowBox[{"bds", " ", "=", " ", 
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
             "bds"}], "}"}], ",", "2"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"SeqLP2", "[", 
         RowBox[{
         "game", ",", "obf", ",", " ", "cmat", ",", " ", "bvect", ",", 
          "bds"}], "]"}]}]}], "\n", "    ", "]"}]}], ";"}]}]}]], "Code",Expres\
sionUUID->"8d31d4d8-f688-4129-bbdd-81d4e1548cc3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PreNucleolus", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"PreNucleolus", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreNucleolus", "[", 
     RowBox[{"game_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "PreNucleolus", "]"}]}]}], "]"}], " ", ":=",
     "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "propsets", ",", "const01", ",", "const02", ",", "const", ",", "var", 
        ",", "obf", ",", " ", "cmat", ",", " ", "bvect", ",", "pra", ",", 
        "minf", ",", "bds"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"propsets", " ", "=", " ", "ProperCoalitions"}], ";", "\n", 
       "    ", 
       RowBox[{"const01", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"{", "#", "}"}], "]"}], " ", "+", " ", 
             "Global`\[Alpha]"}], " ", ">=", "  ", 
            RowBox[{"v", "[", "#", "]"}]}], " ", "&"}], " ", "/@", " ", 
          "propsets"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"const02", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Equal", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
               "T"}], "]"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"v", "[", "T", "]"}], "}"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"const", " ", "=", " ", 
        RowBox[{"FlattenAt", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"const01", ",", " ", "const02"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", "const01", "]"}], " ", "+", " ", "1"}]}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"var", " ", "=", " ", 
        RowBox[{"FlattenAt", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Global`\[Alpha]", ",", " ", 
            RowBox[{"x", " ", "/@", " ", "T"}]}], "}"}], ",", " ", "2"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"LPtoMatrix", "[", 
         RowBox[{"Global`\[Alpha]", ",", " ", "const", ",", " ", "var"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"pra", " ", "=", " ", 
        RowBox[{"LargestAmount", "[", "game", "]"}]}], ";", "\n", "    ", 
       RowBox[{"minf", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Infinity"}], " ", "&"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"bds", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{"minf", ",", "pra"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       
       RowBox[{"bds", " ", "=", " ", 
        RowBox[{"FlattenAt", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
            "bds"}], "}"}], ",", "2"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"SeqLP", "[", 
        RowBox[{"obf", ",", " ", "cmat", ",", " ", "bvect", ",", "bds"}], 
        "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", "  ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LexiCenter", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"LexiCenter", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LexiCenter", "[", 
    RowBox[{"game_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "LexiCenter", "]"}]}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ModifiedNucleolus", "[", 
    RowBox[{"game", ",", "opts"}], "]"}]}], ";"}], "\n"}], "Code",ExpressionUU\
ID->"6612f10c-4ce0-4312-8a14-e27d7ebc4828"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EssentialQ", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"indrat", ",", "sumirat", ",", "zeroess"}], "}"}], ",", " ", 
      "\n", "   ", 
      RowBox[{
       RowBox[{"indrat", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], "/@", "T"}]}], ";", 
       "  ", "\n", "   ", 
       RowBox[{"sumirat", " ", "=", " ", 
        RowBox[{"Total", "[", "indrat", "]"}]}], ";", "\n", "   ", 
       RowBox[{"zeroess", " ", "=", " ", 
        RowBox[{"sumirat", "<=", 
         RowBox[{"v", "[", "T", "]"}]}]}]}]}], " ", "\n", "   ", "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Formula", " ", "of", " ", "the", " ", "Nucleolus", " ", "for", " ", 
    "Three", " ", "Person", " ", "Games", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"cf", ".", " ", "Leng"}], " ", "and", " ", "Parlar"}], ",", 
      " ", "2010"}], ")"}]}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NucleolusThreePerson", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"NucleolusThreePerson", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NucleolusThreePerson", "[", "game_", "]"}], " ", ":=", " ", "\n",
     "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dmQ", ",", "cl2", ",", "ci", ",", "cdi", ",", "xd3", ",", "cd1", ",", 
        "pcd1", ",", "ptk", ",", "cd4a", ",", "cd4b", ",", "cd4", ",", "pcd4",
         ",", "pcd4b", ",", "tk", ",", "tkl", ",", "tk2", ",", "ch", ",", 
        "cd2", ",", "cd2a", ",", "cd2b", ",", "tc", ",", "cd3a", ",", "cd3b", 
        ",", "cd3", ",", "ccik", ",", "pstrQ", ",", "cik", ",", "ext", ",", 
        "sl1", ",", "sl2", ",", "rl1", ",", "rl2", ",", "rl3", ",", "its", 
        ",", "cmp", ",", "pk", ",", "svl", ",", "cl"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{
       RowBox[{"dmQ", "=", 
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"2", "^", 
           RowBox[{"Length", "[", "T", "]"}]}], ",", 
          RowBox[{"2", "^", "3"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{"dmQ", ",", "True", ",", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<Game has incorrect dimension!\>\"", "]"}], ";", 
          RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", "    ", 
       RowBox[{"cl2", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"Subsets", "[", "T", "]"}], ",", 
            RowBox[{"-", "4"}]}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"ci", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"cl2", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", "#", ",", "___"}], "}"}]}], "]"}], " ", 
          "&"}], "/@", " ", "T"}]}], ";", "\n", "    ", 
       RowBox[{"cdi", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"cl2", ",", 
            RowBox[{"{", 
             RowBox[{"___", ",", "#", ",", "___"}], "}"}]}], "]"}], " ", 
          "&"}], "/@", " ", "T"}]}], ";", "\n", "    ", 
       RowBox[{"xd3", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v", "[", "T", "]"}], " ", "+", " ", "#"}], ")"}], "/", 
            "3"}], "]"}], " ", "&"}], "/@", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subtract", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"v", ",", "#"}], "]"}], "]"}], " ", "&"}], "/@", " ",
               "ci"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "*", 
                RowBox[{"Map", "[", 
                 RowBox[{"v", ",", "#"}], "]"}]}], " ", "&"}], "/@", " ", 
              "cdi"}]}], "}"}]}], "]"}]}]}], ";", "\n", "    ", 
       RowBox[{"(*", " ", 
        RowBox[{"Defining", " ", "Cases"}], "  ", "*)"}], "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"CoreQ", "[", "game", "]"}], ",", "False"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Case 0\>\"", "]"}], ";", "xd3"}], ",", 
         "\n", "      ", 
         RowBox[{
          RowBox[{"cd1", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"GreaterEqual", "[", 
              RowBox[{
               RowBox[{"v", "[", "T", "]"}], ",", 
               RowBox[{"3", "*", 
                RowBox[{"v", "[", "#", "]"}]}]}], "]"}], " ", "&"}], "/@", 
            " ", "cl2"}]}], ";", "\n", "      ", 
          RowBox[{"pcd1", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"cd1", ",", "False"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"ptk", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"cl2", ",", "pcd1"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"cd4a", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"2", "*", 
                 RowBox[{"v", "[", "#", "]"}]}], "]"}], " ", "&"}], "/@", " ", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"cl2", ",", "#"}], "]"}]}], " ", "&"}], "/@", " ", 
            "cl2"}]}], ";", "\n", "      ", 
          RowBox[{"cd4b", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "T", "]"}], "+", 
              RowBox[{"v", "[", "#", "]"}]}], " ", "&"}], "/@", " ", 
            "cl2"}]}], ";", "\n", "      ", 
          RowBox[{"cd4", "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"GreaterEqual", "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"cd4b", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Total", "[", "#", "]"}], " ", "&"}], "/@", " ", 
                "cd4a"}]}], "}"}]}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"pcd4", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"cl2", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"cd4", ",", "True"}], "]"}]}], "]"}]}], ";", "\n", 
          "      ", 
          RowBox[{"tk2", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"cl2", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"cd1", ",", "False"}], "]"}]}], "]"}]}], ";", "\n", 
          "      ", 
          RowBox[{"tkl", " ", "=", " ", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"tk2", ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], ",", " ", 
             RowBox[{"{", "}"}], ",", "\n", "                  ", 
             RowBox[{"SameQ", "[", 
              RowBox[{"pcd4", ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], ",", " ", 
             RowBox[{"{", "}"}], ",", "\n", "                  ", "True", ",",
              " ", 
             RowBox[{"First", "[", 
              RowBox[{"Intersection", "[", 
               RowBox[{"tk2", ",", " ", "pcd4"}], "]"}], "]"}]}], "]"}]}], 
          ";", "\n", "      ", 
          RowBox[{"ch", "=", 
           RowBox[{"Cases", "[", 
            RowBox[{"ci", ",", 
             RowBox[{"{", 
              RowBox[{"___", ",", "tkl", ",", "___"}], "}"}]}], "]"}]}], ";", 
          "\n", "      ", 
          RowBox[{"tc", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"Complement", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", "tkl", "}"}]}], "]"}], "]"}], " ", "&"}], "/@", 
            " ", "ch"}]}], ";", "\n", "      ", 
          RowBox[{"cd2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"GreaterEqual", "[", 
                   RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"v", "[", "T", "]"}], "}"}], ",", "#"}], "}"}]}], 
                "]"}], " ", "&"}], "/@", " ", "#"}], " ", "&"}], "/@", "  ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
                RowBox[{"2", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"cl2", ",", 
                    RowBox[{"{", 
                    RowBox[{"___", ",", "#", ",", "___"}], "}"}]}], "]"}]}], 
                    " ", "&"}], "/@", " ", "#"}], ")"}]}]}], " ", "&"}], "/@",
               " ", "cl2"}], ")"}]}]}], ";", "\n", "      ", 
          RowBox[{"cd2a", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "T", "]"}], " ", ">=", " ", 
              RowBox[{
               RowBox[{"v", "[", "tkl", "]"}], " ", "+", " ", 
               RowBox[{"2", "*", 
                RowBox[{"v", "[", "#", "]"}]}]}]}], " ", "&"}], "/@", " ", 
            "tc"}]}], ";", "\n", "      ", 
          RowBox[{"cd2b", "=", 
           RowBox[{"Apply", "[", 
            RowBox[{"Or", ",", "cd2a"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"cd3a", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"GreaterEqual", "[", 
              RowBox[{
               RowBox[{"v", "[", "tkl", "]"}], ",", "#"}], "]"}], " ", "&"}], 
            "/@", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "#", "]"}], "&"}], ",", " ", "tc"}], 
             "]"}]}]}], ";", "\n", "      ", 
          RowBox[{"cd3b", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"cd3a", ",", "True"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"cd3", "=", 
           RowBox[{"SameQ", "[", 
            RowBox[{"cd3b", ",", 
             RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"pstrQ", "=", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"Or", ",", 
                 RowBox[{"Flatten", "[", "#", "]"}]}], "]"}], " ", "&"}], "/@",
               " ", "cd2"}], ",", "True"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"cik", " ", "=", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"pstrQ", ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], ",", " ", 
             RowBox[{"First", "[", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"ci", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"___", ",", " ", "tkl", ",", " ", "___"}], "}"}]}], 
               "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"Extract", "[", 
               RowBox[{"ci", ",", " ", "pstrQ"}], "]"}], " ", "//", " ", 
              "First"}]}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"(*", 
           RowBox[{
           "Assigning", " ", "Payoffs", " ", "to", " ", "the", " ", 
            "Players"}], "  ", "*)"}], "\n", "      ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"And", ",", "cd1"}], "]"}], ",", "\n", 
            "                 ", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<Case 1\>\"", "]"}], ";", 
             RowBox[{"Array", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"v", "[", "T", "]"}], "/", "3"}], " ", "&"}], ",", 
               "3"}], "]"}]}], ",", "\n", "            ", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"Or", ",", "cd1"}], "]"}], ",", "True"}], "]"}], " ", 
             "&&", " ", 
             RowBox[{"Apply", "[", 
              RowBox[{"And", ",", " ", "cd2a"}], "]"}]}], ",", "\n", 
            "                 ", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<Case 2\>\"", "]"}], ";", "\n", 
             "                 ", 
             RowBox[{"ext", "=", 
              RowBox[{"Extract", "[", 
               RowBox[{"cl2", ",", "pcd1"}], "]"}]}], ";", "\n", 
             "                 ", 
             RowBox[{"sl1", "=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"v", "[", "T", "]"}], " ", "+", " ", 
                   RowBox[{"v", "[", "#", "]"}]}], ")"}], "/", "4"}], " ", 
                "&"}], "/@", " ", "ext"}]}], ";", "\n", "                 ", 
             RowBox[{"sl2", "=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
                   RowBox[{"v", "[", "#", "]"}]}], ")"}], "/", "2"}], " ", 
                "&"}], "/@", " ", "ext"}]}], ";", "\n", "                 ", 
             RowBox[{"rl1", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"MapThread", "[", 
                 RowBox[{"Rule", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "#", "}"}], ",", "sl1"}], "}"}]}], "]"}], 
                " ", "&"}], "/@", " ", 
               RowBox[{"Flatten", "[", "ext", "]"}]}]}], ";", "\n", 
             "                 ", 
             RowBox[{"rl2", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Complement", "[", 
                   RowBox[{"T", ",", 
                    RowBox[{"Flatten", "[", "ext", "]"}]}], "]"}], ",", 
                  "sl2"}], "}"}]}], "]"}]}], ";", "\n", "                 ", 
             RowBox[{"T", " ", "/.", " ", 
              RowBox[{"Flatten", "[", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"rl1", ",", "rl2"}], "]"}], "]"}]}]}], ",", "\n", 
            "            ", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"cd3", ",", "False"}], "]"}], " ", "&&", " ", 
             RowBox[{"SameQ", "[", 
              RowBox[{"cd2b", ",", "True"}], "]"}]}], ",", "\n", "\t        ", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<Case 3\>\"", "]"}], ";", "\n", 
             "                ", 
             RowBox[{"ptk", " ", "=", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "ptk", "]"}], " ", "==", " ", "1"}], 
                ",", "\n", "                        ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "pcd4", "]"}], " ", "==", " ", 
                   "1"}], ",", "\n", "                           ", 
                  RowBox[{
                   RowBox[{"pcd4b", " ", "=", " ", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"cl2", ",", " ", 
                    RowBox[{"Position", "[", 
                    RowBox[{"cd4", ",", " ", "False"}], "]"}]}], "]"}]}], ";",
                    "\n", "                           ", 
                   RowBox[{"svl", " ", "=", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
                    "pcd4b"}]}], ";", "\n", "                           ", 
                   RowBox[{"cl", " ", "=", " ", 
                    RowBox[{"First", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"pcd4b", ",", " ", 
                    RowBox[{"Position", "[", 
                    RowBox[{"svl", ",", " ", 
                    RowBox[{"Max", "[", "svl", "]"}]}], "]"}]}], "]"}], 
                    "]"}]}], ";", "\n", "                           ", 
                   RowBox[{"{", 
                    RowBox[{"cl", ",", " ", "tkl"}], "}"}]}], " ", ",", " ", 
                  "pcd4"}], "]"}], ",", " ", "ptk"}], "]"}]}], ";", "\n", 
             "                ", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"ptk", " ", "=", " ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "ptk", "]"}], " ", "==", " ", "1"}],
                   ",", " ", "pcd4", ",", " ", "ptk"}], "]"}]}], ";"}], " ", 
              "*)"}], "\n", "                ", 
             RowBox[{"its", "=", 
              RowBox[{"Apply", "[", 
               RowBox[{"Intersection", ",", "ptk"}], "]"}]}], ";", "\n", 
             "                ", 
             RowBox[{"rl1", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{"its", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
                    "ptk"}], "]"}], "/", "2"}], "}"}]}], "}"}]}], "]"}]}], 
             ";", "\n", "                ", 
             RowBox[{"cmp", "=", 
              RowBox[{"Complement", "[", 
               RowBox[{"tkl", ",", "its"}], "]"}]}], ";", "\n", 
             "                ", 
             RowBox[{"ccik", "=", 
              RowBox[{"Complement", "[", 
               RowBox[{"ptk", ",", 
                RowBox[{"{", "tkl", "}"}]}], "]"}]}], ";", "\n", 
             "                ", 
             RowBox[{"rl2", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{"cmp", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
                    RowBox[{"v", "[", "#", "]"}]}], ")"}], "/", "2"}], " ", 
                    "&"}], "/@", " ", "ccik"}]}], "}"}]}], "]"}]}], ";", "\n",
              "                ", 
             RowBox[{"rl3", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Complement", "[", 
                   RowBox[{"T", ",", "tkl"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
                    RowBox[{"v", "[", "tkl", "]"}]}], ")"}], "/", "2"}], 
                   "}"}]}], "}"}]}], "]"}]}], ";", "\n", "                ", 
             RowBox[{"T", " ", "/.", " ", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"rl1", ",", " ", "rl2", ",", " ", "rl3"}], "}"}], 
               "]"}]}]}], ",", "\n", "            ", 
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"Or", ",", "cd4"}], "]"}], " ", "&&", " ", 
             RowBox[{"SameQ", "[", 
              RowBox[{"cd2b", ",", "False"}], "]"}]}], ",", "\n", 
            "                ", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<Case 4\>\"", "]"}], ";", "\n", 
             "                ", 
             RowBox[{"pk", "=", 
              RowBox[{"Complement", "[", 
               RowBox[{"T", ",", "tkl"}], "]"}]}], ";", "\n", 
             "                ", 
             RowBox[{"its", "=", 
              RowBox[{
               RowBox[{"First", "[", "tkl", "]"}], " ", "//", "List"}]}], ";",
              "\n", "                ", 
             RowBox[{"rl2", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{"its", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"v", "[", "T", "]"}], " ", "+", " ", 
                    RowBox[{"v", "[", "tkl", "]"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Subtract", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
                    "tc"}]}], "]"}]}]}], ")"}], "/", "4"}], "}"}]}], "}"}]}], 
               "]"}]}], ";", "\n", "                ", 
             RowBox[{"cmp", "=", 
              RowBox[{
               RowBox[{"Last", "[", "tkl", "]"}], " ", "//", "List"}]}], ";", 
             "\n", "                ", 
             RowBox[{"rl1", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{"cmp", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"v", "[", "T", "]"}], " ", "+", " ", 
                    RowBox[{"v", "[", "tkl", "]"}], " ", "-", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Subtract", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
                    "tc"}]}], "]"}]}]}], ")"}], "/", "4"}], "}"}]}], "}"}]}], 
               "]"}]}], ";", "\n", "                ", 
             RowBox[{"rl3", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Rule", ",", 
                RowBox[{"{", 
                 RowBox[{"pk", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
                    RowBox[{"v", "[", "tkl", "]"}]}], ")"}], "/", "2"}], 
                   "}"}]}], "}"}]}], "]"}]}], ";", "\n", "                ", 
             RowBox[{"T", " ", "/.", " ", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"rl1", ",", " ", "rl2", ",", " ", "rl3"}], "}"}], 
               "]"}]}]}], ",", "\n", "           ", "True", ",", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<Case 5\>\"", "]"}], ";", "xd3"}]}], 
           "\n", "           ", "]"}]}]}], "\n", "      ", "]"}]}]}], "\n", 
     " ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", "\n", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "The", " ", "next", " ", "function", " ", "translates", " ", "the", " ", 
      "definition", " ", "of", " ", "the", " ", "Nucleolus", " ", "into", 
      "\n", " ", "a", " ", "sequence", " ", "of", " ", "linear", " ", 
      "programs", " ", "on", " ", "the", " ", "pre"}], "-", 
     RowBox[{"imputation", " ", 
      RowBox[{"set", ".", " ", "\n", " ", "To"}], " ", "obtain", " ", "a", 
      " ", "pre"}], "-", 
     RowBox[{
     "kernel", " ", "solution", " ", "the", " ", "recursion", " ", 
      "stops"}]}], ",", " ", 
    RowBox[{"in", " ", "general"}], ",", " ", 
    RowBox[{
    "before", "\n", " ", "the", " ", "nucleolus", " ", "of", " ", "the", " ", 
     "game", " ", "has", " ", "been", " ", 
     RowBox[{"computed", ".", " ", "One"}], " ", "stopping", " ", "criterion",
      " ", "of", " ", "\n", " ", "the", " ", "recursion", " ", "procedure", 
     " ", "is", " ", "if", " ", "the", " ", "set", " ", "of", " ", "new", " ",
      "equal", " ", "constraints", " ", "is", " ", 
     RowBox[{"empty", ".", " ", "\n", " ", "C", ".", "f", ".", " ", "Owen"}], 
     " ", "1974", " ", "and", " ", "Owen", " ", 
     RowBox[{"(", 
      RowBox[{"1995", ",", " ", 
       RowBox[{
        RowBox[{"pp", ".322"}], "-", "334."}]}], ")"}]}]}], "\n", 
   "*)"}]}]}], "Code",ExpressionUUID->"8a149f6b-d036-4fb1-98da-81785d7f9b93"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SeqLP", "[", 
    RowBox[{
    "obf_", ",", " ", "cmat_List", ",", " ", "bvect_List", ",", "bds_List", 
     ",", 
     RowBox[{"bA_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "      ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cmat1", ",", "dl1", ",", "dl2", ",", "dl3", ",", "dl4", ",", "res", 
       ",", "rl2", ",", "const01", ",", "const02", ",", "const", ",", "gr", 
       ",", "ps", ",", "al1", ",", "psal1", ",", "ov", ",", "ps1", ",", "zv", 
       ",", "rl", ",", "bA1", ",", "lb", ",", "bA2", ",", "ons", ",", "wghs", 
       ",", "mr", ",", "pw", ",", "pwQ", ",", "extb", ",", "bvect1", ",", 
       "twv", ",", "ps2", ",", "rl3", ",", "zQ"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"cmat1", "=", 
       RowBox[{"SparseArray", "[", "cmat", "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dl1", ",", "dl2", ",", "dl3", ",", "dl4"}], "}"}], "=", 
       RowBox[{"DualLinearProgramming", "[", 
        RowBox[{"obf", ",", "cmat1", ",", "bvect", ",", "bds"}], "]"}]}], ";",
       "\n", "    ", 
      RowBox[{"res", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"dl1", ",", 
         RowBox[{"-", 
          RowBox[{"Length", "[", "T", "]"}]}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"dl1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "Indeterminate"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"gr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Greater", "[", 
          RowBox[{"#", ",", "0"}], "]"}], " ", "&"}], "/@", " ", "dl2"}]}], 
      ";", "\n", "    ", 
      RowBox[{"ps", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"gr", ",", "True"}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"al1", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "cmat"}]}], 
      ";", "\n", "    ", 
      RowBox[{"psal1", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"al1", ",", "0"}], "]"}], "]"}]}], ";", " ", "\n", "    ", 
      RowBox[{"ps", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"ps", ",", "psal1"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"ps", ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"ov", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"1", " ", "&"}], ",", 
         RowBox[{"Length", "[", "ps", "]"}]}], "]"}]}], ";", " ", "\n", 
      "    ", 
      RowBox[{"ps1", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"ps", ",", "ov"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"zv", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", " ", "&"}], ",", 
         RowBox[{"Length", "[", "ps", "]"}]}], "]"}]}], ";", " ", "\n", 
      "    ", 
      RowBox[{"rl", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps1", ",", "zv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"cmat1", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"cmat", ",", "rl"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bA1", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"cmat1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "___"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"lb", " ", "=", " ", 
       RowBox[{"Length", "[", "bA", "]"}]}], ";", "\n", "    ", 
      RowBox[{"bA2", "=", 
       RowBox[{"FlattenAt", "[", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"bA", ",", "bA1"}], "]"}], ",", 
         RowBox[{"lb", "+", "1"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bA2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", 
           RowBox[{"-", 
            RowBox[{"Length", "[", "T", "]"}]}]}], "]"}], " ", "&"}], "/@", 
        " ", "bA2"}]}], ";", "\n", "    ", 
      RowBox[{"ons", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"1", " ", "&"}], ",", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"wghs", "=", 
       RowBox[{
        RowBox[{"PseudoInverse", "[", 
         RowBox[{"Transpose", "[", "bA2", "]"}], "]"}], ".", "ons"}]}], ";", 
      "\n", "    ", 
      RowBox[{"mr", " ", "=", " ", 
       RowBox[{"MatrixRank", "[", "bA2", "]"}]}], ";", "\n", "    ", 
      RowBox[{"pw", "=", 
       RowBox[{"Positive", "[", "wghs", "]"}]}], ";", "\n", "    ", 
      RowBox[{"pwQ", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", "pw"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"mr", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"SameQ", "[", 
          RowBox[{"pwQ", ",", "True"}], "]"}]}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"extb", "=", 
       RowBox[{
        RowBox[{"Extract", "[", 
         RowBox[{"bvect", ",", "ps1"}], "]"}], "-", 
        RowBox[{"dl1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"rl2", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps1", ",", "extb"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bvect1", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"bvect", ",", "rl2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"twv", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"2", " ", "&"}], ",", 
         RowBox[{"Length", "[", "ps", "]"}]}], "]"}]}], ";", "     ", "\n", 
      "    ", 
      RowBox[{"ps2", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"ps", ",", "twv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"rl3", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps2", ",", "zv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bvect1", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"bvect1", ",", "rl3"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"zQ", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "cmat1"}],
          ",", 
         RowBox[{
          RowBox[{"#", "==", "1"}], " ", "&"}]}], "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"zQ", ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "res", ",", 
        RowBox[{"SeqLP", "[", 
         RowBox[{"obf", ",", "cmat1", ",", "bvect1", ",", "bds", ",", "bA2"}],
          "]"}]}], "]"}]}]}], " ", "\n", "]"}]}], ";"}]], "Code",ExpressionUUI\
D->"865b5b1f-37b0-4e4e-8dfa-ebba8e10710a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SeqLP2", "[", 
    RowBox[{
    "game_", ",", "obf_", ",", " ", "cmat_List", ",", " ", "bvect_List", ",", 
     "bds_List", ",", 
     RowBox[{"bA_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", "\n", "      ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cmat1", ",", "dl1", ",", "dl2", ",", "dl3", ",", "dl4", ",", "pkQ", 
       ",", "const01", ",", "const02", ",", "const", ",", "gr", ",", "ps", 
       ",", "al1", ",", "psal1", ",", "ov", ",", "ps1", ",", "zv", ",", "rl", 
       ",", "bA1", ",", "lb", ",", "bA2", ",", "ons", ",", "wghs", ",", "mr", 
       ",", "pw", ",", "pwQ", ",", "extb", ",", "bvect1", ",", "twv", ",", 
       "ps2", ",", "rl3", ",", "zQ"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"cmat1", "=", 
       RowBox[{"SparseArray", "[", "cmat", "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dl1", ",", "dl2", ",", "dl3", ",", "dl4"}], "}"}], "=", 
       RowBox[{"DualLinearProgramming", "[", 
        RowBox[{"obf", ",", "cmat1", ",", "bvect", ",", "bds"}], "]"}]}], ";",
       "\n", "    ", 
      RowBox[{"res", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"dl1", ",", 
         RowBox[{"-", 
          RowBox[{"Length", "[", "T", "]"}]}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"pkQ", " ", "=", " ", 
       RowBox[{"KernelImputationQ", "[", 
        RowBox[{"game", ",", "res"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"pkQ", ",", "True"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"dl1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "Indeterminate"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"gr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Greater", "[", 
          RowBox[{"#", ",", "0"}], "]"}], " ", "&"}], "/@", " ", "dl2"}]}], 
      ";", "\n", "    ", 
      RowBox[{"ps", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"gr", ",", "True"}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"al1", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "cmat"}]}], 
      ";", "\n", "    ", 
      RowBox[{"psal1", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"al1", ",", "0"}], "]"}], "]"}]}], ";", " ", "\n", "    ", 
      RowBox[{"ps", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"ps", ",", "psal1"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"ps", ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"ov", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"1", " ", "&"}], ",", 
         RowBox[{"Length", "[", "ps", "]"}]}], "]"}]}], ";", " ", "\n", 
      "    ", 
      RowBox[{"ps1", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"ps", ",", "ov"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"zv", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", " ", "&"}], ",", 
         RowBox[{"Length", "[", "ps", "]"}]}], "]"}]}], ";", " ", "\n", 
      "    ", 
      RowBox[{"rl", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps1", ",", "zv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"cmat1", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"cmat", ",", "rl"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bA1", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"cmat1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "___"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"lb", " ", "=", " ", 
       RowBox[{"Length", "[", "bA", "]"}]}], ";", "\n", "    ", 
      RowBox[{"bA2", "=", 
       RowBox[{"FlattenAt", "[", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"bA", ",", "bA1"}], "]"}], ",", 
         RowBox[{"lb", "+", "1"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bA2", "=", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"#", ",", 
            RowBox[{"-", 
             RowBox[{"Length", "[", "T", "]"}]}]}], "]"}], " ", "&"}], "/@", 
         " ", "bA2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ons", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"1", " ", "&"}], ",", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"wghs", "=", 
       RowBox[{
        RowBox[{"PseudoInverse", "[", 
         RowBox[{"Transpose", "[", "bA2", "]"}], "]"}], ".", "ons"}]}], ";", 
      "\n", "    ", 
      RowBox[{"mr", " ", "=", " ", 
       RowBox[{"MatrixRank", "[", "bA2", "]"}]}], ";", "\n", "    ", 
      RowBox[{"pw", "=", 
       RowBox[{"Positive", "[", "wghs", "]"}]}], ";", "\n", "    ", 
      RowBox[{"pwQ", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", "pw"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"mr", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"SameQ", "[", 
          RowBox[{"pwQ", ",", "True"}], "]"}]}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";", "\n", "    ", 
      RowBox[{"extb", "=", 
       RowBox[{
        RowBox[{"Extract", "[", 
         RowBox[{"bvect", ",", "ps1"}], "]"}], "-", 
        RowBox[{"dl1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"rl2", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps1", ",", "extb"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bvect1", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"bvect", ",", "rl2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"twv", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"2", " ", "&"}], ",", 
         RowBox[{"Length", "[", "ps", "]"}]}], "]"}]}], ";", "     ", "\n", 
      "    ", 
      RowBox[{"ps2", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"ps", ",", "twv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"rl3", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{"ps2", ",", "zv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"bvect1", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"bvect1", ",", "rl3"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"zQ", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "cmat1"}],
          ",", 
         RowBox[{
          RowBox[{"#", "==", "1"}], " ", "&"}]}], "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"zQ", ",", 
          RowBox[{"{", "}"}]}], "]"}], ",", "res", ",", 
        RowBox[{"SeqLP2", "[", 
         RowBox[{
         "game", ",", "obf", ",", "cmat1", ",", "bvect1", ",", "bds", ",", 
          "bA2"}], "]"}]}], "]"}]}]}], " ", "\n", "]"}]}], ";"}]], "Code",Expr\
essionUUID->"e7dd3262-3633-40ea-b9ac-f45fc3da67e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"In", " ", "this", " ", "section"}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "provide", " ", "two", " ", "functions", " ", "to", " ", 
      "calculate", " ", "the", " ", "pre"}], "-", 
     RowBox[{
     "nucleolus", " ", "as", " ", "well", " ", "as", " ", "the", " ", 
      "nucleolus"}]}], ",", " ", 
    RowBox[{
    "which", " ", "have", " ", "been", " ", "invented", " ", "by", " ", 
     RowBox[{"L", ".", " ", "M", ".", " ", "Ruiz"}]}], ",", " ", 
    RowBox[{"F", ".", " ", "Valenciano"}], ",", " ", 
    RowBox[{"and", " ", 
     RowBox[{"J", ".", " ", "M", ".", " ", "Zarzuelo"}], " ", 
     RowBox[{
      RowBox[{"(", "1996", ")"}], "."}]}]}], "\n", "*)"}], "   ", "\n", "\n", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LSPreNuc", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"LSPreNuc", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LSPreNuc", "[", "game_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "av", ",", "lt", ",", "pd", ",", "sS", ",", "Si", ",", "Sni", ",", 
         "vi", ",", "vni", ",", "lci", ",", "lcni", ",", "pdi", ",", "pdni", 
         ",", "sm1", ",", "sm2", ",", "sd1"}], "}"}], ",", "\n", "\t\t ", 
       RowBox[{
        RowBox[{"lt", "=", 
         RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "                 ", 
        
        RowBox[{"av", "=", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], "/", "lt"}]}], ";", "\n", 
        "\t         ", 
        RowBox[{"pd", "=", 
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"lt", "*", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"lt", "-", "2"}], ")"}]}]}], ")"}]}], ")"}]}], ";", 
        "\n", "\t         ", 
        RowBox[{"sS", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}]}], ";", "\n",
         "\t         ", 
        RowBox[{"Si", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"sS", ",", 
             RowBox[{"{", 
              RowBox[{"___", ",", "#", ",", "___"}], "}"}]}], "]"}], " ", 
           "&"}], "/@", " ", "T"}]}], ";", "\n", "                 ", 
        RowBox[{"Sni", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{"sS", ",", 
             RowBox[{"{", 
              RowBox[{"___", ",", "#", ",", "___"}], "}"}]}], "]"}], " ", 
           "&"}], "/@", " ", "T"}]}], ";", "\n", "\t\t ", 
        RowBox[{"vi", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
             RowBox[{"Si", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], ",", "T"}], " ", 
          "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"vni", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
             RowBox[{"Sni", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], ",", "T"}], " ", 
          "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"lci", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"lt", "-", 
               RowBox[{"Length", "[", "#", "]"}]}], " ", "&"}], "/@", " ", 
             RowBox[{"Si", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], ",", "T"}], 
          "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"lcni", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], " ", "&"}], "/@", " ", 
             RowBox[{"Sni", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], ",", "T"}], 
          "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"pdi", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"vi", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "*", 
            RowBox[{"lci", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], "/@", " ", "T"}]}],
         ";", "\n", "\t\t ", 
        RowBox[{"pdni", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"vni", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "*", 
            RowBox[{"lcni", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], "/@", " ", "T"}]}],
         ";", "\n", "\t\t ", 
        RowBox[{"sm1", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Plus", " ", "@@", " ", "#"}], ")"}], " ", "&"}], "/@", 
          " ", "pdi"}]}], ";", " ", "\n", "\t\t ", 
        RowBox[{"sm2", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Plus", " ", "@@", " ", "#"}], ")"}], " ", "&"}], "/@", 
          " ", "pdni"}]}], ";", "\n", "\t\t ", 
        RowBox[{"sd1", "=", 
         RowBox[{"av", "+", 
          RowBox[{"pd", "*", 
           RowBox[{"(", 
            RowBox[{"sm1", "-", "sm2"}], ")"}]}]}]}]}]}], "\n", "\t\t ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LSNuc", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"LSNuc", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LSNuc", "[", "game_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lt", ",", "av", ",", "sV", ",", "sN", ",", "sS", ",", "Si", ",", 
         "vi", ",", "lci", ",", "nV", ",", "py", ",", "ngQ", ",", "mM"}], 
        "}"}], ",", "\n", "                 ", 
       RowBox[{
        RowBox[{"lt", "=", 
         RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "                 ", 
        
        RowBox[{"av", "=", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], "/", "lt"}]}], ";", "\n", "\t\t ", 
        RowBox[{"sN", "=", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"lt", "-", "2"}], ")"}]}]}], ";", "\n", "\t         ", 
        RowBox[{"sS", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}]}], ";", "\n",
         "\t         ", 
        RowBox[{"Si", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Cases", "[", 
            RowBox[{"sS", ",", 
             RowBox[{"{", 
              RowBox[{"___", ",", "#", ",", "___"}], "}"}]}], "]"}], " ", 
           "&"}], "/@", " ", "T"}]}], ";", "\n", "\t\t ", 
        RowBox[{"vi", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
             RowBox[{"Si", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], ",", "T"}], " ", 
          "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"lci", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], " ", "&"}], "/@", " ", 
             RowBox[{"Si", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], " ", "&"}], ",", "T"}], 
          "]"}]}], ";", "\n", "                 ", 
        RowBox[{"sV", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Plus", " ", "@@", " ", "#"}], " ", "&"}], ",", "vi"}], 
          "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"nV", "=", 
         RowBox[{"Plus", " ", "@@", " ", "sV"}]}], ";", "    ", "\n", "\t\t ", 
        RowBox[{"py", "=", 
         RowBox[{"av", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"lt", "*", "sV"}], "-", "nV"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"lt", "*", "sN"}], ")"}]}]}]}], ";", "\n", "\t\t ", 
        RowBox[{"ngQ", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Negative", "[", "#", "]"}], " ", "&"}], "/@", " ", 
          "py"}]}], ";", "\n", "\t\t ", 
        RowBox[{"mM", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"ngQ", ",", "True"}], "]"}], "]"}]}], ";", "\n", "\t\t ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"mM", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"Return", "[", "py", "]"}], ",", "\n", "                 ", 
          
          RowBox[{
           RowBox[{"cM", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{"T", ",", "mM"}], "]"}]}], ";", "\n", 
           "                 ", 
           RowBox[{"fLSnc", "[", 
            RowBox[{"py", ",", "cM", ",", "mM", ",", "lt"}], "]"}]}]}], "\n", 
         "\t\t ", "]"}]}]}], "      ", "\n", "\t\t ", "\n", "\n", "\t      ", 
      "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"02e8ac9f-c7db-491e-bdeb-\
f2f8f64c2031"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fLSnc", "[", 
    RowBox[{"pyf_List", ",", "cmpM_List", ",", "stM_List", ",", "n_"}], "]"}],
    ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "M0", ",", "xm", ",", "lm", ",", "zv", ",", "cpM", ",", "pyM", ",", 
       "tpy", ",", "cmpPy", ",", "rlcmp", ",", "rlp", ",", "py", ",", "pcM", 
       ",", "ngQ", ",", "mM", ",", "nM", ",", "cM"}], "}"}], ",", "\n", 
     "          ", 
     RowBox[{
      RowBox[{"M0", "=", "stM"}], ";", "\n", "          ", 
      RowBox[{"py", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"cmp", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", "False"}], "]"}], ",", "\n", 
         "\t     ", 
         RowBox[{
          RowBox[{"pyM", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"pyf", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{"stM", ",", "1"}], "]"}]}], "]"}]}], ";", "\t", "\n", 
          "\t     ", 
          RowBox[{"xm", "=", 
           RowBox[{"Plus", " ", "@@", " ", "pyM"}]}], ";", "\n", "\t     ", 
          RowBox[{"lm", "=", 
           RowBox[{"Length", "[", "stM", "]"}]}], ";", "\n", "\t     ", 
          RowBox[{"zv", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", "lm"}], "]"}]}], ";", "\n", "\t     ", 
          RowBox[{"pcM", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{"cmpM", ",", "1"}], "]"}]}], ";", "\n", "\t     ", 
          RowBox[{"tpy", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"pyf", ",", "pcM"}], "]"}]}], ";", "\n", "\t     ", 
          RowBox[{"cmpPy", "=", 
           RowBox[{"tpy", " ", "+", " ", 
            RowBox[{"xm", "/", 
             RowBox[{"(", 
              RowBox[{"n", "-", "lm"}], ")"}]}]}]}], ";", "\n", "\t     ", 
          RowBox[{"rlcmp", "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Rule", ",", 
             RowBox[{"{", 
              RowBox[{"cmpM", ",", "cmpPy"}], "}"}]}], "]"}]}], ";", "\n", 
          "\t     ", 
          RowBox[{"rlp", "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Rule", ",", 
             RowBox[{"{", 
              RowBox[{"stM", ",", "zv"}], "}"}]}], "]"}]}], ";", "\n", 
          "\t     ", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{
            RowBox[{"ReplacePart", "[", 
             RowBox[{"pyf", ",", "rlcmp"}], "]"}], ",", "rlp"}], "]"}]}], ",",
          "True"}], "]"}]}], ";", "\n", "          ", 
      RowBox[{"ngQ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Negative", "[", "#", "]"}], " ", "&"}], "/@", " ", "py"}]}],
       ";", "\t\t\t\t\t      ", "\n", "          ", 
      RowBox[{"mM", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"ngQ", ",", "True"}], "]"}], "]"}]}], ";", "\n", 
      "          ", 
      RowBox[{"nM", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Append", "[", 
          RowBox[{"stM", ",", "mM"}], "]"}], "]"}], "]"}]}], ";", "\n", 
      "\t  ", 
      RowBox[{"cM", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"T", ",", "nM"}], "]"}]}], ";", "\t\t\t\t      ", "\n", 
      "\t  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"M0", ",", "nM"}], "]"}], ",", 
        RowBox[{"Return", "[", "py", "]"}], ",", 
        RowBox[{"fLSnc", "[", 
         RowBox[{"py", ",", "cM", ",", "nM", ",", "n"}], "]"}]}], "]"}]}]}], 
    "\t\t\t\t      ", "\n", "\n", "\t ", "]"}]}], ";"}]], "Code",ExpressionUUI\
D->"04133719-4496-42b2-889c-91bdcb6b69ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"In", " ", "this", " ", "section"}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "introduce", " ", "a", " ", "set", " ", "of", " ", 
      "functions", " ", "to", " ", "compute", " ", "the", " ", "pre"}], "-", 
     RowBox[{
     "nucleolus", " ", "by", " ", "a", " ", "Fenchel", " ", "Transform", " ", 
      
      RowBox[{"Method", ".", " ", "This"}], " ", "is", " ", "just", " ", "a", 
      " ", "conjucture"}]}], ",", " ", 
    RowBox[{
    "and", " ", "it", " ", "is", " ", "a", " ", "combination", " ", "of", " ",
      "the", " ", "the", " ", "approach", " ", "discussed", " ", "in", " ", 
     "Meinhardt", " ", 
     RowBox[{"(", "2013", ")"}], " ", "and", " ", "Kido", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2004", ",", "2005", ",", "2008"}], ")"}], "."}]}]}], "\n", 
   "\n", "*)"}], "   ", "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"FTPreNuc", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"tol_", ":", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "2"}], ")"}]}]}], ",", 
      RowBox[{"jj_", ":", "2"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pk", ",", "vars", ",", "xpk", ",", "mcl", ",", "tol1", ",", "pmcl", 
        ",", "clm", ",", "lcm", ",", "cex", ",", "rC", ",", "rexc", ",", 
        "sme", ",", "mtr", ",", "smtr", ",", "slc", ",", "sC", ",", "lc", ",",
         "ls", ",", "sz"}], "}"}], ",", "\n", "                      ", 
      RowBox[{
       RowBox[{"pk", "=", 
        RowBox[{"PreKernel", "[", "game", "]"}]}], ";", "\n", "\t\t      ", 
       RowBox[{"vars", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
       "\n", "                      ", 
       RowBox[{"pmcl", "=", 
        RowBox[{"FTCoalArray", "[", 
         RowBox[{"game", ",", "pk", ",", "tol"}], "]"}]}], ";", "\n", 
       "\t\t      ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<pmcl=\>\"", ",", "pmcl"}], "]"}], ";", "\n", 
       "\t\t      ", 
       RowBox[{"clm", "=", 
        RowBox[{"pmcl", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t      ", 
       RowBox[{"lcm", "=", 
        RowBox[{"pmcl", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t\t      ", 
       RowBox[{"cex", "=", 
        RowBox[{"pmcl", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "\t\t      ", 
       RowBox[{"rC", "=", 
        RowBox[{"pmcl", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ";", "\n", "\t\t      ", 
       RowBox[{"rexc", "=", 
        RowBox[{"pmcl", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ";", "\n", "\t\t      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"Last", "[", "lcm", "]"}], ",", "1"}], "]"}], ",", "\n", 
         "\t\t\t ", 
         RowBox[{
          RowBox[{"sme", "=", 
           RowBox[{"Last", "[", 
            RowBox[{
             RowBox[{"Sort", "[", "rexc", "]"}], ",", "1"}], "]"}]}], ";", 
          " ", 
          RowBox[{"(*", 
           RowBox[{"Sorting", " ", "is", " ", "ascending", " ", 
            RowBox[{"order", "."}]}], " ", "*)"}], " ", "\n", "\t\t\t ", 
          RowBox[{"mtr", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"Subtract", "[", 
                RowBox[{"#", ",", "sme"}], "]"}], "]"}], "<=", "tol"}], " ", 
             "&"}], "/@", " ", "rexc"}]}], ";", "\n", "\t                 ", 
          RowBox[{"smtr", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"mtr", ",", "True"}], "]"}]}], ";", "\t\t\t ", "\n", 
          "\t\t\t ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"slc", ",", "sC"}], "}"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Extract", "[", 
              RowBox[{"#", ",", "smtr"}], "]"}], " ", "&"}], "/@", " ", 
            RowBox[{"{", 
             RowBox[{"rexc", ",", "rC"}], "}"}]}]}], ";", "\n", "\t\t\t ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ls", ",", "lc", ",", "sz"}], "}"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], " ", "&"}], "/@", " ", 
            RowBox[{"{", 
             RowBox[{"clm", ",", "sC", ",", "lcm"}], "}"}]}]}], ";", "\n", 
          "\t\t\t ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"clm", ",", "cex"}], "}"}], "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Append", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"clm", ",", "cex"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"sC", ",", "slc"}], "}"}]}], "}"}]}], "]"}]}], ";", 
          "\n", "\t\t\t ", 
          RowBox[{"clm", "=", 
           RowBox[{"FlattenAt", "[", 
            RowBox[{"clm", ",", 
             RowBox[{"ls", "+", "1"}]}], "]"}]}], ";", "\n", "\t\t\t ", 
          RowBox[{"lcm", "=", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{"lcm", ",", 
             RowBox[{"sz", "->", 
              RowBox[{"lc", "+", "1"}]}]}], "]"}]}], ";"}], ",", "\n", 
         "\t\t\t ", "False"}], "]"}], ";", "\n", "\t\t      ", 
       RowBox[{"mcl", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"clm", ",", "lcm", ",", "cex"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"T", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], 
       ";", "\n", "\t\t      ", 
       RowBox[{"tol1", "=", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "jj"}], ")"}]}]}], ";", "\n", "                      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"clm", "==", 
           RowBox[{"{", "}"}]}], " ", "&&", " ", 
          RowBox[{"jj", "<", "11"}]}], ",", "\n", "\t\t\t ", 
         RowBox[{"FTPreNuc", "[", 
          RowBox[{"game", ",", "tol1", ",", 
           RowBox[{"jj", "+", "1"}]}], "]"}], ",", "\n", "\t\t\t ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"mcl", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", "\n", "\t\t\t\t ", 
           RowBox[{"Return", "[", "$Failed", "]"}], ",", "\n", "\t\t\t\t ", 
           RowBox[{"FormPreNuc", "[", 
            RowBox[{"game", ",", "tol1", ",", "jj", ",", "mcl", ",", "vars"}],
             "]"}]}], "\n", "\t\t\t ", "]"}]}], "\n", "\t\t      ", "]"}]}]}],
      "\n", "\t\t\t\t\t     ", "]"}]}], ";"}]}]], "Code",ExpressionUUID->\
"d6363f04-7dcb-4134-a1a5-c3d7d63c58a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FormPreNuc", "[", 
     RowBox[{
     "game_", ",", "tol_", ",", "jj_", ",", "iim_List", ",", "xvars_List"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "lsg", "}"}], ",", "\n", "                      ", 
      RowBox[{
       RowBox[{"lsg", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"FindSolX", "[", 
          RowBox[{"iim", ",", "xvars"}], "]"}], "]"}]}], ";", "\n", 
       "                      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"lsg", ",", 
            RowBox[{"{", "}"}]}], "]"}], " ", "&&", " ", 
          RowBox[{"jj", " ", "<", "11"}]}], ",", 
         RowBox[{"FTPreNuc", "[", 
          RowBox[{"game", ",", "tol", ",", 
           RowBox[{"jj", "+", "1"}]}], "]"}], ",", "\n", "\t\t       ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"lsg", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"Return", "[", "$Failed", "]"}], ",", 
           RowBox[{"xvars", " ", "/.", " ", "lsg"}]}], "]"}]}], "]"}]}]}], 
     "\n", "\t\t\t\t\t   ", "]"}]}], ";"}], "\n"}]], "Code",ExpressionUUID->\
"4d20a9f6-e322-4725-ba13-221e33d3a22d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTCoalArray", "[", 
    RowBox[{"game_", ",", "payoff_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sC", ",", "irQ", ",", "irc", ",", "slir", ",", "b0", ",", "I0", ",", 
       "excpay", ",", "lI0", ",", "zv"}], "}"}], ",", "\n", "\t        ", 
     RowBox[{
      RowBox[{"sC", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"lt", "=", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\t\t\t\t  ", "\n", 
      "                ", 
      RowBox[{"excpay", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"ExcessPayoff", "[", 
             RowBox[{"game", ",", "payoff"}], "]"}], "]"}], ",", "1"}], "]"}],
          ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "                ", 
      RowBox[{"PnSelectFTMCR", "[", 
       RowBox[{"excpay", ",", "sC", ",", "lt", ",", "tol", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}]}], "\n", "\t\t\t\t     ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"27789aa2-55f4-4abc-9996-735c915cab5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "We", " ", "set", " ", "the", " ", "default", " ", "of", " ", "blQ", " ", 
     "to", " ", "True", " ", "in", " ", "order", " ", "to", " ", "allow", " ",
      "a", " ", "return", " ", "if", " ", "mrk"}], "==", 
    RowBox[{"lt", " ", "on", " ", "the", " ", "first", " ", 
     RowBox[{"iteration", "."}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PnSelectFTMCR", "[", 
      RowBox[{"exc_List", ",", "sC_", ",", "lt_", ",", "tol_", ",", 
       RowBox[{"pIk_", ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"plIk_", ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"pslex_", ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"blQ_", ":", "True"}], ",", 
       RowBox[{"mtrk_", ":", "0"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "mtr", ",", "smtr", ",", "slc", ",", "sS", ",", "lS", ",", "sC1", ",",
          "Im", ",", "bQ", ",", "mt", ",", "mrk", ",", "exc1", ",", "slex1", 
         ",", "lIm1"}], "}"}], ",", "\n", "                ", 
       RowBox[{
        RowBox[{"mtr", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Subtract", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Max", "[", "exc", "]"}]}], "]"}], "]"}], "<=", 
            "tol"}], " ", "&"}], "/@", " ", "exc"}]}], ";", "\n", 
        "\t        ", 
        RowBox[{"smtr", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"mtr", ",", "True"}], "]"}]}], ";", "\n", "\t        ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"slc", ",", "sS"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{"#", ",", "smtr"}], "]"}], " ", "&"}], "/@", " ", 
          RowBox[{"{", 
           RowBox[{"exc", ",", "sC"}], "}"}]}]}], ";", "\n", "\t\t", 
        RowBox[{"lS", "=", 
         RowBox[{"Length", "[", "sS", "]"}]}], ";", "\t\t\t\t", "\n", "\t\t", 
        
        RowBox[{"sC1", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"sC", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"Im", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"pIk", ",", "sS"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"lIm1", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"plIk", ",", 
           RowBox[{"{", "lS", "}"}]}], "]"}]}], ";", "\n", "\t        ", 
        RowBox[{"bQ", "=", 
         RowBox[{"BalancedSelectionQ", "[", 
          RowBox[{"Im", ",", "tol", ",", 
           RowBox[{"Tight", "->", "True"}]}], "]"}]}], ";", "\n", 
        "                ", 
        RowBox[{"mt", " ", "=", " ", 
         RowBox[{"ConstVec", "[", "Im", "]"}]}], ";", "\n", 
        "                ", 
        RowBox[{"mrk", " ", "=", " ", 
         RowBox[{"MatrixRank", "[", "mt", "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"(*", "\n", "\t\t  ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", " ", "blQ"}], "==", "True"}], ",", " ", 
          RowBox[{
           RowBox[{"but", " ", "bQ"}], "==", 
           RowBox[{"False", " ", "with", " ", "mrk"}], "==", "mtrk"}], ",", 
          " ", 
          RowBox[{
          "then", " ", "the", " ", "new", " ", "sets", " ", "are", " ", 
           "still", " ", "in", " ", "the", " ", 
           RowBox[{"span", ".", "\n", "\t\t  ", "However"}]}], ",", " ", 
          RowBox[{
           RowBox[{"if", " ", "mrk"}], ">", 
           RowBox[{"mtrk", " ", "and", " ", "bQ"}], "==", "False"}], ",", " ", 
          RowBox[{
          "the", " ", "collection", " ", "of", " ", "sets", " ", "ought", " ",
            "to", " ", "be", "\n", "\t\t  ", "discarded", " ", "during", " ", 
           "the", " ", "next", " ", 
           RowBox[{"iteration", "."}]}]}], "\n", "\t\t", "*)"}], "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"blQ", ",", "True"}], "]"}], " ", "&&", " ", 
           RowBox[{"LessEqual", "[", 
            RowBox[{"mtrk", ",", "mrk"}], "]"}]}], ",", 
          RowBox[{"bQ", "=", "True"}], ",", "False"}], "]"}], ";", "\n", 
        "\t        ", 
        RowBox[{"slex1", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"pslex", ",", "slc"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"exc1", "=", 
         RowBox[{"Delete", "[", 
          RowBox[{"exc", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"mrk", ",", "lt"}], "]"}], " ", "&&", " ", 
           RowBox[{"SameQ", "[", 
            RowBox[{"bQ", ",", "True"}], "]"}]}], ",", "\n", "\t\t   ", 
          RowBox[{"{", 
           RowBox[{"Im", ",", "lIm1", ",", "slex1", ",", "sC1", ",", "exc1"}],
            "}"}], ",", "\n", "\t\t   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"bQ", ",", "True"}], "]"}], ",", "\n", "\t\t      ", 
            RowBox[{"PnSelectFTMCR", "[", 
             RowBox[{
             "exc1", ",", "sC1", ",", "lt", ",", "tol", ",", "Im", ",", 
              "lIm1", ",", "slex1", ",", "bQ", ",", "mrk"}], "]"}], ",", "\n",
             "\t\t      ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}]}], "\n", "\t\t   ", "]"}]}], "\n", 
         "\t\t", "]"}]}]}], "\n", "\t\t\t\t\t\t\t     ", "]"}]}], ";"}], "\n",
    "\n", "\n", "\n"}]}]], "Code",ExpressionUUID->"9f5e7c4f-2c71-426f-bb14-\
a58e1106256f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"In", " ", "this", " ", "section"}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "provide", " ", "a", " ", "set", " ", "of", " ", "functions", 
      " ", "that", " ", "compute", " ", "the", " ", "nucleolus", " ", "by", 
      " ", "a", " ", "non"}], "-", 
     RowBox[{"linear", " ", "optimization", " ", "method", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"cf", ".", " ", "Kido"}], " ", "2003"}], ",", "2005", ",", 
         "2008"}], ")"}], ".", " ", "Based"}], " ", "on", " ", "this", " ", 
      "idea"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "extend", " ", "this", " ", "approach", " ", "to", " ", "the",
       " ", "pre"}], "-", 
     RowBox[{"nucleolus", " ", 
      RowBox[{"too", "."}]}]}]}], "\n", "\n", "*)"}], "   "}]], "Code",Express\
ionUUID->"7547be3b-021c-442a-8f3a-4205493f9bba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NonLinPreNuc", "[", 
    RowBox[{"game_", ",", "p_", ",", "k_", ",", 
     RowBox[{"tol_", ":", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], ",", 
     RowBox[{"jj_", ":", "2"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sar", ",", "vars", ",", "xpk", ",", "mcl", ",", "tol1", ",", "pmcl", 
       ",", "clm", ",", "lcm", ",", "cex"}], "}"}], ",", "\n", 
     "                      ", 
     RowBox[{
      RowBox[{"sar", "=", 
       RowBox[{"ApproxPreNuc", "[", 
        RowBox[{"game", ",", "p", ",", "k"}], "]"}]}], ";", "\n", 
      "\t\t      ", 
      RowBox[{"vars", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
      "\n", "\t\t      ", 
      RowBox[{"xpk", "=", 
       RowBox[{"vars", " ", "/.", " ", 
        RowBox[{"sar", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", 
      "                      ", 
      RowBox[{"pmcl", "=", 
       RowBox[{"PnModCoalArray", "[", 
        RowBox[{"game", ",", "xpk", ",", "tol"}], "]"}]}], ";", "\n", 
      " \t\t      ", 
      RowBox[{"clm", "=", 
       RowBox[{"pmcl", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", " \t\t      ", 
      RowBox[{"lcm", "=", 
       RowBox[{"pmcl", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", " \t\t      ", 
      RowBox[{"cex", "=", 
       RowBox[{"pmcl", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", " \t\t      ", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"clm", ",", "T"}], "]"}], ";", "\n", " \t\t      ", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"lcm", ",", "1"}], "]"}], ";", "\n", " \t\t      ", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"cex", ",", "0"}], "]"}], ";", "\n", " \t\t      ", 
      RowBox[{"mcl", "=", 
       RowBox[{"{", 
        RowBox[{"clm", ",", "lcm", ",", "cex"}], "}"}]}], ";", "\n", 
      "                      ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"mcl", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Prepend", ",", 
           RowBox[{"{", 
            RowBox[{"pmcl", ",", 
             RowBox[{"{", 
              RowBox[{"T", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], 
        ";"}], " ", "*)"}], "\n", "\t\t      ", 
      RowBox[{"tol1", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "jj"}], ")"}]}]}], ";", "\n", "                      ", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"clm", "==", 
          RowBox[{"{", "}"}]}], " ", "&&", " ", 
         RowBox[{"jj", "<", "11"}]}], ",", "\n", "\t\t\t ", 
        RowBox[{"NonLinPreNuc", "[", 
         RowBox[{"game", ",", "p", ",", "k", ",", "tol1", ",", 
          RowBox[{"jj", "+", "1"}]}], "]"}], ",", "\n", "\t\t\t ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"mcl", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", "\n", 
          "                        \t ", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", "\n", "\t\t\t\t ", 
          RowBox[{"FormatPreNuc", "[", 
           RowBox[{
           "game", ",", "p", ",", "k", ",", "tol1", ",", "jj", ",", "mcl", 
            ",", "vars"}], "]"}]}], "\n", "\t\t\t ", "]"}]}], "\n", 
       "\t\t      ", "]"}]}]}], "\n", "\t\t\t\t\t\t\t\t\t   ", "\n", 
    "\t\t\t\t\t     ", "]"}]}], ";"}]], "Code",ExpressionUUID->"75ad3fec-674d-\
4a29-a2c1-1314b5f7e4b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormatPreNuc", "[", 
    RowBox[{
    "game_", ",", "p_", ",", "k_", ",", "tol_", ",", "jj_", ",", "iim_List", 
     ",", "xvars_List"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "lsg", "}"}], ",", "\n", "                      ", 
     RowBox[{
      RowBox[{"lsg", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"FindSolX", "[", 
         RowBox[{"iim", ",", "xvars"}], "]"}], "]"}]}], ";", "\n", 
      "                      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"lsg", ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"jj", " ", "<", "11"}]}], ",", 
        RowBox[{"NonLinPreNuc", "[", 
         RowBox[{"game", ",", "p", ",", "k", ",", "tol", ",", 
          RowBox[{"jj", "+", "1"}]}], "]"}], ",", "\n", "\t\t       ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"lsg", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", 
          RowBox[{"xvars", " ", "/.", " ", "lsg"}]}], "]"}]}], "]"}]}]}], 
    "\n", "\t\t\t\t\t   ", "]"}]}], ";"}]], "Code",ExpressionUUID->"bb86f83a-\
5ea9-47ca-b7bb-e52ef9ee8b7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NonLinNuc", "[", 
    RowBox[{"game_", ",", "p_", ",", "k_", ",", 
     RowBox[{"tol_", ":", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], ",", 
     RowBox[{"jj_", ":", "2"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sar", ",", "vars", ",", "xpk", ",", "mcl", ",", "tol1"}], 
      "}"}], ",", "\n", "                      ", 
     RowBox[{
      RowBox[{"sar", "=", 
       RowBox[{"ApproxNuc", "[", 
        RowBox[{"game", ",", "p", ",", "k"}], "]"}]}], ";", "\n", 
      "\t\t      ", 
      RowBox[{"vars", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
      "\n", "\t\t      ", 
      RowBox[{"xpk", "=", 
       RowBox[{"vars", " ", "/.", " ", 
        RowBox[{"sar", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", 
      "                      ", 
      RowBox[{"mcl", "=", 
       RowBox[{"ModCoalArray", "[", 
        RowBox[{"game", ",", "xpk", ",", "tol"}], "]"}]}], ";", "\n", 
      "\t\t      ", 
      RowBox[{"tol1", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "jj"}], ")"}]}]}], ";", "\n", "                      ", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mcl", "==", 
          RowBox[{"{", "}"}]}], " ", "&&", " ", 
         RowBox[{"jj", "<", "11"}]}], ",", 
        RowBox[{"NonLinNuc", "[", 
         RowBox[{"game", ",", "p", ",", "k", ",", "tol1", ",", 
          RowBox[{"jj", "+", "1"}]}], "]"}], ",", 
        RowBox[{"FormatSol", "[", 
         RowBox[{
         "game", ",", "p", ",", "k", ",", "tol1", ",", "jj", ",", "mcl", ",", 
          "vars"}], "]"}]}], "]"}]}]}], "\n", "\t\t\t\t\t     ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"fc12077c-b430-4ad9-a814-6c6abc27aa2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormatSol", "[", 
    RowBox[{
    "game_", ",", "p_", ",", "k_", ",", "tol_", ",", "jj_", ",", "iim_List", 
     ",", "xvars_List"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "lsg", "}"}], ",", "\n", "                      ", 
     RowBox[{
      RowBox[{"lsg", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"FindSolX", "[", 
         RowBox[{"iim", ",", "xvars"}], "]"}], "]"}]}], ";", "\n", 
      "                      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"lsg", ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"jj", " ", "<", "11"}]}], ",", 
        RowBox[{"NonLinNuc", "[", 
         RowBox[{"game", ",", "p", ",", "k", ",", "tol", ",", 
          RowBox[{"jj", "+", "1"}]}], "]"}], ",", "\n", "\t\t       ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"lsg", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", 
          RowBox[{"xvars", " ", "/.", " ", "lsg"}]}], "]"}]}], "]"}]}]}], 
    "\n", "\t\t\t\t\t   ", "]"}]}], ";"}]], "Code",ExpressionUUID->"e4fff97f-\
d99c-4143-9903-23ee051e4d38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormatPreNuc", "[", 
    RowBox[{
    "game_", ",", "p_", ",", "k_", ",", "tol_", ",", "jj_", ",", "iim_List", 
     ",", "xvars_List"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "lsg", "}"}], ",", "\n", "                      ", 
     RowBox[{
      RowBox[{"lsg", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"FindSolX", "[", 
         RowBox[{"iim", ",", "xvars"}], "]"}], "]"}]}], ";", "\n", 
      "                      ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"lsg", ",", 
           RowBox[{"{", "}"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"jj", " ", "<", "11"}]}], ",", 
        RowBox[{"NonLinPreNuc", "[", 
         RowBox[{"game", ",", "p", ",", "k", ",", "tol", ",", 
          RowBox[{"jj", "+", "1"}]}], "]"}], ",", "\n", "\t\t       ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"lsg", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"Return", "[", "$Failed", "]"}], ",", 
          RowBox[{"xvars", " ", "/.", " ", "lsg"}]}], "]"}]}], "]"}]}]}], 
    "\n", "\t\t\t\t\t   ", "]"}]}], ";"}]], "Code",ExpressionUUID->"65774ee0-\
eee1-4068-a9d5-9a633eff6dc3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindSolX", "[", 
     RowBox[{"ssz_List", ",", "vars_List"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sys", ",", "eqsys"}], "}"}], ",", "\n", "\t\t\t   ", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "#", "]"}], "-", 
            RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], "/@", " ", 
         RowBox[{"ssz", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "  ", "\n", 
       "                           ", 
       RowBox[{"eqsys", "=", 
        RowBox[{"SolveSys", "[", 
         RowBox[{"sys", ",", 
          RowBox[{"ssz", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"ssz", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", "\n", 
       "                           ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", "eqsys", "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ",", 
         RowBox[{"Solve", "[", 
          RowBox[{"eqsys", ",", "vars"}], "]"}]}], "]"}]}]}], "\n", 
     "\t\t\t    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolveSys", "[", 
    RowBox[{"bsys_List", ",", "iim_List", ",", "exc_List", ",", 
     RowBox[{"glsys_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"idx_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lg", ",", "gls", ",", "eq", ",", "zv", ",", "vexc", ",", "rsys", ",", 
       "nwgl", ",", "riim", ",", "rexc"}], "}"}], ",", "\n", 
     "                     ", 
     RowBox[{
      RowBox[{"gls", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"bsys", ",", 
         RowBox[{"First", "[", "iim", "]"}]}], "]"}]}], ";", "\n", 
      "\t\t     ", 
      RowBox[{"lg", "=", 
       RowBox[{"Length", "[", "gls", "]"}]}], ";", "\n", "\t\t     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"exc", "==", 
          RowBox[{"{", "}"}]}], " ", "&&", " ", 
         RowBox[{"lg", "==", "1"}]}], ",", "True", ",", 
        RowBox[{"vexc", "=", 
         RowBox[{"Take", "[", 
          RowBox[{"exc", ",", 
           RowBox[{"First", "[", "iim", "]"}]}], "]"}]}]}], "]"}], ";", "\n", 
      "\t\t     ", 
      RowBox[{"eq", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"idx", "==", "1"}], ",", "\n", "\t\t\t   ", 
         RowBox[{
          RowBox[{"zv", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", "lg"}], "]"}]}], ";", "\n", "\t\t\t   ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"Equal", ",", 
            RowBox[{"{", 
             RowBox[{"gls", ",", "zv"}], "}"}]}], "]"}]}], ",", "\n", 
         "\t\t\t   ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"lg", ">", "1"}], ",", 
           RowBox[{"Apply", "[", 
            RowBox[{"Equal", ",", "gls"}], "]"}], ",", "\n", "\t\t\t     ", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Warning:: An isolated excess found!\>\"", 
             "]"}], ";", "\n", "\t\t             ", 
            RowBox[{
            "Print", "[", "\"\<Solution might not be correct!!!\>\"", "]"}], 
            ";", "\n", "\t\t\t     ", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Equal", ",", 
              RowBox[{"{", 
               RowBox[{"gls", ",", "vexc"}], "}"}]}], "]"}]}]}], "]"}]}], 
        "\n", "\t\t\t", "]"}]}], ";", "\n", "\t\t     ", 
      RowBox[{"nwgl", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"glsys", ",", "eq"}], "]"}]}], ";", "\t\t\t\t      ", "\n", 
      "                     ", 
      RowBox[{"rsys", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"bsys", ",", 
         RowBox[{"First", "[", "iim", "]"}]}], "]"}]}], ";", "\n", 
      "\t\t     ", 
      RowBox[{"rexc", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"exc", ",", 
         RowBox[{"First", "[", "iim", "]"}]}], "]"}]}], ";", "\n", 
      "\t\t     ", 
      RowBox[{"riim", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"iim", ",", "1"}], "]"}]}], ";", "\t\t     ", "\n", 
      "                     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"riim", "==", 
         RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"Flatten", "[", "nwgl", "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"SolveSys", "[", 
         RowBox[{"rsys", ",", "riim", ",", "rexc", ",", "nwgl", ",", 
          RowBox[{"idx", "+", "1"}]}], "]"}]}], "\n", "\t\t      ", "]"}]}]}],
     "\n", "\t\t     ", "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->\
"597de0b0-37cb-4782-97fe-152769c8b1fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApproxNuc", "[", 
     RowBox[{"game_", ",", "p_", ",", "k_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lt", ",", "obj", ",", "const", ",", "rl", ",", "vars", ",", "sC", ",",
         "pexc", ",", "vi", ",", "eq"}], "}"}], ",", "\n", "\t\t        ", 
      RowBox[{
       RowBox[{"vars", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
       "\n", "\t\t\t", 
       RowBox[{"lt", "=", 
        RowBox[{"Length", "[", "T", "]"}]}], ";", "       ", "\n", 
       "                        ", 
       RowBox[{"sC", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}]}], ";", "\n", 
       "\t\t\t", 
       RowBox[{"pexc", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], "-", 
             RowBox[{"x", "[", "#", "]"}], "-", "k1"}], ")"}], "^", "p1"}], 
          " ", "&"}], "/@", " ", "sC"}]}], ";", "\n", "\t\t\t", 
       RowBox[{"rl", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p1", ",", "k1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "k"}], "}"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "                        ", 
       RowBox[{"obj", " ", "=", " ", 
        RowBox[{
         RowBox[{"Total", "[", "pexc", "]"}], " ", "/.", " ", "rl"}]}], ";", 
       "\n", "\t\t\t", 
       RowBox[{"vi", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         RowBox[{"Take", "[", 
          RowBox[{"sC", ",", "lt"}], "]"}]}]}], ";", "\n", 
       "                        ", 
       RowBox[{"const", "=", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{"GreaterEqual", ",", 
            RowBox[{"{", 
             RowBox[{"vars", ",", "vi"}], "}"}]}], "]"}]}], "]"}]}], ";", 
       "\n", "\t\t\t", 
       RowBox[{"eq", "=", 
        RowBox[{
         RowBox[{"Total", "[", "vars", "]"}], "==", 
         RowBox[{"v", "[", "T", "]"}]}]}], ";", "\n", 
       "                        ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"const", ",", "eq"}], "]"}], ";", "\n", 
       "                        ", 
       RowBox[{"NMinimize", "[", 
        RowBox[{"obj", ",", 
         RowBox[{"{", "const", "}"}], ",", "vars"}], "]"}]}]}], "\n", 
     "\t\t\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModCoalArray", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ModCoalArray", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModCoalArray", "[", 
     RowBox[{"game_", ",", "payoff_", ",", 
      RowBox[{"tol_", ":", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "7"}], ")"}]}]}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sC", ",", "lt", ",", "prl", ",", "irQ", ",", "irc", ",", "slir", ",", 
        "b0", ",", "I0", ",", "excpay", ",", "lI0", ",", "zv"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"sC", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"lt", "=", 
        RowBox[{"Length", "[", "T", "]"}]}], ";", "\t\t\t\t  ", "\n", "\t\t", 
       
       RowBox[{"prl", "=", 
        RowBox[{"Payoff", "[", "payoff", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"irQ", "=", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"{", "#", "}"}], "]"}], "-", 
               RowBox[{"x", "[", "#", "]"}]}], "]"}], "<=", "tol"}], " ", 
            "&"}], ",", "T"}], "]"}], " ", "/.", "prl"}]}], ";", "\n", "\t\t", 
       RowBox[{"irc", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "#", "}"}], " ", "&"}], "/@", " ", "T"}]}], ";", "\n", 
       "\t\t", 
       RowBox[{"slir", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"irQ", ",", "True"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"b0", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"irc", ",", "slir"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"I0", "=", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{"{", "T", "}"}], ",", "b0"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"lI0", "=", 
        RowBox[{"Length", "[", "I0", "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"zv", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "lI0"}], "]"}]}], ";", "\n", "                ", 
       RowBox[{"excpay", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"ExcessPayoff", "[", 
              RowBox[{"game", ",", "payoff"}], "]"}], "]"}], ",", "1"}], 
           "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "                ", 
       RowBox[{"SelectMCR", "[", 
        RowBox[{"excpay", ",", "sC", ",", "lt", ",", "tol", ",", "I0", ",", 
         RowBox[{"{", "lI0", "}"}], ",", "zv"}], "]"}]}]}], "\n", 
     "\t\t\t\t     ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PnModCoalArray", "[", 
    RowBox[{"game_", ",", "payoff_", ",", "tol_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sC", ",", "lt", ",", "excpay"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"sC", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"lt", "=", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\t\t\t\t  ", "\n", 
      "                ", 
      RowBox[{"excpay", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"ExcessPayoff", "[", 
             RowBox[{"game", ",", "payoff"}], "]"}], "]"}], ",", "1"}], "]"}],
          ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "                ", 
      RowBox[{"PnSelectMCR", "[", 
       RowBox[{"excpay", ",", "sC", ",", "lt", ",", "tol", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}]}], "\n", "\t\t\t\t     ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"d3207580-6b8c-4294-a124-568a8ac1250b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelectMCR", "[", 
     RowBox[{"exc_List", ",", "sC_", ",", "lt_", ",", "tol_", ",", 
      RowBox[{"Ik_", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"lIk_", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"slex_", ":", 
       RowBox[{"{", "0", "}"}]}], ",", 
      RowBox[{"blQ_", ":", "False"}], ",", 
      RowBox[{"mtrk_", ":", "0"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mtr", ",", "smtr", ",", "slc", ",", "sS", ",", "lS", ",", "sC1", ",", 
        "Im", ",", "mrk", ",", "bQ", ",", "mt", ",", "mkr", ",", "exc1", ",", 
        "slex1", ",", "lIm1"}], "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"mtr", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"Subtract", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Max", "[", "exc", "]"}]}], "]"}], "]"}], "<=", "tol"}],
           " ", "&"}], "/@", " ", "exc"}]}], ";", "\n", "     ", 
       RowBox[{"smtr", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"mtr", ",", "True"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"slc", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"exc", ",", "smtr"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"sS", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"sC", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"lS", "=", 
        RowBox[{"Length", "[", "sS", "]"}]}], ";", "\t\t\t\t", "\n", "\t\t", 
       RowBox[{"sC1", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"sC", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"Im", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"Ik", ",", "sS"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"lIm1", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"lIk", ",", 
          RowBox[{"{", "lS", "}"}]}], "]"}]}], ";", "\n", "\t        ", 
       RowBox[{"bQ", "=", 
        RowBox[{"IIMBalancedSelectionQ", "[", 
         RowBox[{"Im", ",", "tol", ",", 
          RowBox[{"Tight", "->", "True"}]}], "]"}]}], ";", "\n", 
       "                ", 
       RowBox[{"mt", " ", "=", " ", 
        RowBox[{"ConstVec", "[", "Im", "]"}]}], ";", "\n", "                ", 
       RowBox[{"mrk", " ", "=", " ", 
        RowBox[{"MatrixRank", "[", "mt", "]"}]}], ";", "\n", 
       "                ", 
       RowBox[{"(*", "\n", "\t\t  ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", " ", "blQ"}], "==", "True"}], ",", " ", 
         RowBox[{
          RowBox[{"but", " ", "bQ"}], "==", 
          RowBox[{"False", " ", "with", " ", "mrk"}], "==", "mtrk"}], ",", 
         " ", 
         RowBox[{
         "then", " ", "the", " ", "new", " ", "sets", " ", "are", " ", 
          "still", " ", "in", " ", "the", " ", 
          RowBox[{"span", ".", "\n", "\t\t  ", "However"}]}], ",", " ", 
         RowBox[{
          RowBox[{"if", " ", "mrk"}], ">", 
          RowBox[{"mtrk", " ", "and", " ", "bQ"}], "==", "False"}], ",", " ", 
         
         RowBox[{
         "the", " ", "collection", " ", "of", " ", "sets", " ", "ought", " ", 
          "to", " ", "be", "\n", "\t\t  ", "discarded", " ", "during", " ", 
          "the", " ", "next", " ", 
          RowBox[{"iteration", "."}]}]}], "\n", "\t\t", "*)"}], "\n", "\t\t", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"blQ", ",", "True"}], "]"}], " ", "&&", " ", 
          RowBox[{"LessEqual", "[", 
           RowBox[{"mtrk", ",", "mrk"}], "]"}]}], ",", 
         RowBox[{"bQ", "=", "True"}], ",", "False"}], "]"}], ";", "\n", 
       "\t        ", 
       RowBox[{"slex1", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Append", "[", 
          RowBox[{"slex", ",", "slc"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"exc1", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"exc", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"mrk", ",", "lt"}], "]"}], " ", "&&", " ", 
          RowBox[{"SameQ", "[", 
           RowBox[{"bQ", ",", "True"}], "]"}]}], ",", "\n", "\t\t   ", 
         RowBox[{"{", 
          RowBox[{"Im", ",", "lIm1", ",", "slex1"}], "}"}], ",", "\n", 
         "\t\t   ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"bQ", "==", "True"}], ",", "\n", "\t\t\t  ", 
           RowBox[{"SelectMCR", "[", 
            RowBox[{
            "exc1", ",", "sC1", ",", "lt", ",", "tol", ",", "Im", ",", "lIm1",
              ",", "slex1", ",", "bQ", ",", "mrk"}], "]"}], ",", "\n", 
           "\t\t\t  ", 
           RowBox[{"{", "}"}]}], "\n", "\t\t   ", "]"}]}], "\n", "\t\t      ",
         "]"}]}]}], "\n", "\t\t        ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PnSelectMCR", "[", 
    RowBox[{"exc_List", ",", "sC_", ",", "lt_", ",", "tol_", ",", 
     RowBox[{"pIk_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"plIk_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pslex_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"blQ_", ":", "False"}], ",", 
     RowBox[{"mtrk_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mtr", ",", "smtr", ",", "slc", ",", "sS", ",", "lS", ",", "sC1", ",", 
       "mrk", ",", "Im", ",", "bQ", ",", "mt", ",", "mkr", ",", "exc1", ",", 
       "slex1", ",", "lIm1"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"mtr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"Subtract", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Max", "[", "exc", "]"}]}], "]"}], "]"}], "<=", "tol"}], 
         " ", "&"}], "/@", " ", "exc"}]}], ";", "\n", "    ", 
      RowBox[{"smtr", "=", 
       RowBox[{"Position", "[", 
        RowBox[{"mtr", ",", "True"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"slc", "=", 
       RowBox[{"Extract", "[", 
        RowBox[{"exc", ",", "smtr"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"sS", "=", 
       RowBox[{"Extract", "[", 
        RowBox[{"sC", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"lS", "=", 
       RowBox[{"Length", "[", "sS", "]"}]}], ";", "\t\t\t\t", "\n", "\t\t", 
      RowBox[{"sC1", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"sC", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"Im", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"pIk", ",", "sS"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"lIm1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"plIk", ",", 
         RowBox[{"{", "lS", "}"}]}], "]"}]}], ";", "\n", "\t        ", 
      RowBox[{"bQ", "=", 
       RowBox[{"BalancedSelectionQ", "[", 
        RowBox[{"Im", ",", "tol", ",", 
         RowBox[{"Tight", "->", "True"}]}], "]"}]}], ";", "\n", 
      "                ", 
      RowBox[{"mt", " ", "=", " ", 
       RowBox[{"ConstVec", "[", "Im", "]"}]}], ";", "\n", "                ", 
      
      RowBox[{"mrk", " ", "=", " ", 
       RowBox[{"MatrixRank", "[", "mt", "]"}]}], ";", "\n", "\t        ", 
      RowBox[{"(*", "\n", "\t\t  ", 
       RowBox[{
        RowBox[{
         RowBox[{"If", " ", "blQ"}], "==", "True"}], ",", " ", 
        RowBox[{
         RowBox[{"but", " ", "bQ"}], "==", 
         RowBox[{"False", " ", "with", " ", "mrk"}], "==", "mtrk"}], ",", " ", 
        RowBox[{
        "then", " ", "the", " ", "new", " ", "sets", " ", "are", " ", "still",
          " ", "in", " ", "the", " ", 
         RowBox[{"span", ".", "\n", "\t\t  ", "However"}]}], ",", " ", 
        RowBox[{
         RowBox[{"if", " ", "mrk"}], ">", 
         RowBox[{"mtrk", " ", "and", " ", "bQ"}], "==", "False"}], ",", " ", 
        RowBox[{
        "the", " ", "collection", " ", "of", " ", "sets", " ", "ought", " ", 
         "to", " ", "be", "\n", "\t\t  ", "discarded", " ", "during", " ", 
         "the", " ", "next", " ", 
         RowBox[{"iteration", "."}]}]}], "\n", "\t\t", "*)"}], "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"blQ", ",", "True"}], "]"}], " ", "&&", " ", 
         RowBox[{"LessEqual", "[", 
          RowBox[{"mtrk", ",", "mrk"}], "]"}]}], ",", 
        RowBox[{"bQ", "=", "True"}], ",", "False"}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"slex1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Append", "[", 
         RowBox[{"pslex", ",", "slc"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"exc1", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"exc", ",", "smtr"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"mrk", ",", "lt"}], "]"}], " ", "&&", " ", 
         RowBox[{"SameQ", "[", 
          RowBox[{"bQ", ",", "True"}], "]"}]}], ",", "\n", "\t\t   ", 
        RowBox[{"{", 
         RowBox[{"Im", ",", "lIm1", ",", "slex1"}], "}"}], ",", "\n", 
        "\t\t   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"bQ", ",", "True"}], "]"}], ",", "\n", "\t\t      ", 
          RowBox[{"PnSelectMCR", "[", 
           RowBox[{
           "exc1", ",", "sC1", ",", "lt", ",", "tol", ",", "Im", ",", "lIm1", 
            ",", "slex1", ",", "bQ", ",", "mrk"}], "]"}], ",", "\n", 
          "\t\t      ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], "\n", "\t\t   ", "]"}]}], "\n", 
       "\t\t", "]"}]}]}], "\n", "\t\t\t\t\t\t\t     ", "]"}]}], 
  ";"}], "\n"}], "Code",ExpressionUUID->"854d70f7-452d-43e3-8ccf-\
0f25fb309c12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IIMBalancedSelectionQ", "[", 
     RowBox[{"selcoal_List", ",", " ", "tol_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "BalancedSelectionQ", "]"}]}]}], "]"}], 
    ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "tig", ",", "ufs", ",", "sysvec", ",", "lt", ",", "tol1", ",", 
        "wghvec1", ",", "tolv", ",", "mrk", ",", "onesvec", ",", "wghvec", 
        ",", "chres", ",", "poswghQ", ",", "posQ", ",", "addoneQ", ",", 
        "oneQ", ",", "balcQ"}], "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"tig", " ", "=", "  ", 
        RowBox[{"OptionValue", "[", "Tight", "]"}]}], ";", "\n", "     ", 
       RowBox[{"ufs", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"Flatten", "[", "selcoal", "]"}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ufs", ",", "T"}], "]"}], ",", "True", ",", 
         RowBox[{"Return", "[", "\"\<False\>\"", "]"}]}], "]"}], ";", "\n", 
       "     ", 
       RowBox[{"sysvec", " ", "=", " ", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"ConstVec", "[", "selcoal", "]"}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"mrk", " ", "=", " ", 
        RowBox[{"MatrixRank", "[", "sysvec", "]"}]}], ";", "\n", "     ", 
       RowBox[{"lt", " ", "=", " ", 
        RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"tig", ",", "True"}], "]"}], ",", "True", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mrk", "<", "lt"}], ",", " ", 
           RowBox[{"Return", "[", "\"\<False\>\"", "]"}], ",", "True"}], 
          "]"}]}], "]"}], ";", " ", "\n", "     ", 
       RowBox[{"onesvec", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"wghvec", " ", "=", " ", 
        RowBox[{
         RowBox[{"PseudoInverse", "[", 
          RowBox[{"Transpose", "[", "sysvec", "]"}], "]"}], ".", 
         "onesvec"}]}], ";", "\n", "     ", 
       RowBox[{"tol1", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"{", 
          RowBox[{"tol", ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "5"}], ")"}]}]}], "}"}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"wghvec1", "=", 
        RowBox[{"wghvec", "+", "tol1"}]}], ";", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Trying", " ", "to", " ", "find", " ", "a", " ", "balanced", " ", 
         "subcollection"}], " ", "*)"}], "\n", "     ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"wghvec1", ",", "0"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wghvec", ",", "sysvec"}], "}"}], "=", 
          RowBox[{"ReduceMatrix", "[", 
           RowBox[{"wghvec1", ",", "sysvec", ",", "T", ",", "onesvec"}], 
           "]"}]}], ",", "\n", "          ", 
         RowBox[{"Apply", "[", 
          RowBox[{"Or", ",", 
           RowBox[{"Negative", "[", "wghvec1", "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wghvec", ",", "sysvec"}], "}"}], "=", 
          RowBox[{"ReduceRkMatrix", "[", 
           RowBox[{"wghvec1", ",", "sysvec", ",", "T", ",", "onesvec"}], 
           "]"}]}], ",", " ", "\n", "          ", "True", ",", "wghvec"}], 
        "]"}], ";", "\n", "     ", 
       RowBox[{"chres", " ", "=", "  ", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "sysvec", "]"}], ",", " ", "wghvec"}], 
         "]"}]}], ";", "\n", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<chres=\>\"", ",", "chres"}], "]"}], ";"}], "*)"}], 
       "\n", "     ", 
       RowBox[{"poswghQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
           "wghvec1"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<wghvec=\>\"", ",", "wghvec"}], "]"}], ";", "\n", 
         "     ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<poswghQ=\>\"", ",", "poswghQ"}], "]"}], ";"}], "*)"}], 
       "\n", "     ", 
       RowBox[{"posQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"tolv", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"tol1", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"addoneQ", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"LessEqual", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Subtract", "[", 
              RowBox[{"chres", ",", " ", "onesvec"}], "]"}], "]"}], ",", 
            "tolv"}], "}"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<addoneQ=\>\"", ",", "addoneQ"}], "]"}], ";"}], " ", 
        "*)"}], "\n", "     ", 
       RowBox[{"oneQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "addoneQ"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"balcQ", " ", "=", " ", 
        RowBox[{"And", "[", 
         RowBox[{"posQ", ",", " ", "oneQ"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<balcQ=\>\"", ",", "balcQ"}], "]"}], ";"}], "*)"}], 
       "\n", "     ", 
       RowBox[{"Return", "[", "balcQ", "]"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}]], "Code",ExpressionUUID->"75127c2d-3e66-40ec-aa3e-20c864b3b111"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ApproxPreNuc", "[", 
    RowBox[{"game_", ",", "p_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "obj", ",", "const", ",", "lt", ",", "ra", ",", "rl", ",", "vars", ",", 
       "sC", ",", "pexc", ",", "vi", ",", "eq"}], "}"}], ",", "\n", "      ", 
     
     RowBox[{
      RowBox[{"vars", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
      "\n", "\t\t\t", 
      RowBox[{"lt", "=", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "       ", "\n", "      ", 
      RowBox[{"sC", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}]}], ";", "\n", 
      "\t\t\t", 
      RowBox[{"pexc", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "#", "]"}], "-", 
            RowBox[{"x", "[", "#", "]"}], "-", "k1"}], ")"}], "^", "p1"}], 
         " ", "&"}], "/@", " ", "sC"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"rl", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p1", ",", "k1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "k"}], "}"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"obj", " ", "=", " ", 
       RowBox[{
        RowBox[{"Total", "[", "pexc", "]"}], " ", "/.", " ", "rl"}]}], ";", 
      "\n", "\t\t\t", 
      RowBox[{"ra", "=", 
       RowBox[{"ReasonableOutcome", "[", "game", "]"}]}], ";", "\n", "      ", 
      RowBox[{"const", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{"LessEqual", ",", 
           RowBox[{"{", 
            RowBox[{"vars", ",", "ra"}], "}"}]}], "]"}]}], "]"}]}], ";", "\n",
       "\t\t\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<const=\>\"", ",", "const"}], "]"}], ";"}], " ", "*)"}], 
      "       ", "\n", "\t\t\t", 
      RowBox[{"eq", "=", 
       RowBox[{
        RowBox[{"Total", "[", "vars", "]"}], "==", 
        RowBox[{"v", "[", "T", "]"}]}]}], ";", "\n", 
      "                        ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"const", ",", "eq"}], "]"}], ";", "\n", 
      "                        ", 
      RowBox[{"NMinimize", "[", 
       RowBox[{"obj", ",", 
        RowBox[{"{", "const", "}"}], ",", "vars"}], "]"}]}]}], "\n", "\t\t\t",
     "]"}]}], ";"}]], "Code",ExpressionUUID->"346395a0-8bb6-4ea4-9866-\
7e27e5523c1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "section", " ", "is", " ", "designated", " ", "to", " ", 
     "the", " ", "Modiclus", " ", "Modified", " ", "and", " ", "Proper", " ", 
     "Modified", " ", "Pre"}], "-", "Kernel"}], " ", "*)"}], " "}]], "Code",Ex\
pressionUUID->"b6b28536-1170-4817-9d72-da27c186a0c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Thm", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sudhoelter", " ", "1997"}], ",", " ", 
       RowBox[{"Thm", " ", "1.4"}]}], ")"}]}], ":", " ", 
    RowBox[{
     RowBox[{"The", " ", "projection", " ", "of", " ", "the", " ", "pre"}], 
     "-", 
     RowBox[{
     "nucleolus", " ", "of", " ", "the", " ", "the", " ", "dual", " ", 
      "cover", " ", "game", "\n", "   ", "onto", " ", "the", " ", "player", 
      " ", "set", " ", "T", " ", "gives", " ", "the", " ", "modiclus", " ", 
      "of", " ", "the", " ", "original", " ", 
      RowBox[{"game", "."}]}]}]}], "  ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Modiclus", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"Modiclus", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Modiclus", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ovls", ",", " ", "dcvals", ",", " ", "lt", ",", " ", "t0", ",", " ", 
         "t1", ",", " ", "DCGame", ",", " ", "mdnc"}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"ovls", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "Coalitions"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Storing", " ", "original", " ", "game", " ", 
          RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"t0", " ", "=", " ", "T"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Storing", " ", "original", " ", "game", " ", 
          RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"dcvals", " ", "=", " ", 
         RowBox[{"DualCover", "[", "game", "]"}]}], ";", "\n", "  ", 
        RowBox[{"lt", " ", "=", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
        RowBox[{"t1", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"2", "*", "lt"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"DCGame", " ", "=", " ", 
         RowBox[{"DefineGame", "[", 
          RowBox[{"t1", ",", " ", "dcvals"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"mdnc", " ", "=", " ", 
         RowBox[{"PreNucleolus", "[", "DCGame", "]"}]}], ";", "\n", "  ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Redefine", " ", "the", " ", "original", " ", 
          RowBox[{"game", "."}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"Take", "[", 
         RowBox[{"mdnc", ",", " ", "lt"}], "]"}]}]}], "\n", "  ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsModiclusQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"IsModiclusQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IsModiclusQ", "[", 
      RowBox[{"game_", ",", "payoff_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ovls", ",", " ", "dcvals", ",", " ", "lt", ",", " ", "t0", ",", " ", 
         "t1", ",", " ", "dpay", ",", " ", "DCGame", ",", " ", "bcQ"}], "}"}],
        ",", "\n", "  ", 
       RowBox[{
        RowBox[{"ovls", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "Coalitions"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Storing", " ", "original", " ", "game", " ", 
          RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"t0", " ", "=", " ", "T"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Storing", " ", "original", " ", "game", " ", 
          RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"dcvals", " ", "=", " ", 
         RowBox[{"DualCover", "[", "game", "]"}]}], ";", "\n", "  ", 
        RowBox[{"lt", " ", "=", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
        RowBox[{"t1", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"2", "*", "lt"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"DCGame", " ", "=", " ", 
         RowBox[{"DefineGame", "[", 
          RowBox[{"t1", ",", " ", "dcvals"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"dpay", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"payoff", ",", "payoff"}], "}"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"bcQ", " ", "=", " ", 
         RowBox[{"BalancedSelectionQ", "[", 
          RowBox[{"DCGame", ",", "dpay", ",", 
           RowBox[{"Tight", "->", "True"}]}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Redefine", " ", "the", " ", "original", " ", 
          RowBox[{"game", "."}]}], " ", "*)"}], "\n", "  ", 
        RowBox[{"Return", "[", "bcQ", "]"}]}]}], "\n", "  ", "]"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"4282a7b3-10a0-487d-8aed-7e1635c21095"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ModPreKernel", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ModPreKernel", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModPreKernel", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ModPreKernel", "]"}]}]}], "]"}], " ", ":=",
     " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"pay", " ", "=", " ", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"v", "[", "T", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
         RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
       RowBox[{"ModPreKernel", "[", 
        RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModPreKernel", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ModPreKernel", "]"}]}]}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dimpay", ",", "rclim"}], "}"}], ",", " ", "\n", "      ", 
      RowBox[{
       RowBox[{"dimpay", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
       "      ", 
       RowBox[{"rclim", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "T", "]"}], " ", ">", " ", "11"}], ",", 
          "1024", ",", "512"}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
         "\n", "                       ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
            ")"}], ",", " ", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], ",",
              " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"FuncModPreKernel", "[", 
                 RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
                " ", "payoff"}], " ", "//", "Union"}]}], "]"}], ",", "\n", 
           "                                     ", "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
         "                    ", 
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
         "\n", "                        ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}],
             " ", ")"}], ",", " ", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], ",", 
             RowBox[{"FuncModPreKernel", "[", 
              RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], 
              "]"}]}], "]"}], ",", " ", "\n", 
           "                                     ", "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
         "                    ", "True", ",", " ", 
         RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
        "                                   ", "]"}]}]}], "\n", "      ", 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Main", " ", "Functions"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FuncModPreKernel", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ModPreKernel", "]"}]}]}], "]"}], " ", ":=",
     " ", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sil", ",", " ", "smc", ",", " ", "optst", ",", " ", "pinv", ",", " ", 
        "ovls", ",", " ", "t0", ",", " ", "dcvals", ",", " ", "dcgame", ",", 
        " ", "doi", ",", " ", "optstep", ",", " ", "itpay", ",", "tol", ",", 
        "brc"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", 
       "     ", "\n", "    ", 
       RowBox[{"optst", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "CalcStepSize", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"pinv", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "PseudoInv", "]"}]}], ";", "\n", "    ", 
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], " ", "*)"}], "\n", "    ", 
       RowBox[{"t0", " ", "=", " ", "T"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], " ", "*)"}], "\n", "    ", 
       RowBox[{"dcvals", " ", "=", " ", 
        RowBox[{"ECCoverGame", "[", 
         RowBox[{"game", ",", "payoff"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"dcgame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"t0", ",", " ", "dcvals"}], "]"}]}], ";", "       ", "\n", 
       "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"optstep", ",", " ", "doi"}], "}"}], " ", "=", " ", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"DirectionOfImprovement", "[", 
          RowBox[{"dcgame", ",", " ", "payoff", ",", " ", 
           RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
           RowBox[{"CalcStepSize", " ", "->", " ", "optst"}], ",", " ", 
           RowBox[{"PseudoInv", "->", "pinv"}], ",", 
           RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
           RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<doi=\>\"", ",", " ", "doi"}], "]"}], ",", " ", 
         "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<optstep=\>\"", ",", " ", "optstep"}], "]"}], ",", " ", 
         "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"itpay", " ", "=", "  ", 
        RowBox[{"payoff", " ", "+", " ", 
         RowBox[{"optstep", "*", "doi"}]}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<itpay=\>\"", ",", " ", "itpay"}], "]"}], ",", " ", 
         "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "itpay", "]"}], "!=", "2"}], ",", 
         RowBox[{"Return", "[", "payoff", "]"}], ",", "True"}], "]"}], ";", 
       "\n", "    ", 
       RowBox[{"tol", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1.5", "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "6"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"brc", "=", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"LessEqual", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "doi", "]"}], ",", "tol"}], "}"}]}], 
           "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", "   ", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"brc", ",", "True"}], "]"}], ",", " ", 
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"N", "[", "itpay", "]"}], ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "6"}], ")"}]}]}], "]"}], ",", " ", 
         RowBox[{"FuncModPreKernel", "[", 
          RowBox[{"game", ",", " ", "itpay", ",", " ", 
           RowBox[{"CalcStepSize", " ", "->", " ", "optst"}], ",", " ", 
           RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
           RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}]}], 
        "]"}]}]}], " ", "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ProperModPreKernel", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ProperModPreKernel", "::", "argerr"}], "]"}], ";", "$Failed"}],
     ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ProperModPreKernel", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "ProperModPreKernel", "]"}]}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ovls", ",", " ", "dcvals", ",", " ", "lt", ",", " ", "t0", ",", " ", 
       "t1", ",", " ", "DCGame", ",", " ", "mdnc"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"ovls", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "Coalitions"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Storing", " ", "original", " ", "game", " ", 
        RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
      RowBox[{"t0", " ", "=", " ", "T"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Storing", " ", "original", " ", "game", " ", 
        RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
      RowBox[{"dcvals", " ", "=", " ", 
       RowBox[{"DualCover", "[", "game", "]"}]}], ";", "\n", "  ", 
      RowBox[{"lt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
      RowBox[{"t1", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"2", "*", "lt"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"DCGame", " ", "=", " ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"t1", ",", " ", "dcvals"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"mdnc", " ", "=", " ", 
       RowBox[{"PreKernelSolution", "[", 
        RowBox[{"DCGame", ",", "opts"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"DefineGame", "[", 
       RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"Redefine", " ", "the", " ", "original", " ", 
        RowBox[{"game", "."}]}], " ", "*)"}], "\n", "  ", 
      RowBox[{"Take", "[", 
       RowBox[{"mdnc", ",", " ", "lt"}], "]"}]}]}], "\n", "  ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"e0c46000-ee87-4bf2-990f-48fe52c9760b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProperModPreKernel", "[", 
     RowBox[{"game_", ",", "payoff_List", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ProperModPreKernel", "]"}]}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ovls", ",", " ", "dcvals", ",", " ", "lt", ",", " ", "t0", ",", " ", 
        "t1", ",", " ", "DCGame", ",", " ", "mdnc", ",", "dcpay"}], "}"}], 
      ",", "\n", "  ", 
      RowBox[{
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"t0", " ", "=", " ", "T"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"dcvals", " ", "=", " ", 
        RowBox[{"DualCover", "[", "game", "]"}]}], ";", "\n", "  ", 
       RowBox[{"lt", " ", "=", " ", 
        RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
       RowBox[{"t1", " ", "=", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"2", "*", "lt"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"dcpay", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"payoff", ",", "payoff"}], "}"}], "]"}]}], ";", "\n", "  ", 
       
       RowBox[{"DCGame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"t1", ",", " ", "dcvals"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"mdnc", " ", "=", " ", 
        RowBox[{"PreKernelSolution", "[", 
         RowBox[{"DCGame", ",", "dcpay", ",", "opts"}], "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Redefine", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"Take", "[", 
        RowBox[{"mdnc", ",", " ", "lt"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsModPreKernelQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"IsModPreKernelQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsModPreKernelQ", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", "\n", 
    " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ovls", ",", " ", "dcvals", ",", " ", "lt", ",", " ", "t0", ",", " ", 
        "t1", ",", " ", "DCGame", ",", " ", "pmpkQ"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"t0", " ", "=", " ", "T"}], ";", 
       RowBox[{"(*", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"dcvals", " ", "=", " ", 
        RowBox[{"ECCoverGame", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"DCGame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"t0", ",", " ", "dcvals"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"pmpkQ", " ", "=", " ", 
        RowBox[{"PreKernelQ", "[", 
         RowBox[{"DCGame", ",", " ", "payoff"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"Redefine", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"Return", "[", "pmpkQ", "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsProperModPreKernelQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"IsProperModPreKernelQ", "::", "argerr"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsProperModPreKernelQ", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ovls", ",", " ", "dcvals", ",", " ", "lt", ",", " ", "t0", ",", " ", 
        "t1", ",", " ", "dpay", ",", " ", "DCGame", ",", " ", "pmpkQ"}], 
       "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"t0", " ", "=", " ", "T"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"dcvals", " ", "=", " ", 
        RowBox[{"DualCover", "[", "game", "]"}]}], ";", "\n", "  ", 
       RowBox[{"lt", " ", "=", " ", 
        RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
       RowBox[{"t1", " ", "=", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"2", "*", "lt"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"DCGame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"t1", ",", " ", "dcvals"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"dpay", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"payoff", ",", "payoff"}], "}"}], "]"}]}], ";", "\n", "  ", 
       
       RowBox[{"pmpkQ", " ", "=", " ", 
        RowBox[{"PreKernelQ", "[", 
         RowBox[{"DCGame", ",", "dpay"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"t0", ",", " ", "ovls"}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Redefine", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], " ", "*)"}], "\n", "  ", 
       RowBox[{"Return", "[", "pmpkQ", "]"}]}]}], "\n", "  ", "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Dual", " ", "Extension", " ", "of", " ", "the", " ", "primal", " ", 
    "game"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DualExtension", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"DualExtension", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DualExtension", "[", "game_", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lt", ",", " ", "T1", ",", " ", "cl1", ",", " ", "clset", ",", " ", 
       "vlset", ",", " ", "dlext", ",", "vals"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"lt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
      RowBox[{"T1", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"lt", " ", "+", " ", "1"}], ",", " ", 
         RowBox[{"2", "*", "lt"}]}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"cl1", " ", "=", " ", 
       RowBox[{"Subsets", "[", "T1", "]"}]}], ";", "\n", "  ", 
      RowBox[{"clset", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Coalitions", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "]"}], " ", 
           "&"}], " ", "/@", " ", "cl1"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "cl1", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "  ", 
      RowBox[{"vlset", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"Coalitions", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", "+", " ", 
            RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
            RowBox[{"v", "[", 
             RowBox[{"Complement", "[", 
              RowBox[{"T", ",", " ", "#"}], "]"}], "]"}]}], " ", "&"}], " ", "/@",
           " ", "Coalitions"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "cl1", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "  ", 
      RowBox[{"dlext", " ", "=", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"List", "[", 
                 RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
               
               RowBox[{"{", 
                RowBox[{"#1", ",", " ", "#2"}], "}"}]}], "]"}], " ", "&"}], 
            ",", " ", 
            RowBox[{"{", 
             RowBox[{"clset", ",", " ", "vlset"}], "}"}]}], "]"}], ",", " ", 
          "1"}], "]"}], " ", "//", " ", "Sort"}]}], ";", "\n", "  ", 
      RowBox[{"vals", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "dlext"}]}], ";", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"vals", ",", " ", "dlext"}], "}"}]}]}], "\n", "  ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"ec18958b-b677-40da-9e7f-2f031e359cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Primal", " ", "Extension", " ", "of", " ", "the", " ", "dual", " ", 
    "game"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PrimalExtension", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"PrimalExtension", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PrimalExtension", "[", "game_", "]"}], " ", ":=", " ", "\n", 
     " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lt", ",", " ", "T1", ",", " ", "cl1", ",", " ", "clset", ",", " ", 
         "vlset", ",", " ", "plext", ",", "vals"}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"lt", " ", "=", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
        RowBox[{"T1", " ", "=", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"lt", " ", "+", " ", "1"}], ",", " ", 
           RowBox[{"2", "*", "lt"}]}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"cl1", " ", "=", " ", 
         RowBox[{"Subsets", "[", "T1", "]"}]}], ";", "\n", "  ", 
        RowBox[{"clset", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Coalitions", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "]"}], " ", 
             "&"}], " ", "/@", " ", "cl1"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "cl1", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "  ", 
        RowBox[{"vlset", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "+", " ", 
              RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
              RowBox[{"v", "[", 
               RowBox[{"Complement", "[", 
                RowBox[{"T", ",", " ", 
                 RowBox[{"Coalitions", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], " ", 
             "&"}], " ", "/@", " ", "Coalitions"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "cl1", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "  ", 
        RowBox[{"plext", " ", "=", " ", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"List", "[", 
                   RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", " ", "#2"}], "}"}]}], "]"}], " ", "&"}], 
              ",", " ", 
              RowBox[{"{", 
               RowBox[{"clset", ",", " ", "vlset"}], "}"}]}], "]"}], ",", " ",
             "1"}], "]"}], " ", "//", " ", "Sort"}]}], ";", "\n", "  ", 
        RowBox[{"vals", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "plext"}]}], ";", "\n", "  ", 
        RowBox[{"{", 
         RowBox[{"vals", ",", " ", "plext"}], "}"}]}]}], "\n", " ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DualCover", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"DualCover", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DualCover", "[", "game_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dvals", ",", " ", "dexts", ",", " ", "pvals", ",", " ", "pexts"}], 
        "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dvals", ",", " ", "dexts"}], "}"}], " ", "=", " ", 
         RowBox[{"DualExtension", "[", "game", "]"}]}], ";", "\n", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pvals", ",", " ", "pexts"}], "}"}], " ", "=", " ", 
         RowBox[{"PrimalExtension", "[", "game", "]"}]}], ";", "\n", "  ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"dvals", ",", " ", "pvals"}], "}"}]}], "]"}]}]}], "\n", 
      "  ", "]"}]}], ";"}], "\n"}]}]], "Code",ExpressionUUID->"35c532e2-f47c-\
477a-8766-1e0fb335d851"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModECCoverGame", "[", 
     RowBox[{"game_", ",", " ", "payoff_"}], "]"}], " ", ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "exc", ",", " ", "mexc", ",", " ", "dv", ",", " ", "sx", ",", " ", 
        "df", ",", " ", "assg", ",", " ", "dmexc", ",", " ", "pvals", ",", 
        " ", "dvals", ",", " ", "vals"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"exc", " ", "=", " ", 
        RowBox[{"ExcessPayoff", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"mexc", " ", "=", " ", 
        RowBox[{"Max", "[", "exc", "]"}]}], ";", "\n", "  ", 
       RowBox[{"dv", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
            RowBox[{"v", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"Reverse", "[", "Coalitions", "]"}]}]}], ";", "\n", "  ", 
       RowBox[{"assg", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"x", ",", " ", "T"}], "]"}], ",", " ", "payoff"}], 
           "}"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"sx", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "Coalitions"}], " ", "/.", " ", "assg"}]}], ";", "\n", "  ", 
       RowBox[{"df", " ", "=", " ", 
        RowBox[{"dv", " ", "-", " ", "sx"}]}], ";", "\n", "  ", 
       RowBox[{"dmexc", " ", "=", " ", 
        RowBox[{"Max", "[", "df", "]"}]}], ";", "\n", "  ", 
       RowBox[{"pvals", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "+", " ", "dmexc"}], " ", "&"}],
          " ", "/@", " ", "Coalitions"}]}], ";", "\n", "  ", 
       RowBox[{"dvals", " ", "=", " ", 
        RowBox[{"dv", " ", "+", " ", "mexc"}]}], ";", "\n", "  ", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"pvals", ",", " ", "dvals"}], "}"}]}], "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{"vals", ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"vals", ",", " ", 
          RowBox[{"v", "[", "T", "]"}]}], "}"}], "]"}]}]}], "\n", "  ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ECCoverGame", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ECCoverGame", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ECCoverGame", "[", 
     RowBox[{"game_", ",", " ", "payoff_"}], "]"}], " ", ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "exc", ",", " ", "mexc", ",", " ", "dv", ",", " ", "sx", ",", " ", 
        "df", ",", " ", "assg", ",", " ", "dmexc", ",", " ", "pvals", ",", 
        " ", "dvals", ",", " ", "vals"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"exc", " ", "=", " ", 
        RowBox[{"ExcessPayoff", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"mexc", " ", "=", " ", 
        RowBox[{"Max", "[", "exc", "]"}]}], ";", "\n", "  ", 
       RowBox[{"dv", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
            RowBox[{"v", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"Reverse", "[", "Coalitions", "]"}]}]}], ";", "\n", "  ", 
       RowBox[{"assg", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{"x", ",", " ", "T"}], "]"}], ",", " ", "payoff"}], 
           "}"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"sx", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "Coalitions"}], " ", "/.", " ", "assg"}]}], ";", "\n", "  ", 
       RowBox[{"df", " ", "=", " ", 
        RowBox[{"dv", " ", "-", " ", "sx"}]}], ";", "\n", "  ", 
       RowBox[{"dmexc", " ", "=", " ", 
        RowBox[{"Max", "[", "df", "]"}]}], ";", "\n", "  ", 
       RowBox[{"pvals", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "+", " ", "mexc", " ", "+", " ", 
           RowBox[{"2", "*", "dmexc"}]}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", "\n", "  ", 
       RowBox[{"dvals", " ", "=", " ", 
        RowBox[{"dv", " ", "+", " ", "dmexc", " ", "+", " ", 
         RowBox[{"2", "*", "mexc"}]}]}], ";", "\n", "  ", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"pvals", ",", " ", "dvals"}], "}"}]}], "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Drop", "[", 
            RowBox[{"vals", ",", "1"}], "]"}]}], "}"}], "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{"vals", ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"vals", ",", " ", 
          RowBox[{"v", "[", "T", "]"}]}], "}"}], "]"}]}]}], "\n", "  ", 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "End", " ", "of", " ", "the", " ", "section", " ", "designated", " ", 
     "to", " ", "the", " ", "Modiclus", " ", "Modified", " ", "and", " ", 
     "Proper", " ", "Modified", " ", "Pre"}], "-", "Kernel"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Start", " ", "of", " ", "the", " ", "section", " ", "related", " ", "to",
      " ", "the", " ", "simplified", " ", "modified", " ", "pre"}], "-", 
    RowBox[{
     RowBox[{"kernel", "/", "nucleolus"}], " ", "of", " ", "a", " ", 
     RowBox[{"game", "."}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMPreKernel", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SMPreKernel", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SMPreKernel", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ovls", ",", " ", "dv", ",", " ", "av", ",", " ", "AVGame", ",", " ", 
        "smpk"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"dv", " ", "=", " ", 
        RowBox[{"DualGame", "[", "game", "]"}]}], ";", "\n", "  ", 
       RowBox[{"av", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ovls", " ", "+", " ", "dv"}], ")"}], "/", "2"}]}], ";", 
       "\n", "  ", 
       RowBox[{"AVGame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"T", ",", " ", "av"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"smpk", " ", "=", " ", 
        RowBox[{"PreKernelElement", "[", "AVGame", "]"}]}], ";", "\n", "  ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"T", ",", " ", "ovls"}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"Redefine", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"Return", "[", "smpk", "]"}], ";"}]}], "\n", "  ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IsSMPreKernelQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"IsSMPreKernelQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsSMPreKernelQ", "[", 
     RowBox[{"game_", ",", " ", "payoff_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ovls", ",", " ", "dv", ",", " ", "av", ",", " ", "AVGame", ",", " ", 
        "smpkQ"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"dv", " ", "=", " ", 
        RowBox[{"DualGame", "[", "game", "]"}]}], ";", "\n", "  ", 
       RowBox[{"av", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ovls", " ", "+", " ", "dv"}], ")"}], "/", "2"}]}], ";", 
       "\n", "  ", 
       RowBox[{"AVGame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"T", ",", " ", "av"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"smpkQ", " ", "=", " ", 
        RowBox[{"PreKernelQ", "[", 
         RowBox[{"AVGame", ",", " ", "payoff"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"T", ",", " ", "ovls"}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"Redefine", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"Return", "[", "smpkQ", "]"}], ";"}]}], "\n", "  ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMPrenucleolus", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SMPrenucleolus", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SMPrenucleolus", "[", "game_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ovls", ",", " ", "dv", ",", " ", "av", ",", " ", "AVGame", ",", " ", 
        "smpn"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"ovls", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Storing", " ", "original", " ", "game", " ", 
         RowBox[{"values", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"dv", " ", "=", " ", 
        RowBox[{"DualGame", "[", "game", "]"}]}], ";", "\n", "  ", 
       RowBox[{"av", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ovls", " ", "+", " ", "dv"}], ")"}], "/", "2"}]}], ";", 
       "\n", "  ", 
       RowBox[{"AVGame", " ", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"T", ",", " ", "av"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"smpn", " ", "=", " ", 
        RowBox[{"PreNucleolus", "[", "AVGame", "]"}]}], ";", "\n", "  ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"T", ",", " ", "ovls"}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"Redefine", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], "*)"}], "\n", "  ", 
       RowBox[{"Return", "[", "smpn", "]"}], ";"}]}], "\n", "  ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IsSMPrenucleolusQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"IsSMPrenulceolusQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IsSMPrenucleolusQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_"}], "]"}], " ", ":=", " ", "\n", " ", 
   
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ovls", ",", " ", "dv", ",", " ", "av", ",", " ", "AVGame", ",", " ", 
       "smpnQ"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"ovls", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "Coalitions"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"Storing", " ", "original", " ", "game", " ", 
        RowBox[{"values", "."}]}], "*)"}], "\n", "  ", 
      RowBox[{"dv", " ", "=", " ", 
       RowBox[{"DualGame", "[", "game", "]"}]}], ";", "\n", "  ", 
      RowBox[{"av", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ovls", " ", "+", " ", "dv"}], ")"}], "/", "2"}]}], ";", 
      "\n", "  ", 
      RowBox[{"AVGame", " ", "=", " ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"T", ",", " ", "av"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"smpnQ", " ", "=", " ", 
       RowBox[{"BalancedSelectionQ", "[", 
        RowBox[{"AVGame", ",", " ", "payoff", ",", " ", 
         RowBox[{"Tight", " ", "->", " ", "True"}]}], "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"DefineGame", "[", 
       RowBox[{"T", ",", " ", "ovls"}], "]"}], ";", 
      RowBox[{"(*", 
       RowBox[{"Redefine", " ", "the", " ", "original", " ", 
        RowBox[{"game", "."}]}], "*)"}], "\n", "  ", 
      RowBox[{"Return", "[", "smpnQ", "]"}], ";"}]}], "\n", "  ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"2bbe6506-c9a9-43bd-bdcf-820c3ec0d5a4"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "End", " ", "of", " ", "the", " ", "section", " ", "related", " ", "to", 
    " ", "the", " ", "simplified", " ", "modified", " ", "pre"}], "-", 
   RowBox[{"kernel", " ", "of", " ", "a", " ", 
    RowBox[{"game", "."}]}]}], " ", "*)"}]], "Code",ExpressionUUID->"a9fab496-\
005a-4e7c-998a-f9e50ae19049"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "next", " ", "function", " ", "checks", " ", "whether", " ", 
     "a", " ", "pre"}], "-", 
    RowBox[{"imputation", " ", "is", " ", "the", " ", "pre"}], "-", 
    RowBox[{"nucleolus", " ", "of", " ", "the", " ", "game"}]}], " ", "*)"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"It", " ", "is", " ", "based", " ", "on", " ", 
    RowBox[{"Kolberg", "'"}], "s", " ", "Theorem"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", "\n", "   ", 
   RowBox[{
    RowBox[{"Use", " ", "the", " ", "function", " ", "with", " ", 
     RowBox[{"care", ".", " ", "Not"}], " ", "every", " ", "result", " ", 
     "is", " ", 
     RowBox[{"correct", "!!"}], " ", "This", " ", "is", " ", "a", " ", "very",
      " ", "crude"}], ",", " ", 
    RowBox[{"but", " ", "quick", " ", "checking", "\n", "   ", "of", " ", 
     RowBox[{"balancedness", ".", " ", "We"}], " ", "tried", " ", "to", " ", 
     "implement", " ", "some", " ", "well", " ", "known", " ", "results", " ",
      "like", " ", "span", " ", "and", " ", "rank", " ", "consideration", 
     "\n", "   ", "without", " ", "relying", " ", "on", " ", "an", " ", "LP", 
     " ", 
     RowBox[{"approach", "."}]}]}], "\n", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "interface"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"BalancedSelectionQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"BalancedSelectionQ", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedSelectionQ", "[", 
      RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "BalancedSelectionQ", "]"}]}]}], "]"}],
      ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dimpay", ",", "cc"}], "}"}], ",", " ", "\n", "       ", 
       RowBox[{
        RowBox[{"dimpay", " ", "=", " ", 
         RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
        "      ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
             ")"}], " ", ",", " ", "\n", 
            "                                       ", 
            RowBox[{
             RowBox[{"cc", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"BalancedSelctQ", "[", 
                 RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
                " ", "payoff"}]}], ";", 
             RowBox[{"Simplify", "[", "cc", "]"}]}], ",", "\n", 
            "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", 
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", 
               "2"}]}], " ", ")"}], ",", " ", "\n", 
            "                                        ", 
            RowBox[{
             RowBox[{"cc", "=", 
              RowBox[{"BalancedSelctQ", "[", 
               RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], 
               "]"}]}], ";", 
             RowBox[{"Simplify", "[", "cc", "]"}]}], ",", " ", "\n", 
            "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
         "                                   ", "]"}]}]}], "\n", "      ", 
      "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"f7815f80-92c9-44f7-ba5a-\
a29ec1839fd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedSelectionQ", "[", 
    RowBox[{"selcoal_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "BalancedSelectionQ", "]"}]}]}], "]"}], ":=",
    " ", "\n", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispres", ",", "tig", ",", "ufs", ",", "sysvec", ",", "mrk", ",", 
       "onesvec", ",", "wghvec", ",", "chres", ",", "poswghQ", ",", "posQ", 
       ",", "addoneQ", ",", "oneQ", ",", "balcQ"}], "}"}], ",", "\n", "     ", 
     RowBox[{
      RowBox[{"dispres", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"tig", " ", "=", "  ", 
       RowBox[{"OptionValue", "[", "Tight", "]"}]}], ";", "\n", "     ", 
      RowBox[{"ufs", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", "selcoal", "]"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"ufs", ",", "T"}], "]"}], ",", "True", ",", 
        RowBox[{"Return", "[", "\"\<False\>\"", "]"}]}], "]"}], ";", "\n", 
      "     ", 
      RowBox[{"sysvec", " ", "=", " ", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"ConstVec", "[", "selcoal", "]"}], "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"mrk", " ", "=", " ", 
       RowBox[{"MatrixRank", "[", "sysvec", "]"}]}], ";", "\n", "     ", 
      RowBox[{"lt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"tig", ",", "True"}], "]"}], ",", "True", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"mrk", "<", "lt"}], ",", " ", 
          RowBox[{"Return", "[", "\"\<False\>\"", "]"}], ",", "True"}], 
         "]"}]}], "]"}], ";", " ", "\n", "     ", 
      RowBox[{"onesvec", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"wghvec", " ", "=", " ", 
       RowBox[{
        RowBox[{"PseudoInverse", "[", 
         RowBox[{"Transpose", "[", "sysvec", "]"}], "]"}], ".", "onesvec"}]}],
       ";", " ", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Trying", " ", "to", " ", "find", " ", "a", " ", "balanced", " ", 
        "subcollection"}], " ", "*)"}], "\n", "     ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"wghvec", ",", "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"wghvec", ",", "sysvec"}], "}"}], "=", 
         RowBox[{"ReduceMatrix", "[", 
          RowBox[{"wghvec", ",", "sysvec", ",", "T", ",", "onesvec"}], 
          "]"}]}], ",", "\n", "          ", 
        RowBox[{"Apply", "[", 
         RowBox[{"Or", ",", 
          RowBox[{"Negative", "[", "wghvec", "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"wghs", ",", "smat"}], "}"}], "=", 
         RowBox[{"ReduceRkMatrix", "[", 
          RowBox[{"wghvec", ",", "sysvec", ",", "T", ",", "onesvec"}], 
          "]"}]}], ",", " ", "\n", "          ", "True", ",", "wghvec"}], 
       "]"}], ";", "\n", "     ", 
      RowBox[{"chres", " ", "=", "  ", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "sysvec", "]"}], ",", " ", "wghvec"}], 
        "]"}]}], ";", "\n", "     ", 
      RowBox[{"poswghQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "wghvec"}]}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"posQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"addoneQ", " ", "=", " ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"chres", ",", " ", "onesvec"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"oneQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "addoneQ"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"balcQ", " ", "=", " ", 
       RowBox[{"And", "[", 
        RowBox[{"posQ", ",", " ", "oneQ"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"dispres", ",", "True"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "balcQ", ",", " ", "wghvec", ",", " ", "sysvec", ",", " ", 
          "selcoal"}], "}"}], ",", " ", "balcQ"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"72d56535-78d4-429b-a336-a0fab0a550d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedSelectionQ", "[", 
    RowBox[{"selcoal_List", ",", " ", "tol_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "BalancedSelectionQ", "]"}]}]}], "]"}], ":=",
    " ", "\n", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispres", ",", "tig", ",", "ufs", ",", "sysvec", ",", "mrk", ",", "lt",
        ",", "onesvec", ",", "wghvec", ",", "chres", ",", "tol1", ",", 
       "wghvec1", ",", "tolv", ",", "wghs", ",", "smat", ",", "poswghQ", ",", 
       "posQ", ",", "addoneQ", ",", "oneQ", ",", "balcQ"}], "}"}], ",", "\n", 
     "     ", 
     RowBox[{
      RowBox[{"dispres", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"tig", " ", "=", "  ", 
       RowBox[{"OptionValue", "[", "Tight", "]"}]}], ";", "\n", "     ", 
      RowBox[{"ufs", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", "selcoal", "]"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"ufs", ",", "T"}], "]"}], ",", "True", ",", 
        RowBox[{"Return", "[", "\"\<False\>\"", "]"}]}], "]"}], ";", "\n", 
      "     ", 
      RowBox[{"sysvec", " ", "=", " ", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"ConstVec", "[", "selcoal", "]"}], "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"mrk", " ", "=", " ", 
       RowBox[{"MatrixRank", "[", "sysvec", "]"}]}], ";", "\n", "     ", 
      RowBox[{"lt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"tig", ",", "True"}], "]"}], ",", "True", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"mrk", "<", "lt"}], ",", " ", 
          RowBox[{"Return", "[", "\"\<False\>\"", "]"}], ",", "True"}], 
         "]"}]}], "]"}], ";", " ", "\n", "     ", 
      RowBox[{"onesvec", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"wghvec", " ", "=", " ", 
       RowBox[{
        RowBox[{"PseudoInverse", "[", 
         RowBox[{"Transpose", "[", "sysvec", "]"}], "]"}], ".", "onesvec"}]}],
       ";", "\n", "     ", 
      RowBox[{"tol1", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{"tol", ",", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "5"}], ")"}]}]}], "}"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"wghvec1", "=", 
       RowBox[{"wghvec", "+", "tol1"}]}], ";", "\n", 
      RowBox[{"(*", "\t", "\n", "     ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<wghvec=\>\"", ",", "wghvec"}], "]"}], ";", "\n", 
        "     ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<wghvec1=\>\"", ",", "wghvec1"}], "]"}], ";"}], "\n", 
       "*)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Trying", " ", "to", " ", "find", " ", "a", " ", "balanced", " ", 
        "subcollection"}], " ", "*)"}], "\n", "     ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"wghvec1", ",", "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"wghvec", ",", "sysvec"}], "}"}], "=", 
         RowBox[{"ReduceMatrix", "[", 
          RowBox[{"wghvec1", ",", "sysvec", ",", "T", ",", "onesvec"}], 
          "]"}]}], ",", "\n", "          ", 
        RowBox[{"Apply", "[", 
         RowBox[{"Or", ",", 
          RowBox[{"Negative", "[", "wghvec1", "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"wghs", ",", "smat"}], "}"}], "=", 
         RowBox[{"ReduceRkMatrix", "[", 
          RowBox[{"wghvec1", ",", "sysvec", ",", "T", ",", "onesvec"}], 
          "]"}]}], ",", " ", "\n", "          ", "True", ",", "wghvec"}], 
       "]"}], ";", "\n", "     ", 
      RowBox[{"chres", " ", "=", "  ", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "sysvec", "]"}], ",", " ", "wghvec"}], 
        "]"}]}], ";", "\n", "     ", 
      RowBox[{"poswghQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "wghvec1"}]}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"posQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"tolv", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"tol1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "     ", 
      RowBox[{"addoneQ", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"LessEqual", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"Subtract", "[", 
             RowBox[{"chres", ",", " ", "onesvec"}], "]"}], "]"}], ",", 
           "tolv"}], "}"}]}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"oneQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "addoneQ"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"balcQ", " ", "=", " ", 
       RowBox[{"And", "[", 
        RowBox[{"posQ", ",", " ", "oneQ"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"Return", "[", "balcQ", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"e0906f39-0066-4cb0-b0e4-5eaa23acc4c0"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Main", " ", "Function", " ", "related", " ", "to", " ", 
   RowBox[{"BalancedSelctionQ", "[", "]"}]}], " ", "*)"}]], "Code",ExpressionU\
UID->"add5a367-af53-4cc4-943c-66d9f9f50c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedSelctQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "BalancedSelectionQ", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispres", ",", "sil", ",", "tig", ",", "selc", ",", "ufs", ",", "lt", 
       ",", "sysvec", ",", "onesvec", ",", "balcmat", ",", "mrk", ",", "wghs",
        ",", "fpQ", ",", "mbQ", ",", "nmbQ", ",", "rQ", ",", "flr", ",", "tk",
        ",", "extb", ",", "slc", ",", "smat", ",", "wghvec", ",", "chres", 
       ",", "numch", ",", "btkm", ",", "posQ", ",", "newwghs", ",", "addoneQ",
        ",", "oneQ", ",", "balcQ"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"dispres", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"sil", " ", "=", "  ", 
       RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
      RowBox[{"tig", " ", "=", "  ", 
       RowBox[{"OptionValue", "[", "Tight", "]"}]}], ";", "\n", "    ", 
      RowBox[{"selc", " ", "=", " ", 
       RowBox[{"BalancedCollect", "[", 
        RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ufs", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"selc", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"ufs", ",", "T"}], "]"}], ",", "True", ",", 
        RowBox[{"Return", "[", "\"\<False\>\"", "]"}]}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"sysvec", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ConstVec", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "selc"}]}], ";", "\n", "    ", 
      RowBox[{"lt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "    ", 
      RowBox[{"onesvec", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "lt"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"balcmat", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"sysvec", ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"mrk", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"MatrixRank", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "balcmat"}]}], ";", "\n", 
      RowBox[{"(*", "  ", "\n", 
       RowBox[{
        RowBox[{"To", " ", "avoid", " ", "wrong", " ", "selections"}], ",", 
        " ", 
        RowBox[{"the", " ", "next", " ", "condition", " ", "is", " ", 
         RowBox[{"imposed", ".", " ", "\n", "The"}], " ", "disadvantage", " ",
          "is", " ", "that", " ", "under", " ", "certain", " ", 
         "conditions"}], ",", " ", 
        RowBox[{
        "we", " ", "make", " ", "no", " ", "selection", " ", "at", " ", 
         RowBox[{"all", "."}]}]}], "  ", "\n", "*)"}], "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"tig", ",", "True"}], "]"}], ",", "True", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "mrk", "]"}], "<", "lt"}], ",", " ", 
          RowBox[{"Return", "[", "\"\<False\>\"", "]"}], ",", "True"}], 
         "]"}]}], "]"}], ";", " ", "\n", "    ", 
      RowBox[{"flr", "=", 
       RowBox[{"Position", "[", 
        RowBox[{"mrk", ",", "lt"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"tk", "=", 
       RowBox[{"First", "[", "flr", "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "tk", "]"}], "==", "0"}], ",", 
        RowBox[{"Return", "[", "\"\<False\>\"", "]"}], ",", "True"}], "]"}], 
      ";", "\n", "    ", 
      RowBox[{"extb", "=", 
       RowBox[{"Extract", "[", 
        RowBox[{"balcmat", ",", "tk"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"slc", "=", 
       RowBox[{"tk", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"smat", "=", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"balcmat", "[", 
         RowBox[{"[", "slc", "]"}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"wghs", " ", "=", 
       RowBox[{
        RowBox[{"PseudoInverse", "[", 
         RowBox[{"Transpose", "[", "smat", "]"}], "]"}], ".", "onesvec"}]}], 
      ";", " ", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Trying", " ", "to", " ", "find", " ", "a", " ", "balanced", " ", 
        "subcollection"}], " ", "*)"}], "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"wghs", ",", "0"}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"wghs", ",", "smat"}], "}"}], "=", 
         RowBox[{"ReduceMatrix", "[", 
          RowBox[{"wghs", ",", "smat", ",", "T", ",", "onesvec"}], "]"}]}], 
        ",", "\n", "          ", 
        RowBox[{"Apply", "[", 
         RowBox[{"Or", ",", 
          RowBox[{"Negative", "[", "wghs", "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"wghs", ",", "smat"}], "}"}], "=", 
         RowBox[{"ReduceRkMatrix", "[", 
          RowBox[{"wghs", ",", "smat", ",", "T", ",", "onesvec"}], "]"}]}], 
        ",", "\n", "          ", "True", ",", "wghs"}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<wghvec=\>\"", ",", "wghs"}], "]"}], ",", " ", "True"}], 
       "]"}], ";", "\n", "    ", 
      RowBox[{"posQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", 
         RowBox[{"Positive", "[", "wghs", "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"slc", "===", "1"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"posQ", ",", 
           RowBox[{"Return", "[", "posQ", "]"}], ",", "True"}], "]"}], ";"}], 
        ",", "\n", "         ", "True", ",", "True"}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<wghvec=\>\"", ",", "wghs"}], "]"}], ",", " ", "True"}], 
       "]"}], ";", "\n", "    ", 
      RowBox[{"btkm", "=", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"balcmat", ",", "slc"}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"wghvec", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "btkm", "]"}], "==", "4"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"PseudoInverse", "[", 
             RowBox[{"Transpose", "[", "#", "]"}], "]"}], ".", "onesvec"}], 
           " ", "&"}], " ", "/@", " ", "btkm"}], ",", "\n", 
         "                ", 
         RowBox[{
          RowBox[{"PseudoInverse", "[", 
           RowBox[{"Transpose", "[", "btkm", "]"}], "]"}], ".", "onesvec"}]}],
         "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<posQ01=\>\"", ",", "posQ"}], "]"}], ",", " ", "True"}], 
       "]"}], ";", "\n", "    ", 
      RowBox[{"newwghs", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"slc", " ", ">", " ", "1"}], ",", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"NewWghs", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"btkm", ",", " ", "wghvec"}], "}"}]}], "]"}], ",", " ", 
         "wghvec"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"poswghQ", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"And", ",", " ", 
              RowBox[{"Positive", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
            " ", "newwghs"}]}], ";", " ", "\n", "                          ", 
         
         RowBox[{"posQ", " ", "=", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}]}], ",", " ", "\n", 
        "      ", "posQ"}], "]"}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", "\n", "          ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<newwghs=\>\"", ",", "newwghs"}], "]"}], ";", " ", "\n",
          "          ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<posQ03=\>\"", ",", "posQ"}], "]"}], ";"}], ",", "\n", 
        "       ", "True"}], "]"}], ";", " ", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"slc", " ", ">", " ", "2"}], ",", "\n", "            ", 
        RowBox[{
         RowBox[{"fpQ", " ", "=", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Apply", "[", 
               RowBox[{"And", ",", 
                RowBox[{"Positive", "[", "#", "]"}]}], "]"}], " ", "&"}], " ",
              "/@", " ", 
             RowBox[{"Take", "[", 
              RowBox[{"newwghs", ",", "3"}], "]"}]}]}], "]"}]}], ";", "\n", 
         "            ", 
         RowBox[{"mbQ", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"#", ",", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"Take", "[", 
            RowBox[{"newwghs", ",", "3"}], "]"}]}]}], ";", "\n", 
         "            ", 
         RowBox[{"nmbQ", " ", "=", " ", 
          RowBox[{"Not", "[", 
           RowBox[{"Apply", "[", 
            RowBox[{"Or", ",", "mbQ"}], "]"}], "]"}]}], ";", "\n", 
         "            ", 
         RowBox[{"rQ", "=", 
          RowBox[{"And", "[", 
           RowBox[{"fpQ", ",", "nmbQ"}], "]"}]}], ";"}], ",", "\n", 
        "          ", 
        RowBox[{"slc", " ", "==", " ", "2"}], ",", " ", "\n", "            ", 
        
        RowBox[{
         RowBox[{"fpQ", " ", "=", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Apply", "[", 
               RowBox[{"And", ",", 
                RowBox[{"Positive", "[", "#", "]"}]}], "]"}], " ", "&"}], " ",
              "/@", " ", 
             RowBox[{"Take", "[", 
              RowBox[{"newwghs", ",", "2"}], "]"}]}]}], "]"}]}], ";", "\n", 
         "            ", 
         RowBox[{"mbQ", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"#", ",", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"Take", "[", 
            RowBox[{"newwghs", ",", "2"}], "]"}]}]}], ";", "\n", 
         "            ", 
         RowBox[{"nmbQ", " ", "=", " ", 
          RowBox[{"Not", "[", 
           RowBox[{"Apply", "[", 
            RowBox[{"Or", ",", "mbQ"}], "]"}], "]"}]}], ";", "\n", 
         "            ", 
         RowBox[{"rQ", "=", 
          RowBox[{"And", "[", 
           RowBox[{"fpQ", ",", "nmbQ"}], "]"}]}], ";"}], ",", "\n", 
        "          ", "True", ",", "True"}], "\n", "          ", "]"}], ";", 
      " ", "\n", "    ", 
      RowBox[{"posQ", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"slc", " ", ">", " ", "1"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{"rQ", ",", 
           RowBox[{"Return", "[", "rQ", "]"}], ",", 
           RowBox[{"Apply", "[", 
            RowBox[{"And", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"And", ",", " ", 
                 RowBox[{"Positive", "[", "#", "]"}]}], "]"}], " ", "&"}], 
              " ", "/@", " ", "newwghs"}]}], "]"}]}], "]"}], ",", " ", "\n", 
         "                 ", "True", ",", " ", "posQ"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"chres", " ", "=", "  ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "#1", "]"}], ",", " ", "#2"}], "]"}], 
          " ", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"btkm", ",", "newwghs"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"numch", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"N", "[", "#", "]"}], ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}], "]"}], " ", "&"}], "/@", " ", 
        "chres"}]}], ";", "\n", "    ", 
      RowBox[{"addoneQ", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"#", ",", " ", "onesvec"}], "]"}], " ", "&"}], " ", "/@", 
        " ", "numch"}]}], ";", "\n", "    ", 
      RowBox[{"oneQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "addoneQ"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"balcQ", " ", "=", " ", 
       RowBox[{"And", "[", 
        RowBox[{"posQ", ",", " ", "oneQ"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<oneQ=\>\"", ",", " ", "oneQ"}], "]"}], ",", " ", 
        "True"}], "]"}], ";", " ", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dispres", " ", "===", " ", "True"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "balcQ", ",", " ", "newwghs", ",", " ", "balcmat", ",", " ", 
          "selc"}], "}"}], ",", " ", "balcQ"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"9654015c-70ec-49cc-bdbb-dbcc6631f266"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NewWghs", "[", 
     RowBox[{"mat_List", ",", "wghs_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"poswghsQ", ",", "posQ", ",", " ", "newwghs"}], " ", "}"}], 
      ",", "\n", "    ", 
      RowBox[{
       RowBox[{"poswghsQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "wghs"}]}], ";", "\n", "    ", 
       RowBox[{"posQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "poswghsQ"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"newwghs", " ", "=", " ", 
          RowBox[{"DetPosWeights", "[", 
           RowBox[{"mat", ",", "wghs"}], "]"}]}], ",", " ", 
         RowBox[{"newwghs", " ", "=", " ", "wghs"}]}], "]"}], ";", "\n", 
       "    ", 
       RowBox[{"poswghsQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "newwghs"}]}], ";", "\n", "    ", 
       RowBox[{"posQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "poswghsQ"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"NormMinimize", "[", 
          RowBox[{"mat", ",", "wghs"}], "]"}], ",", " ", "newwghs"}], 
        "]"}]}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Floating", " ", "Point", " ", "Exception", " ", 
       RowBox[{"Ver", ".", " ", "7."}], "x"}], " ", "*)"}], " ", "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormMinimize", "[", 
    RowBox[{"mat_List", ",", " ", "wghs_List"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "onesvec", ",", "zerolist", ",", "avars", ",", "constset", ",", "objfu",
        ",", "objsys", ",", "resmin", ",", "gw"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"onesvec", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"zerolist", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "mat", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "    ", 
      RowBox[{"avars", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"a", "[", "i", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "mat", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "    ", 
      RowBox[{"constset", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Greater", "[", 
           RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"avars", ",", " ", "zerolist"}], "}"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"objfu", " ", "=", " ", 
       RowBox[{"Norm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "mat", "]"}], ".", "avars"}], " ", "-", 
         " ", "onesvec"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"objsys", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{"constset", ",", "objfu"}], "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "With", " ", "constraints", " ", "we", " ", "get", " ", "a", " ", 
         "floating", " ", "point", " ", "exception", " ", "error", " ", 
         "under", " ", "Linux", " ", "and", " ", "Version", " ", "7.", " ", 
         "$VersionNumber"}], "<=", "7"}], " ", "*)"}], "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"$OperatingSystem", ",", "\"\<Unix\>\""}], "]"}], " ", "&&",
          " ", 
         RowBox[{"LessEqual", "[", 
          RowBox[{"$VersionNumber", ",", "7"}], "]"}]}], ",", 
        RowBox[{"resmin", " ", "=", " ", 
         RowBox[{"NMinimize", "[", 
          RowBox[{"objfu", ",", " ", "avars"}], "]"}]}], ",", "\n", 
        "             ", 
        RowBox[{"resmin", " ", "=", " ", 
         RowBox[{"NMinimize", "[", 
          RowBox[{"objsys", ",", " ", "avars"}], "]"}]}]}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"gw", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"resmin", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rationalize", "[", 
         RowBox[{"#", ",", "0.001"}], "]"}], " ", "&"}], " ", "/@", " ", 
       "gw"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->\
"088826e7-ff58-4199-bb0e-8c63f0ce53a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetPosWeights", "[", 
     RowBox[{"mat_List", ",", " ", "wghs_List"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nlsp", ",", "nlvec", ",", "nwghs01", ",", "nwghs02", ",", "negQ"}], 
       "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"nlsp", " ", "=", " ", 
        RowBox[{"NullSpace", "[", 
         RowBox[{"Transpose", "[", "mat", "]"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"nlvec", " ", "=", " ", 
        RowBox[{"Total", "[", "nlsp", "]"}]}], ";", "\n", "   ", 
       RowBox[{"nwghs01", " ", "=", " ", 
        RowBox[{"wghs", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "100"}], ")"}], " ", "*", " ", "nlvec"}]}]}], 
       ";", "\n", "   ", 
       RowBox[{"nwghs02", " ", "=", " ", 
        RowBox[{"wghs", " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "25"}], ")"}], " ", "*", " ", "nlvec"}]}]}], ";",
        "\n", "   ", 
       RowBox[{"negQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", 
            RowBox[{"Positive", "[", "#", "]"}]}], " ", "]"}], " ", "&"}], "/@",
          " ", 
         RowBox[{"{", 
          RowBox[{"nwghs01", ",", "nwghs02"}], "}"}]}]}], ";", "\n", "   ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"negQ", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "True"}], ",", 
         " ", "nwghs01", ",", "\n", "                 ", 
         RowBox[{
          RowBox[{"negQ", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "===", " ", "True"}], ",", 
         " ", "nwghs02", ",", "\n", "                 ", "True", ",", " ", 
         "wghs"}], "\n", "   ", "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeaklyBalancedSelectionQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"WeaklyBalancedSelectionQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeaklyBalancedSelectionQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "WeaklyBalancedSelectionQ", "]"}]}]}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "dimpay", "}"}], ",", " ", "\n", "       ", 
     RowBox[{
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
           ")"}], " ", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"WeakBalancedSelctQ", "[", 
             RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
            " ", "payoff"}], ",", "\n", 
          "                                     ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           " ", ")"}], ",", " ", 
          RowBox[{"WeakBalancedSelctQ", "[", 
           RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], "]"}], 
          ",", " ", "\n", "                                     ", "True", 
          ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
       "                                   ", "]"}]}]}], "\n", "      ", 
    "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->"1a47ad92-50d4-4127-a246-\
80eebe1038f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WeakBalancedSelctQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "WeaklyBalancedSelectionQ", "]"}]}]}], 
    "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispres", ",", "selc", ",", "ufs", ",", "lt", ",", "sysvec", ",", 
       "onesvec", ",", "balcmat", ",", "mrk", ",", "sil", ",", "flr", ",", 
       "trQ", ",", "wghvec", ",", "chres", ",", "numch", ",", "poswghQ", ",", 
       "posQ", ",", "newwghs", ",", "addoneQ", ",", "oneQ", ",", "balcQ"}], 
      "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"dispres", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"sil", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
      RowBox[{"selc", " ", "=", " ", 
       RowBox[{"BalancedCollect", "[", 
        RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ufs", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"selc", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"ufs", ",", "T"}], "]"}], ",", "True", ",", 
        RowBox[{"Return", "[", "\"\<False\>\"", "]"}]}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"sysvec", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ConstVec", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "selc"}]}], ";", "\n", "    ", 
      RowBox[{"lt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "    ", 
      RowBox[{"onesvec", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "lt"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"balcmat", " ", "=", " ", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"sysvec", ",", " ", 
          RowBox[{"{", "}"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"mrk", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"MatrixRank", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "balcmat"}]}], ";", " ", "\n", "    ", 
      RowBox[{"flr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Equal", "[", 
          RowBox[{"#", ",", "lt"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "mrk"}]}], ";", "\n", "    ", 
      RowBox[{"trQ", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", "flr"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{"trQ", ",", "True", ",", 
        RowBox[{"Return", "[", "trQ", "]"}]}], "]"}], ";", " ", "\n", "    ", 
      
      RowBox[{"wghvec", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PseudoInverse", "[", 
            RowBox[{"Transpose", "[", "#", "]"}], "]"}], ".", "onesvec"}], 
          " ", ")"}], " ", "&"}], " ", "/@", " ", "balcmat"}]}], ";", "\n", 
      "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<wghvec=\>\"", ",", "wghvec"}], "]"}], ",", " ", 
        "True"}], "]"}], ";", "\n", "    ", 
      RowBox[{"poswghQ", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", 
           RowBox[{"NonNegative", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
         " ", "wghvec"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"First", "[", "poswghQ", "]"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"First", "[", "poswghQ", "]"}], "]"}], ",", "True"}], "]"}], 
      ";", " ", "\n", "    ", 
      RowBox[{"posQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<posQ01=\>\"", ",", "posQ"}], "]"}], ",", " ", "True"}], 
       "]"}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"newwghs", " ", "=", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"NewWeakWghs", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"balcmat", ",", " ", "wghvec"}], "}"}]}], "]"}]}], " ", 
         ";"}], ",", " ", 
        RowBox[{"newwghs", " ", "=", " ", "wghvec"}]}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"poswghQ", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"And", ",", " ", 
              RowBox[{"NonNegative", "[", "#", "]"}]}], "]"}], " ", "&"}], 
           " ", "/@", " ", "newwghs"}]}], ";", " ", 
         RowBox[{"posQ", " ", "=", " ", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}]}], ",", " ", 
        "posQ"}], "]"}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", "\n", "          ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<newwghs=\>\"", ",", "newwghs"}], "]"}], ";", " ", "\n",
          "          ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<posQ03=\>\"", ",", "posQ"}], "]"}], ";"}], ",", "\n", 
        "       ", "True"}], "]"}], ";", " ", "\n", "    ", 
      RowBox[{"chres", " ", "=", "  ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "#1", "]"}], ",", " ", "#2"}], "]"}], 
          " ", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"balcmat", ",", " ", "newwghs"}], "}"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"numch", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"N", "[", "#", "]"}], ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}], "]"}], " ", "&"}], "/@", " ", 
        "chres"}]}], ";", "\n", "    ", 
      RowBox[{"addoneQ", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"#", ",", " ", "onesvec"}], "]"}], " ", "&"}], " ", "/@", 
        " ", "numch"}]}], ";", "\n", "    ", 
      RowBox[{"oneQ", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "addoneQ"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"balcQ", " ", "=", " ", 
       RowBox[{"And", "[", 
        RowBox[{"posQ", ",", " ", "oneQ"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<oneQ=\>\"", ",", " ", "oneQ"}], "]"}], ",", " ", 
        "True"}], "]"}], ";", " ", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"dispres", ",", "True"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "balcQ", ",", " ", "newwghs", ",", " ", "balcmat", ",", " ", 
          "selc"}], "}"}], ",", " ", "balcQ"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"1d9f7c98-3a3c-4bc6-91f9-5dffba516327"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NewWeakWghs", "[", 
     RowBox[{"mat_List", ",", "wghs_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"poswghsQ", ",", "posQ", ",", " ", "newwghs"}], " ", "}"}], 
      ",", "\n", "    ", 
      RowBox[{
       RowBox[{"poswghsQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"NonNegative", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "wghs"}]}], ";", "\n", "    ", 
       RowBox[{"posQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "poswghsQ"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"newwghs", " ", "=", " ", 
          RowBox[{"DetPosWeights", "[", 
           RowBox[{"mat", ",", "wghs"}], "]"}]}], ",", " ", 
         RowBox[{"newwghs", " ", "=", " ", "wghs"}]}], "]"}], ";", "\n", 
       "    ", 
       RowBox[{"poswghsQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "newwghs"}]}], ";", "\n", "    ", 
       RowBox[{"posQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "poswghsQ"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"posQ", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"WeakNormMinimize", "[", 
          RowBox[{"mat", ",", "wghs"}], "]"}], ",", " ", "newwghs"}], 
        "]"}]}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"Floating", " ", "Point", " ", "Exception", " ", 
       RowBox[{"Ver", ".", " ", "7."}], "x"}], " ", "*)"}], " ", "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WeakNormMinimize", "[", 
     RowBox[{"mat_List", ",", " ", "wghs_List"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "onesvec", ",", "zerolist", ",", "avars", ",", "constset", ",", 
        "objfu", ",", "objsys", ",", "resmin", ",", "gw"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{
       RowBox[{"onesvec", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"zerolist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "mat", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"avars", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"a", "[", "i", "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "mat", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"constset", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"GreaterEqual", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"avars", ",", " ", "zerolist"}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"objfu", " ", "=", " ", 
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", "mat", "]"}], ".", "avars"}], " ", "-", 
          " ", "onesvec"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"objsys", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"constset", ",", "objfu"}], "]"}]}], ";", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "With", " ", "constraints", " ", "we", " ", "get", " ", "a", " ", 
          "floating", " ", "point", " ", "exception", " ", "error", " ", 
          "under", " ", "Linux", " ", "and", " ", "Version", " ", "7.", " ", 
          "$VersionNumber"}], "<=", "7"}], " ", "*)"}], "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"$OperatingSystem", ",", "\"\<Unix\>\""}], "]"}], " ", "&&",
           " ", 
          RowBox[{"LessEqual", "[", 
           RowBox[{"$VersionNumber", ",", "7"}], "]"}]}], ",", 
         RowBox[{"resmin", " ", "=", " ", 
          RowBox[{"NMinimize", "[", 
           RowBox[{"objfu", ",", " ", "avars"}], "]"}]}], ",", "\n", 
         "             ", 
         RowBox[{"resmin", " ", "=", " ", 
          RowBox[{"NMinimize", "[", 
           RowBox[{"objsys", ",", " ", "avars"}], "]"}]}]}], "]"}], ";", "\n",
        "    ", 
       RowBox[{"gw", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"resmin", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"Rationalize", "[", 
          RowBox[{"#", ",", "0.001"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "gw"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CollectionOfDecreasingExcess", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CollectionOfDecreasingExcess", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CollectionOfDecreasingExcess", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], ":=", 
    RowBox[{"BalancedCollect", "[", 
     RowBox[{"game", ",", "payoff"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BalancedCollect", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"levexc", ",", " ", "redlev"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"levexc", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ExcessPayoff", "[", 
              RowBox[{"game", ",", " ", "payoff"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"redlev", " ", "=", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Union", "[", 
          RowBox[{"Sort", "[", "levexc", "]"}], "]"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"DetBalancedCollec", "[", 
              RowBox[{"#", ",", " ", "payoff", ",", " ", 
               RowBox[{"redlev", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
             " ", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{"Subsets", "[", "T", "]"}], ",", " ", 
                RowBox[{"-", "1"}]}], "]"}], ",", "1"}], "]"}]}], ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "redlev", "]"}]}], "}"}]}], "]"}]}]}], "\n",
      "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetBalancedCollec", "[", 
     RowBox[{"S_List", ",", " ", "payoff_List", ",", " ", "\[Alpha]_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"GreaterEqual", "[", 
         RowBox[{
          RowBox[{"Excess", "[", 
           RowBox[{"payoff", ",", " ", "S"}], "]"}], ",", " ", "\[Alpha]"}], 
         "]"}], ",", " ", "S", ",", " ", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConstVec", "[", "meff_List", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zrv", ",", " ", "onesvec", ",", " ", "pscoal"}], "}"}], ",", 
     "\n", "    ", 
     RowBox[{
      RowBox[{"zrv", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"pscoal", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "meff"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"ReplacePart", "[", 
         RowBox[{"zrv", ",", " ", "1", ",", " ", "#"}], "]"}], " ", "&"}], 
       " ", "/@", " ", "pscoal"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "Code",Ex\
pressionUUID->"1ce64c3a-eb55-4170-b5c2-230faa946df7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"k", "-", 
     RowBox[{"Balancedness", " ", "Section"}]}], ",", " ", 
    RowBox[{"see", " ", 
     RowBox[{"I", ".", " ", "Katsev"}], " ", "and", " ", 
     RowBox[{"E", ".", " ", "Yanovskaya"}], " ", 
     RowBox[{"(", "2009", ")"}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "interface", " ", "for", " ", "coalition", " ", 
    RowBox[{"structure", "."}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"kBalancednessQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"kBalancednessQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"kBalancednessQ", "[", 
      RowBox[{"selcoal_List", ",", " ", "KC_List", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "kBalancednessQ", "]"}]}]}], "]"}], ":=",
      " ", "\n", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dispres", ",", "sysvec", ",", "mrk", ",", "trQ", ",", "vecps", ",", 
         "zrv", ",", "onesvec", ",", "wghvec", ",", "chres", ",", "poswghQ", 
         ",", "posQ", ",", "addoneQ", ",", "oneQ", ",", "balcQ"}], "}"}], ",",
        "\n", "     ", 
       RowBox[{
        RowBox[{"dispres", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
        "     ", 
        RowBox[{"sysvec", " ", "=", " ", 
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{"ConstVec", "[", "selcoal", "]"}], "]"}]}], ";", "\n", 
        "     ", 
        RowBox[{"mrk", "=", 
         RowBox[{"MatrixRank", "[", "sysvec", "]"}]}], ";", "\n", "     ", 
        RowBox[{"trQ", "=", 
         RowBox[{"Equal", "[", 
          RowBox[{"mrk", ",", 
           RowBox[{"Length", "[", "KC", "]"}]}], "]"}]}], ";", "\n", "     ", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"trQ", "===", "True"}], ",", "True", ",", 
          RowBox[{"Return", "[", "trQ", "]"}]}], "]"}], ";", " ", "\n", 
        "     ", 
        RowBox[{"vecps", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", "KC"}], "]"}]}], ";", "\n", "     ", 
        RowBox[{"zrv", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
         "     ", 
        RowBox[{"onesvec", " ", "=", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"zrv", ",", "1", ",", "vecps"}], "]"}]}], ";", "\n", 
        "     ", 
        RowBox[{"wghvec", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PseudoInverse", "[", 
            RowBox[{"Transpose", "[", "sysvec", "]"}], "]"}], ".", 
           "onesvec"}], " ", ")"}]}], ";", " ", "\n", "     ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<wghvec=\>\"", ",", "wghvec"}], "]"}], ";", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Trying", " ", "to", " ", "find", " ", "a", " ", "balanced", " ", 
          "subcollection"}], " ", "*)"}], "\n", "     ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"wghvec", ",", "0"}], "]"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"wghvec", ",", "sysvec"}], "}"}], "=", 
           RowBox[{"ReduceMatrix", "[", 
            RowBox[{"wghvec", ",", "sysvec", ",", "KC", ",", "onesvec"}], 
            "]"}]}], ",", "wghvec"}], "]"}], ";", "\n", "     ", 
        RowBox[{"chres", " ", "=", "  ", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "sysvec", "]"}], ",", " ", "wghvec"}], 
          "]"}]}], ";", "\n", "     ", 
        RowBox[{"poswghQ", " ", "=", " ", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
            "wghvec"}]}], "]"}]}], ";", "\n", "     ", 
        RowBox[{"posQ", " ", "=", " ", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", "poswghQ"}], "]"}]}], ";", "\n", "     ", 
        RowBox[{"addoneQ", " ", "=", " ", 
         RowBox[{"SameQ", "[", 
          RowBox[{"chres", ",", " ", "onesvec"}], "]"}]}], ";", "\n", "     ", 
        RowBox[{"oneQ", " ", "=", " ", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", "addoneQ"}], "]"}]}], ";", "\n", "     ", 
        RowBox[{"balcQ", " ", "=", " ", 
         RowBox[{"And", "[", 
          RowBox[{"posQ", ",", " ", "oneQ"}], "]"}]}], ";", "\n", "     ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"dispres", ",", "True"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "balcQ", ",", " ", "wghvec", ",", " ", "sysvec", ",", " ", 
            "selcoal"}], "}"}], ",", " ", "balcQ"}], "]"}]}]}], "\n", "]"}]}],
     ";"}]}]}]], "Code",ExpressionUUID->"7c7897dd-5bdd-4df0-9ad2-\
b89e72b36dd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReduceMatrix", "[", 
    RowBox[{"wghs_List", ",", "mat_List", ",", "KC_List", ",", "onesv_List"}],
     "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lkc", ",", "adv", ",", "zrv", ",", "nwm"}], "}"}], ",", "\n", 
     "     ", 
     RowBox[{
      RowBox[{"lkc", " ", "=", " ", 
       RowBox[{"Length", "[", "KC", "]"}]}], ";", "\n", "     ", 
      RowBox[{"adv", "=", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Positive", "[", "#", "]"}], ",", "1", ",", "0"}], "]"}], 
          " ", "&"}], " ", "/@", " ", "wghs"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"nwm", "=", 
       RowBox[{"adv", "*", "mat"}]}], ";", "\n", "     ", 
      RowBox[{"zrv", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", " ", "&"}], ",", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"nwm", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"nwm", ",", "zrv"}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"MatrixRank", "[", "nwm", "]"}], ",", "lkc"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"PseudoInverse", "[", 
            RowBox[{"Transpose", "[", "nwm", "]"}], "]"}], ".", "onesv"}], 
          ",", "nwm"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"wghs", ",", "mat"}], "}"}]}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"912a5022-1ee6-4f9a-bf50-b130a7763383"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReduceRkMatrix", "[", 
     RowBox[{
     "wghs_List", ",", "mat_List", ",", "KC_List", ",", "onesv_List"}], "]"}],
     ":=", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lkc", ",", "adv", ",", "ctz", ",", "zrv", ",", "psz", ",", "pso", ",",
         "tk", ",", "nwm", ",", "nwm1", ",", "nwm2", ",", "swgh"}], "}"}], 
      ",", "\n", "     ", 
      RowBox[{
       RowBox[{"lkc", " ", "=", " ", 
        RowBox[{"Length", "[", "KC", "]"}]}], ";", "\n", "     ", 
       RowBox[{"adv", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Positive", "[", "#", "]"}], ",", "1", ",", "0"}], "]"}], 
          " ", "&"}], " ", "/@", " ", "wghs"}]}], ";", "\n", "     ", 
       RowBox[{"ctz", " ", "=", " ", 
        RowBox[{"Count", "[", 
         RowBox[{"adv", ",", "0"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"psz", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"adv", ",", "0"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"pso", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"adv", ",", "1"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"tk", " ", "=", " ", 
        RowBox[{
         RowBox[{"Last", "[", "psz", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ctz", ">", "0"}], ",", 
         RowBox[{"nwm", " ", "=", " ", 
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"Take", "[", 
            RowBox[{"mat", ",", "tk"}], "]"}], "]"}]}], ",", 
         RowBox[{"nwm", " ", "=", " ", 
          RowBox[{"Developer`ToPackedArray", "[", "mat", "]"}]}]}], "]"}], 
       ";", "\n", "     ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"MatrixRank", "[", "nwm", "]"}], ",", "lkc"}], "]"}], ",", 
         
         RowBox[{
          RowBox[{"swgh", " ", "=", " ", 
           RowBox[{
            RowBox[{"PseudoInverse", "[", 
             RowBox[{"Transpose", "[", "nwm", "]"}], "]"}], ".", "onesv"}]}], 
          ";"}], ",", "\n", "           ", 
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"MatrixRank", "[", "nwm", "]"}], ",", 
           RowBox[{"lkc", "-", "1"}]}], "]"}], ",", "\n", "              ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"ctz", ",", "2"}], "]"}], ",", 
           RowBox[{
            RowBox[{"fpsz", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Append", "[", 
               RowBox[{"pso", ",", 
                RowBox[{"First", "[", "psz", "]"}]}], "]"}], "]"}]}], ";", 
            "\n", "                                 ", 
            RowBox[{"lpsz", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Append", "[", 
               RowBox[{"pso", ",", 
                RowBox[{"Last", "[", "psz", "]"}]}], "]"}], "]"}]}], ";", 
            "\n", "                                 ", 
            RowBox[{"nwm1", "=", 
             RowBox[{"Extract", "[", 
              RowBox[{"mat", ",", "fpsz"}], "]"}]}], ";", "\n", 
            "                                 ", 
            RowBox[{"nwm2", "=", 
             RowBox[{"Extract", "[", 
              RowBox[{"mat", ",", "lpsz"}], "]"}]}], ";", "\n", 
            "                                 ", 
            RowBox[{"mrkQ", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"SameQ", "[", 
                RowBox[{
                 RowBox[{"MatrixRank", "[", "#", "]"}], ",", "lkc"}], "]"}], 
               " ", "&"}], " ", "/@", " ", 
              RowBox[{"{", 
               RowBox[{"nwm1", ",", "mwm2"}], "}"}]}]}], ";", "\n", 
            "                                 ", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"First", "[", "mrkQ", "]"}], ",", 
              RowBox[{
               RowBox[{"nwm", "=", "nwm1"}], ";", 
               RowBox[{"swgh", "=", 
                RowBox[{
                 RowBox[{"PseudoInverse", "[", 
                  RowBox[{"Transpose", "[", "nwm", "]"}], "]"}], ".", 
                 "onesv"}]}], ";"}], ",", "\n", "\t\t\t\t       ", 
              RowBox[{"Last", "[", "mrkQ", "]"}], ",", " ", 
              RowBox[{
               RowBox[{"nwm", "=", "nwm2"}], ";", 
               RowBox[{"swgh", "=", 
                RowBox[{
                 RowBox[{"PseudoInverse", "[", 
                  RowBox[{"Transpose", "[", "nwm", "]"}], "]"}], ".", 
                 "onesv"}]}], ";"}], ",", "\n", 
              "                                       ", "True", ",", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"wghs", ",", "mat"}], "}"}], "]"}]}], " ", "\n", 
             "                                      ", "]"}], ";"}], ",", 
           "\n", "                    ", "True", ",", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"wghs", ",", "mat"}], "}"}], "]"}]}], "]"}], ",", "\n", 
         "           ", "True", ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"wghs", ",", "mat"}], "}"}], "]"}]}], "\n", "          ", 
        "]"}], ";", "\n", "     ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"swgh", ",", "nwm"}], "}"}], "]"}]}]}], "\n", "]"}]}], ";"}],
   "\n"}]], "Code",ExpressionUUID->"e40c8f95-af4e-448f-b4a4-a31f74ca35f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{"User", " ", "interface", " ", "for", " ", "payoff", " ", 
    RowBox[{"vectors", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SelectionKBalancedQ", "[", 
      RowBox[{
      "game_", ",", " ", "payoff_List", ",", " ", "k_Integer", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "SelectionKBalancedQ", "]"}]}]}], 
      "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dispres", ",", " ", "verb", ",", " ", "dimpay", ",", " ", "selc", 
         ",", "binval", ",", "cc"}], "}"}], ",", " ", "\n", "       ", 
       RowBox[{
        RowBox[{"dispres", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
        "       ", 
        RowBox[{"verb", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "       ", 
        
        RowBox[{"dimpay", " ", "=", " ", 
         RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
        "      ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
             ")"}], " ", ",", "     ", "\n", 
            "                                           ", 
            RowBox[{
             RowBox[{"selc", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"BalancedCollect", "[", 
                 RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], "/@", 
               " ", "payoff"}]}], ";", " ", "\n", 
             "                                           ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dispres", " ", "===", " ", "True"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"CheckCoalStructure", "[", 
                  RowBox[{"#", ",", " ", "k", ",", " ", 
                   RowBox[{"DisplayAllResults", "->", " ", "True"}]}], "]"}], 
                 " ", "&"}], "/@", " ", "selc"}], ",", " ", "\n", 
               "                                                              \
                   ", 
               RowBox[{
                RowBox[{"binval", " ", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"CheckCoalStructure", "[", 
                    RowBox[{"#", " ", ",", " ", "k", ",", " ", 
                    RowBox[{"DisplayAllResults", "->", " ", "False"}]}], 
                    "]"}], " ", "&"}], "/@", " ", "selc"}]}], ";", " ", "\n", 
                "                                                             \
                    ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"verb", " ", "===", "False"}], ",", "  ", 
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<binval1=\>\"", ",", "binval"}], "]"}], ",", 
                  " ", "True"}], "]"}], ";", "\n", 
                "                                                             \
                   ", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Apply", "[", 
                    RowBox[{"And", ",", "#"}], "]"}], "&"}], "/@", " ", 
                  "binval"}], "]"}]}]}], " ", "]"}]}], "  ", ",", " ", "\n", 
            "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", 
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", 
               "2"}]}], " ", ")"}], ",", "  ", "\n", 
            "                                          ", 
            RowBox[{
             RowBox[{"selc", " ", "=", " ", 
              RowBox[{"BalancedCollect", "[", 
               RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "  ", "\n",
              "                                          ", 
             RowBox[{"cc", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"CheckCoalStructure", "[", 
                 RowBox[{"#", " ", ",", " ", "k", ",", " ", "opts"}], " ", 
                 "]"}], " ", "&"}], "/@", " ", "selc"}]}], ";", "\n", 
             "                                          ", 
             RowBox[{"Apply", "[", 
              RowBox[{"And", ",", "cc"}], "]"}]}], ",", "  ", "\n", 
            "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
         "                                   ", "]"}]}]}], "\n", "      ", 
      "]"}]}], ";"}], "\n", "\n", "\n"}]}]], "Code",ExpressionUUID->"5079aeab-\
e885-4614-8033-4160713c7e1b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckCoalStructure", "[", 
     RowBox[{"selcoal_List", ",", " ", "k_Integer", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "SelectionKBalancedQ", "]"}]}]}], "]"}],
     " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"verb", ",", " ", "cst"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"verb", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"verb", " ", "===", " ", "False"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<selcoal=\>\"", ",", " ", "selcoal"}], " ", "]"}], 
          ";"}], ",", " ", "True"}], " ", "]"}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "selcoal", "]"}], "  ", "===", " ", "3"}], 
         ",", "\n", "                     ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"GreaterEqual", "[", 
             RowBox[{"k", ",", " ", 
              RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "===", " ", 
            "True"}], ",", "  ", 
           RowBox[{"BalancedSelectionQ", "[", 
            RowBox[{"selcoal", ",", " ", "opts"}], "]"}], ",", "  ", "\n", 
           "                                   ", 
           RowBox[{
            RowBox[{"GreaterEqual", "[", 
             RowBox[{"k", ",", " ", "2"}], "]"}], " ", "===", " ", "True"}], 
           ",", " ", 
           RowBox[{"SelctKBalacQ", "[", 
            RowBox[{"selcoal", ",", " ", "k", ",", " ", "opts"}], "]"}], ",", 
           "\n", "                                   ", "True", ",", "  ", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<The value of k must be an integer between 2 and \>\"", ",", 
             " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}], ",", "\n", 
         "                  ", 
         RowBox[{
          RowBox[{"Depth", "[", "selcoal", "]"}], "  ", "===", " ", "4"}], 
         ",", "\n", "                       ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"verb", " ", "===", " ", "False"}], ",", " ", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<selcoal=\>\"", ",", " ", "selcoal"}], " ", "]"}], 
             ";"}], ",", " ", "True"}], " ", "]"}], ";", "\n", 
          "                       ", 
          RowBox[{"cst", " ", "=", " ", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{"selcoal", ",", 
             RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
          "                       ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"GreaterEqual", "[", 
              RowBox[{"k", ",", " ", 
               RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "===", " ", 
             "True"}], ",", "  ", 
            RowBox[{"bcQ", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"BalancedSelectionQ", "[", 
                RowBox[{"#", ",", " ", "opts"}], "]"}], " ", "&"}], "/@", " ",
               "cst"}]}], ",", "  ", "\n", 
            "                                     ", 
            RowBox[{
             RowBox[{"GreaterEqual", "[", 
              RowBox[{"k", ",", " ", "2"}], "]"}], " ", "===", " ", "True"}], 
            ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"SelctKBalacQ", "[", 
               RowBox[{"#", ",", " ", "k", ",", " ", "opts"}], "]"}], " ", 
              "&"}], "/@", " ", "cst"}], ",", "\n", 
            "                                     ", "True", ",", "  ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<The value of k must be an integer between 2 and \>\"", ",", 
              " ", 
              RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}]}], ",", 
         "\n", "                   ", 
         RowBox[{"selcoal", " ", "===", 
          RowBox[{"{", "}"}]}], ",", " ", "True", ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Depth", "[", "selcoal", "]"}], " ", "==", "2"}], " ", 
          "*)"}], " ", "\n", "                  ", "True", ",", " ", 
         RowBox[{
         "Print", "[", "\"\<The input dimension is not correct.\>\"", "]"}]}],
         "\n", "                                      ", "]"}]}]}], "\n", 
     "  ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"User", " ", "interface", " ", "for", " ", "coalition", " ", 
    RowBox[{"structures", "."}]}], " ", "*)"}]}]}], "Code",ExpressionUUID->\
"f56c7217-cf9c-4ac3-b335-6ad103057b5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectionKBalancedQ", "[", 
    RowBox[{"selcoal_List", ",", " ", "k_Integer", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "SelectionKBalancedQ", "]"}]}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "    ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Depth", "[", "selcoal", "]"}], "  ", "===", " ", "3"}], ",", 
       "\n", "                     ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"GreaterEqual", "[", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "===", " ", 
          "True"}], ",", "  ", 
         RowBox[{"BalancedSelectionQ", "[", 
          RowBox[{"selcoal", ",", " ", "opts"}], "]"}], ",", "  ", "\n", 
         "                                   ", 
         RowBox[{
          RowBox[{"GreaterEqual", "[", 
           RowBox[{"k", ",", " ", "2"}], "]"}], " ", "===", " ", "True"}], 
         ",", " ", 
         RowBox[{"SelctKBalacQ", "[", 
          RowBox[{"selcoal", ",", " ", "k", ",", " ", "opts"}], "]"}], ",", 
         "\n", "                                   ", "True", ",", "  ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<The value of k must be an integer between 2 and \>\"", ",", 
           " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}], ",", "\n", 
       "                  ", 
       RowBox[{
        RowBox[{"Depth", "[", "selcoal", "]"}], "  ", "===", " ", "4"}], ",", 
       "\n", "                       ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"GreaterEqual", "[", 
           RowBox[{"k", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "===", " ", 
          "True"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"BalancedSelectionQ", "[", 
            RowBox[{"#", ",", " ", "opts"}], "]"}], " ", "&"}], "/@", " ", 
          "selcoal"}], ",", "  ", "\n", 
         "                                     ", 
         RowBox[{
          RowBox[{"GreaterEqual", "[", 
           RowBox[{"k", ",", " ", "2"}], "]"}], " ", "===", " ", "True"}], 
         ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"SelctKBalacQ", "[", 
            RowBox[{"#", ",", " ", "k", ",", " ", "opts"}], "]"}], " ", "&"}],
           "/@", " ", "selcoal"}], ",", "\n", 
         "                                     ", "True", ",", "  ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<The value of k must be an integer between 2 and \>\"", ",", 
           " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}], ",", "\n", 
       "                  ", "True", ",", " ", 
       RowBox[{
       "Print", "[", "\"\<The input dimension is not correct.\>\"", "]"}]}], 
      "\n", "       ", "]"}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->\
"621c26ae-e7b7-484b-aca0-e9e0747f6277"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelctKBalacQ", "[", 
     RowBox[{"selcoal_List", ",", " ", "k_Integer", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "SelectionKBalancedQ", "]"}]}]}], "]"}],
     " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "verb", ",", "dispres", ",", "onesvec", ",", "eqtok", ",", "ufs", ",", 
        "bveq", ",", "kcoll", ",", "kbalsel", ",", "kbalmat", ",", "mrk", ",",
         "flr", ",", "trQ", ",", "kwghs", ",", "selkbalQ", ",", "redw", ",", 
        "nkwghs", ",", "nkbalmat", ",", "kpos", ",", "kselall", ",", "\n", 
        "    ", "kbalQ", ",", " ", "kinprd", ",", " ", "ksum", ",", " ", 
        "ksumeqQ", ",", " ", "ksQ"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"dispres", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"verb", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"verb", ",", "False"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<selcoal=\>\"", ",", "selcoal"}], "]"}], ";"}], ",", 
         " ", "True"}], " ", "]"}], ";", "\n", "    ", 
       RowBox[{"onesvec", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"eqtok", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], " ", "===", " ", "k"}], ",",
               " ", "#", ",", " ", 
              RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"Subsets", "[", "T", "]"}]}], ",", " ", 
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"bveq", " ", "=", " ", 
        RowBox[{"ConstVec", "[", "eqtok", "]"}]}], ";", "\n", "    ", 
       RowBox[{"kcoll", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"selcoal", ",", " ", "#"}], "]"}], " ", "===", " ", 
               "True"}], ",", "  ", 
              RowBox[{"Intersection", "[", 
               RowBox[{
                RowBox[{"eqtok", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "]"}], ",", 
              " ", 
              RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
           "selcoal"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "eqtok", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"kbalsel", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Union", "[", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], "]"}], " ", "&"}], " ", "/@", " ",
            "kcoll"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"kbalmat", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ConstVec", "[", 
           RowBox[{"Union", "[", "#", "]"}], "]"}], " ", "&"}], " ", "/@", 
         " ", "kbalsel"}]}], ";", "\n", "    ", 
       RowBox[{"mrk", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MatrixRank", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "kbalmat"}]}], ";", "\n", "    ", 
       RowBox[{"flr", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"GreaterEqual", "[", 
           RowBox[{"#", ",", "k"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "mrk"}]}], ";", "\n", "    ", 
       RowBox[{"trQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "flr"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"trQ", ",", "True"}], "]"}], ",", "True", ",", 
         RowBox[{"Return", "[", "trQ", "]"}]}], "]"}], ";", "\n", "    ", 
       RowBox[{"kwghs", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ComputeWeights", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "k"}], "]"}], " ", "&"}], 
          " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"kbalmat", ",", " ", "bveq"}], "}"}]}], "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"verb", ",", "False"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<kwghs=\>\"", ",", " ", "kwghs"}], "]"}], ";"}], ",", 
         " ", "True"}], "]"}], ";", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Trying", " ", "to", " ", "find", " ", "a", " ", "balanced", " ", 
         "subcollection"}], " ", "*)"}], "\n", "    ", 
       RowBox[{"redw", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"#1", ",", "0"}], "]"}], ",", 
             RowBox[{"ReduceMatrix", "[", 
              RowBox[{"#1", ",", "#2", ",", "#3", ",", "onesvec"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}]}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"kwghs", ",", "kbalmat", ",", "eqtok"}], "}"}]}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{"nkwghs", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "redw"}]}], ";", "\n", "    ", 
       RowBox[{"nkbalmat", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "redw"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"verb", ",", "False"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nkwghs=\>\"", ",", " ", "nkwghs"}], "]"}], ";"}], ",",
          " ", "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"kpos", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"nkwghs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "nkwghs", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"kselall", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "kpos"}]}], ";", "\n", "    ", 
       RowBox[{"kbalQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "kselall"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"kinprd", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "nkbalmat", "]"}], "==", "4"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Dot", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", "#1", "]"}], ",", " ", "#2"}], "]"}],
              " ", "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"nkbalmat", ",", " ", "nkwghs"}], "}"}]}], "]"}], ",", 
          "\n", "                   ", 
          RowBox[{
           RowBox[{"Depth", "[", "nkbalmat", "]"}], "==", "3"}], ",", 
          RowBox[{"Dot", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "nkbalmat", "]"}], ",", " ", "nkwghs"}],
            "]"}], ",", "\n", "                   ", "True", ",", " ", 
          RowBox[{"Dot", "[", 
           RowBox[{"nkbalmat", ",", " ", "nkwghs"}], "]"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"verb", ",", "False"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<kinprd=\>\"", ",", " ", "kinprd"}], "]"}], ";"}], ",",
          " ", "True"}], " ", "]"}], ";", "\n", "    ", 
       RowBox[{"ksum", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{"#", ",", " ", "onesvec"}], "]"}], " ", "&"}], " ", "/@", 
         " ", "kinprd"}]}], ";", "\n", "    ", 
       RowBox[{"ksumeqQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"#", ",", " ", "k"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "ksum"}]}], ";", "\n", "    ", 
       RowBox[{"ksQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "ksumeqQ"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"selkbalQ", " ", "=", " ", 
        RowBox[{"And", "[", 
         RowBox[{"ksQ", ",", " ", "kbalQ"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"dispres", ",", "True"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "selkbalQ", ",", " ", "nkwghs", ",", " ", "nkbalmat", ",", " ", 
           "kbalsel"}], "}"}], ",", " ", "selkbalQ"}], "]"}]}]}], "\n", " ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ComputeWeights", "[", 
     RowBox[{"kmatrix_List", ",", " ", "onesv_List", ",", " ", "k_Integer"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trkmat", ",", " ", "d1", ",", " ", "d2"}], "}"}], ",", "\n", 
      "     ", 
      RowBox[{
       RowBox[{"trkmat", " ", "=", " ", 
        RowBox[{"Transpose", "[", "kmatrix", "]"}]}], ";", " ", "\n", "    ", 
       
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d1", ",", "d2"}], "}"}], " ", "=", " ", 
        RowBox[{"Dimensions", "[", "trkmat", "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d1", " ", ",", "d2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "k"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Inverse", "[", "trkmat", "]"}], ".", "onesv"}], ",", " ", 
         RowBox[{"WghsPseudoInvers", "[", 
          RowBox[{"trkmat", ",", " ", "onesv"}], "]"}]}], " ", "]"}]}]}], 
     "\n", "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WghsPseudoInvers", "[", 
     RowBox[{"kmatrix_List", ",", " ", "onesv_List"}], "]"}], " ", ":=", " ", 
    
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "psmat", ",", " ", "wghs", ",", " ", "psQ", ",", " ", "trQ", ",", 
        "tmat"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"tmat", " ", "=", " ", 
        RowBox[{"Developer`ToPackedArray", "[", "kmatrix", "]"}]}], ";", 
       "\t\t\t\t\t\t    ", "\n", "   ", 
       RowBox[{"psmat", " ", "=", " ", 
        RowBox[{"PseudoInverse", "[", "tmat", "]"}]}], ";", " ", "\n", "   ", 
       
       RowBox[{"wghs", " ", "=", " ", 
        RowBox[{"psmat", ".", "onesv"}]}], ";", "\n", "   ", 
       RowBox[{"psQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Positive", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "wghs"}]}], ";", "\n", "   ", 
       RowBox[{"trQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "psQ"}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"trQ", ",", "True"}], "]"}], ",", " ", "wghs", " ", ",", 
         " ", 
         RowBox[{"DetPositiveWeights", "[", 
          RowBox[{"psmat", ",", " ", "wghs"}], "]"}]}], "]"}]}]}], "     ", 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DetPositiveWeights", "[", 
    RowBox[{"kmatrix_List", ",", " ", "wghs_List"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nlsp", ",", "nlvec", ",", "nwghs01", ",", "nwghs02", ",", "negQ"}], 
      "}"}], ",", "\n", "   ", 
     RowBox[{
      RowBox[{"nlsp", " ", "=", " ", 
       RowBox[{"NullSpace", "[", 
        RowBox[{"Transpose", "[", "kmatrix", "]"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"nlvec", " ", "=", " ", 
       RowBox[{"Total", "[", "nlsp", "]"}]}], ";", "\n", "   ", 
      RowBox[{"nwghs01", " ", "=", " ", 
       RowBox[{"wghs", " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "100"}], ")"}], " ", "*", " ", "nlvec"}]}]}], ";",
       "\n", "   ", 
      RowBox[{"nwghs02", " ", "=", " ", 
       RowBox[{"wghs", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "100"}], ")"}], " ", "*", " ", "nlvec"}]}]}], ";",
       "\n", "   ", 
      RowBox[{"negQ", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", 
           RowBox[{"Positive", "[", "#", "]"}]}], " ", "]"}], " ", "&"}], "/@",
         " ", 
        RowBox[{"{", 
         RowBox[{"nwghs01", ",", "nwghs02"}], "}"}]}]}], ";", "\n", "   ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"negQ", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}], ",", " ", 
        "nwghs01", ",", "\n", "                 ", 
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"negQ", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "True"}], "]"}], ",", " ", 
        "nwghs02", ",", "\n", "                 ", "True", ",", " ", "wghs"}],
        "\n", "   ", "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "Code",Expressio\
nUUID->"18748597-c8c3-4bf5-8932-0b74667cf7a9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Alternative", " ", "Function", " ", "to", " ", "check", " ", "a", " ", 
   "Kohlberg", " ", "criterion"}], "*)"}]], "Code",ExpressionUUID->"17ee3079-\
34c3-4bb3-9d51-6c9a5af63172"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BalancedCollectionQ", "[", "args___", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"BalancedCollectionQ", "::", "argerr"}], "]"}], ";", " ", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BalancedCollectionQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", " ", ":", " ", 
      RowBox[{"OptionsPattern", "[", "BalancedCollectionQ", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dimpay", ",", " ", "cc"}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", "\n", "   ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "2"}], ",", 
        " ", "\n", "    ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], " ", "===", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "3"}]}], 
           ")"}], ",", " ", "\n", "      ", 
          RowBox[{
           RowBox[{"cc", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"BalancedCollMainQ", "[", 
               RowBox[{"game", ",", " ", "#", ",", " ", "opts"}], "]"}], " ", 
              "&"}], " ", "/@", " ", "payoff"}]}], ";", " ", 
           RowBox[{"Simplify", "[", "cc", "]"}]}], ",", " ", "\n", "      ", 
          "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "1"}], ",", 
        " ", "\n", "       ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], " ", "===", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           ")"}], ",", " ", "\n", "       ", 
          RowBox[{
           RowBox[{"cc", " ", "=", " ", 
            RowBox[{"BalancedCollMainQ", "[", 
             RowBox[{"game", ",", " ", "payoff", ",", " ", "opts"}], "]"}]}], 
           ";", " ", 
           RowBox[{"Simplify", "[", "cc", "]"}]}], ",", " ", "\n", "       ", 
          "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
        "\n", "    ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"ab08505e-7edf-4c79-8ede-ecf6d90833fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BalancedCollMainQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cde", ",", " ", "acde", ",", " ", "rkQ", ",", " ", "tk", ",", " ", 
       "lprs"}], "}"}], ",", " ", "\n", "   ", 
     RowBox[{
      RowBox[{"cde", " ", "=", " ", 
       RowBox[{"CollectionOfDecreasingExcess", "[", 
        RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cde", ",", " ", 
        RowBox[{"{", "}"}]}], "]"}], ";", "\n", "   ", 
      RowBox[{"acde", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"FlattenAt", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"{", "#", "}"}], ",", " ", "T"}], "]"}], ",", " ", "1"}],
           "]"}], " ", "&"}], " ", "/@", " ", "cde"}]}], ";", "\n", "   ", 
      RowBox[{"rkQ", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"RankConQ", "[", 
          RowBox[{"#", ",", " ", "T"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "acde"}]}], ";", "\n", "   ", 
      RowBox[{"tk", " ", "=", " ", 
       RowBox[{
        RowBox[{"First", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"rkQ", ",", " ", "True"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"lprs", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{"BalancedSystemQ", "[", 
           RowBox[{"#", ",", " ", "T"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
        " ", 
        RowBox[{"Take", "[", 
         RowBox[{"acde", ",", " ", "tk"}], "]"}]}]}], ";", "\n", "   ", 
      RowBox[{"Apply", "[", 
       RowBox[{"And", ",", " ", "lprs"}], "]"}]}]}], "]"}]}], ";"}]], "Code",E\
xpressionUUID->"828efa07-d1b8-4042-a5bf-078e6a342c9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RankConQ", "[", 
     RowBox[{"coll_List", ",", " ", "T_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "zvec", ",", " ", "ovec", ",", " ", "pos", ",", " ", "mat", ",", " ", 
        "rk"}], "}"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"zvec", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"0", " ", "&"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"ovec", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{"1", " ", "&"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ",
          "coll"}]}], ";", "\n", "   ", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ReplacePart", "[", 
           RowBox[{"zvec", ",", " ", "1", ",", " ", "#"}], "]"}], " ", "&"}], 
         " ", "/@", " ", "pos"}]}], ";", "\n", "   ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"mat", ",", " ", "ovec"}], "]"}], ";", "\n", "   ", 
       RowBox[{"rk", " ", "=", " ", 
        RowBox[{"MatrixRank", "[", "mat", "]"}]}], ";", "\n", "   ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"rk", ",", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Nucleolus", "/", "Kernel"}], " ", "section", " ", "ends"}], " ", 
   "*)"}]}]}], "Code",ExpressionUUID->"be122f5a-8b9a-409c-a18a-ea58486ae2d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Kernel", " ", "section", " ", "starts"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SmallestContributionVector", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"SmallestContributionVector", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestContributionVector", "[", "game_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"SmallestContribution", "[", 
        RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
      "T"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestContribution", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"SmallestContribution", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestContribution", "[", 
      RowBox[{"game_", ",", " ", "i_Integer"}], "]"}], ":=", "\n", "  ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], "-", 
          RowBox[{"v", "[", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{"#", ",", "i"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
       RowBox[{"Take", "[", " ", 
        RowBox[{
         RowBox[{"W", "[", "i", "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"W", "[", "i", "]"}], "]"}], "-", "1"}], ")"}]}]}], 
        "]"}]}], "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"683f9a02-b6e5-\
4ebd-8f8c-23a9b0afaf9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Scrb", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Scrb", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Scrb", "[", 
     RowBox[{"game_", ",", " ", "i_Integer"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"UpperPayoff", "[", 
      RowBox[{"game", ",", "i"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Length", "[", "T", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
        RowBox[{"Total", "[", 
         RowBox[{"UpperVector", "[", "game", "]"}], "]"}]}], ")"}]}]}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScrbSolution", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ScrbSolution", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ScrbSolution", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Scrb", "[", 
        RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", ")"}], " ", "/@", 
     " ", "T"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Computing", " ", "the", " ", "Kernel", " ", "by", " ", "a", " ", 
     "convergence", " ", "algorithm", " ", "due", " ", "to", " ", "Maschler", 
     " ", "see", " ", "Stearns", " ", 
     RowBox[{"(", "1968", ")"}], " ", "\n", "or", " ", 
     RowBox[{"U", ".", " ", "Faigle"}]}], ",", " ", 
    RowBox[{
     RowBox[{"W", ".", " ", "Kern"}], " ", "and", " ", 
     RowBox[{"J", ".", " ", "Kuipers"}], " ", 
     RowBox[{"(", "1998", ")"}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindPreKernelSolution", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"FindPreKernelSolution", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindPreKernelSolution", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "FindPreKernelSolution", "]"}]}]}], 
    "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"pay", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
        RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"FindPreKernelSolution", "[", 
       RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
    "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->"7fd0e0b6-cc80-4009-90ee-\
bc46077e28af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindPreKernelSolution", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "FindPreKernelSolution", "]"}]}]}], 
     "]"}], ":=", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "prec", ",", "rattol", ",", "reclim", ",", "setprk", ",", "sil", ",", 
        "res"}], "}"}], ",", "\n", "       ", 
      RowBox[{
       RowBox[{"Off", "[", 
        RowBox[{"$RecursionLimit", "::", "reclim"}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Swichting", " ", "off", " ", "all", " ", "warnings", " ", "that", 
         " ", "reclim", " ", "is", " ", "exceeded"}], " ", "*)"}], "\n", 
       "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"General", "::", "stop"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"MapThread", "::", "mptd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"MapThread", "::", "list"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"ReplaceAll", "::", "reps"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Extract", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "partw"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "pspec"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"ReplacePart", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"prec", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DigitPrecision", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"rattol", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalTol", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"reclim", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SetRecursionLimit", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "       ", 
       RowBox[{"setprk", " ", "=", " ", "Global`PRK"}], ";", "\n", "       ", 
       
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"$RecursionLimit", " ", "=", " ", "reclim"}], "}"}], ",", 
          "\n", "             ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}], 
            ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"KernelSolution", "[", 
               RowBox[{
               "game", ",", "#", ",", "prec", ",", "rattol", ",", "setprk", 
                ",", "sil"}], "]"}], " ", "&"}], "/@", " ", "payoff"}], ",", 
            "\n", "                   ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], 
            ",", " ", 
            RowBox[{"KernelSolution", "[", 
             RowBox[{
             "game", ",", "payoff", ",", "prec", ",", "rattol", ",", "setprk",
               ",", "sil"}], "]"}], ",", "\n", "                   ", "True", 
            ",", " ", 
            RowBox[{"DisplayMessFindKernel", "[", "payoff", "]"}]}], "]"}]}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"$RecursionLimit", "::", "reclim"}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Swichting", " ", "on", " ", "all", " ", "warnings", " ", "that", " ",
          "have", " ", "been", " ", "turned", " ", "off"}], " ", "*)"}], "\n",
        "       ", 
       RowBox[{"On", "[", 
        RowBox[{"General", "::", "stop"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"MapThread", "::", "mptd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"MapThread", "::", "list"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"ReplaceAll", "::", "reps"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Extract", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Part", "::", "partw"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Part", "::", "pspec"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"ReplacePart", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "2"}], ",", 
          " ", "res", ",", "\n", "             ", 
          RowBox[{
           RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "3"}], ",", 
          " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "res", "]"}], " ", "===", " ", "1"}], ",", 
            " ", 
            RowBox[{
             RowBox[{"DisplayMessReclim", "[", "reclim", "]"}], ";", " ", 
             RowBox[{"First", "[", "res", "]"}]}], ",", " ", "res"}], "]"}], 
          ",", " ", "\n", "             ", "True", ",", " ", "res"}], "]"}]}],
        ";", "\n", "       ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "2"}], ",", " ", 
         RowBox[{"Flatten", "[", "res", "]"}], ",", "\n", "             ", 
         RowBox[{
          RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "3"}], ",", " ", 
         RowBox[{"SolutionSelection", "[", 
          RowBox[{"game", ",", "res"}], "]"}], ",", "\n", "             ", 
         RowBox[{
          RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "4"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"SolutionSelection", "[", 
                RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], ",", " ", 
              "#"}], "]"}], " ", "&"}], " ", "/@", " ", "res"}], ";", 
          RowBox[{"Union", "[", 
           RowBox[{"First", "[", 
            RowBox[{"Union", "[", "res", "]"}], "]"}], "]"}]}], ",", "\n", 
         "             ", "True", ",", " ", "res"}], "\n", "       ", 
        "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindKernelSolution", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"FindKernelSolution", "::", "argerr"}], "]"}], ";", "$Failed"}],
     ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindKernelSolution", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "FindKernelSolution", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"pay", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
        RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"FindKernelSolution", "[", 
       RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"a0139972-5661-44f6-97b4-\
3055fd955056"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindKernelSolution", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "FindKernelSolution", "]"}]}]}], "]"}], 
    ":=", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "prec", ",", "rattol", ",", "reclim", ",", "setker", ",", "sil", ",", 
        "res"}], "}"}], ",", "\n", "       ", 
      RowBox[{
       RowBox[{"Off", "[", 
        RowBox[{"$RecursionLimit", "::", "reclim"}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Swichting", " ", "off", " ", "all", " ", "warnings", " ", "that", 
         " ", "reclim", " ", "is", " ", "exceeded"}], " ", "*)"}], "\n", 
       "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"General", "::", "stop"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"MapThread", "::", "mptd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"MapThread", "::", "list"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"ReplaceAll", "::", "reps"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Extract", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "partw"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "pspec"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"Off", "[", 
        RowBox[{"ReplacePart", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"prec", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DigitPrecision", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"rattol", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalTol", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"reclim", " ", "=", "  ", 
        RowBox[{"OptionValue", "[", "SetRecursionLimit", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "       ", 
       RowBox[{"setker", " ", "=", " ", "Global`KER"}], ";", "\n", "       ", 
       
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"$RecursionLimit", " ", "=", " ", "reclim"}], "}"}], ",", 
          "\n", "             ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}], 
            ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"KernelSolution", "[", 
               RowBox[{
               "game", ",", "#", ",", "prec", ",", "rattol", ",", "setker", 
                ",", "sil"}], "]"}], " ", "&"}], "/@", " ", "payoff"}], ",", 
            "\n", "                   ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], 
            ",", " ", 
            RowBox[{"KernelSolution", "[", 
             RowBox[{
             "game", ",", "payoff", ",", "prec", ",", "rattol", ",", "setker",
               ",", "sil"}], "]"}], ",", "\n", "                   ", "True", 
            ",", " ", 
            RowBox[{"DisplayMessFindKernel", "[", "payoff", "]"}]}], "]"}]}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"$RecursionLimit", "::", "reclim"}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Swichting", " ", "on", " ", "all", " ", "warnings", " ", "that", " ",
          "have", " ", "been", " ", "turned", " ", "off"}], " ", "*)"}], "\n",
        "       ", 
       RowBox[{"On", "[", 
        RowBox[{"General", "::", "stop"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"MapThread", "::", "mptd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"MapThread", "::", "list"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"ReplaceAll", "::", "reps"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Extract", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Part", "::", "partw"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Part", "::", "pspec"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "       ", 
       RowBox[{"On", "[", 
        RowBox[{"ReplacePart", "::", "psl"}], "]"}], ";", "\n", "       ", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "2"}], ",", 
          " ", "res", ",", "\n", "             ", 
          RowBox[{
           RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "3"}], ",", 
          " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "res", "]"}], " ", "===", " ", "1"}], ",", 
            " ", 
            RowBox[{
             RowBox[{"DisplayMessReclim", "[", "reclim", "]"}], ";", " ", 
             RowBox[{"First", "[", "res", "]"}]}], ",", " ", "res"}], "]"}], 
          ",", " ", "\n", "             ", 
          RowBox[{
           RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "4"}], ",", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#", "]"}], " ", "===", " ", "1"}], ",", 
              " ", 
              RowBox[{
               RowBox[{"DisplayMessReclim", "[", "reclim", "]"}], ";", " ", 
               RowBox[{"First", "[", "#", "]"}]}], ",", " ", "#"}], "]"}], 
            "&"}], "/@", " ", "res"}], ",", " ", "\n", "             ", 
          "True", ",", " ", "res"}], "]"}]}], ";", "\n", "       ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "2"}], ",", " ", 
         RowBox[{"Flatten", "[", "res", "]"}], ",", "\n", "             ", 
         RowBox[{
          RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "3"}], ",", " ", 
         RowBox[{"SolutionSelection", "[", 
          RowBox[{"game", ",", "res"}], "]"}], ",", "\n", "             ", 
         RowBox[{
          RowBox[{"Depth", "[", "res", "]"}], " ", "==", " ", "4"}], ",", " ", 
         RowBox[{
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SolutionSelection", "[", 
                 RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], ",", " ", 
               "#"}], "]"}], " ", "&"}], " ", "/@", " ", "res"}]}], ";", 
          RowBox[{"Union", "[", 
           RowBox[{"First", "[", 
            RowBox[{"Union", "[", "res", "]"}], "]"}], "]"}]}], ",", "\n", 
         "             ", "True", ",", " ", "res"}], "\n", "       ", 
        "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolutionSelection", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bool", ",", "pos", ",", "lsg"}], "}"}], ",", "\n", 
      "         ", 
      RowBox[{
       RowBox[{"bool", " ", "=", " ", 
        RowBox[{"KernelImputationListQ", "[", 
         RowBox[{"game", ",", "payoff"}], "]"}]}], ";", "\n", "         ", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"bool", ",", "True"}], "]"}]}], ";", "\n", "         ", 
       RowBox[{"lsg", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", "payoff", 
          ",", 
          RowBox[{"Extract", "[", 
           RowBox[{"payoff", ",", "pos"}], "]"}]}], "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "lsg", "]"}], "===", "1"}], ",", 
         RowBox[{"Flatten", "[", "lsg", "]"}], ",", "True", ",", "lsg"}], 
        "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelSolution", "[", 
     RowBox[{
     "game_", ",", " ", "payoff_List", ",", " ", "prec_", ",", "rattol_", ",",
       "setk_", ",", "silent_", ",", 
      RowBox[{"payold_", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", " ", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"payvec", ",", " ", 
        RowBox[{"pold", "=", "payold"}], ",", "approx", ",", "ratnum"}], 
       "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"payvec", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"Global`PRK", ",", "setk"}], "]"}], ",", 
          RowBox[{"ConvergenceToKernel", "[", 
           RowBox[{"game", ",", " ", "payoff"}], "]"}], ",", 
          RowBox[{"ConvergenceToKernel2", "[", 
           RowBox[{"game", ",", " ", "payoff"}], "]"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"pold", " ", "=", " ", "payoff"}], ";", "\n", "    ", 
       RowBox[{"approx", " ", "=", " ", 
        RowBox[{"N", "[", 
         RowBox[{"payvec", ",", " ", "prec"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"silent", ",", "False"}], "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ConvergingQ: \>\"", ",", 
           RowBox[{"N", "[", 
            RowBox[{"pold", ",", "prec"}], "]"}]}], "]"}], ",", "True", ",", 
         "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"ratnum", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{"approx", ",", "rattol"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "payvec", "]"}], "<=", "3"}], ",", " ", "\n", 
         "      ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"Global`PRK", ",", "setk"}], "]"}], ",", " ", "\n", 
           "            ", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Apply", "[", 
               RowBox[{"Or", ",", 
                RowBox[{"PreKernelQ", "[", 
                 RowBox[{"game", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"pold", ",", "ratnum"}], "}"}]}], "]"}]}], "]"}], 
              " ", "===", " ", "False"}], ",", " ", "\n", 
             "                  ", 
             RowBox[{"KernelSolution", "[", 
              RowBox[{
              "game", ",", " ", "payvec", ",", " ", "prec", ",", " ", 
               "rattol", ",", "setk", ",", "silent", ",", "ratnum"}], "]"}], 
             ",", "\n", "           ", "True", ",", " ", 
             RowBox[{"Union", "[", 
              RowBox[{"{", 
               RowBox[{"payvec", ",", "ratnum"}], "}"}], "]"}]}], "]"}], ",", 
           "\n", "            ", 
           RowBox[{"SameQ", "[", 
            RowBox[{"Global`KER", ",", "setk"}], "]"}], ",", " ", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Apply", "[", 
               RowBox[{"Or", ",", 
                RowBox[{"KernelImputationListQ", "[", 
                 RowBox[{"game", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"pold", ",", "ratnum"}], "}"}]}], "]"}]}], "]"}], 
              " ", "===", " ", "False"}], ",", " ", "\n", 
             "                  ", 
             RowBox[{"KernelSolution", "[", 
              RowBox[{
              "game", ",", " ", "payvec", ",", " ", "prec", ",", " ", 
               "rattol", ",", "setk", ",", "silent", ",", "ratnum"}], "]"}], 
             ",", "\n", "           ", "True", ",", " ", 
             RowBox[{"Union", "[", 
              RowBox[{"{", 
               RowBox[{"payvec", ",", "ratnum"}], "}"}], "]"}]}], "]"}], ",", 
           "True", ",", " ", 
           RowBox[{"Union", "[", 
            RowBox[{"{", 
             RowBox[{"payvec", ",", "ratnum"}], "}"}], "]"}]}], "]"}], ",", 
         "\n", "      ", 
         RowBox[{"{", 
          RowBox[{"pold", ",", "1"}], "}"}]}], "\n", "     ", "]"}]}]}], "\n",
      "    ", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", "\n", "   ", 
   RowBox[{
    RowBox[{
    "Computing", " ", "the", " ", "Kernel", " ", "by", " ", "a", " ", 
     "convergence", " ", "algorithm", " ", "due", " ", "to", " ", "Stearns", 
     " ", 
     RowBox[{"(", "1968", ")"}]}], ",", " ", 
    RowBox[{
    "see", " ", "also", " ", "Algorithm", " ", "8.7", ".3", "\n", "   ", "of",
      " ", "Meinhardt", " ", 
     RowBox[{"(", "2013", ")"}]}]}], " ", "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvergenceToKernel2", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], " ", ":=", "\n", "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "survec", ",", "rsrv", ",", "surpl", ",", "stdel", ",", "pairs", ",", 
        "dps", ",", "prij", ",", "vc", ",", "rlp", ",", "nip", ",", "mn", ",",
         "trQ", ",", "dl", ",", "delta", ",", "idm", ",", "slp", ",", "sps", 
        ",", "pij"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"survec", " ", "=", " ", 
        RowBox[{"MaxSurpluses", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"rsrv", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "survec"}]}], ";", "\n", "    ", 
       RowBox[{"survec", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"survec", ",", "rsrv"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"surpl", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"List", " ", "->", " ", "Subtract"}]}], "]"}], " ", "&"}],
          " ", "/@", " ", "survec"}]}], ";", "\n", "    ", 
       RowBox[{"stdel", "=", 
        RowBox[{"Min", "[", "surpl", "]"}]}], ";", "\n", "    ", 
       RowBox[{"pairs", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"listIJ", "[", "T", "]"}], ",", 
             RowBox[{"listJI", "[", "T", "]"}]}], "}"}], "]"}], ",", "2"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"dps", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"surpl", ",", "stdel"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"prij", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"pairs", ",", "dps"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"vc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], "/@", " ", "T"}]}], ";", 
       "\n", "    ", 
       RowBox[{"rlp", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", 
          RowBox[{"{", 
           RowBox[{"vc", ",", "payoff"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"nip", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", "#", "]"}], " ", "-", " ", 
             RowBox[{"v", "[", 
              RowBox[{"{", "#", "}"}], "]"}]}], ")"}], " ", "&"}], "/@", " ", 
          "T"}], " ", "/.", " ", "rlp"}]}], ";", "\n", "    ", 
       RowBox[{"mn", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Negative", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         "nip"}]}], ";", "\n", "    ", 
       RowBox[{"trQ", "=", 
        RowBox[{"Apply", "[", 
         RowBox[{"Or", ",", "mn"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"trQ", "==", "True"}], ",", "\n", "            ", 
         RowBox[{
          RowBox[{"slp", "=", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"mn", ",", "True"}], "]"}], " ", "//", " ", 
            "Flatten"}]}], ";", "\n", "            ", 
          RowBox[{"sps", "=", 
           RowBox[{"Cases", "[", 
            RowBox[{"pairs", ",", 
             RowBox[{"{", 
              RowBox[{"___", ",", 
               RowBox[{"slp", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "___"}], "}"}]}], 
            "]"}]}], ";", "\n", "            ", 
          RowBox[{"pij", "=", 
           RowBox[{"Intersection", "[", 
            RowBox[{"sps", ",", "prij"}], "]"}]}], ";", "\n", "            ", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"pij", ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{"pij", "=", 
             RowBox[{"Last", "[", "prij", "]"}]}], ",", 
            RowBox[{"pij", "=", 
             RowBox[{"Last", "[", "pij", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"pij", "=", 
          RowBox[{"Last", "[", "prij", "]"}]}]}], "]"}], ";", "\n", "    ", 
       RowBox[{"dl", "=", 
        RowBox[{"Last", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nip", "[", 
            RowBox[{"[", "#", "]"}], "]"}], " ", "&"}], "/@", " ", "pij"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"delta", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Less", "[", 
           RowBox[{"dl", ",", 
            RowBox[{"stdel", "/", "2"}]}], "]"}], ",", "dl", ",", 
          RowBox[{"stdel", "/", "2"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"idm", " ", "=", " ", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "T", "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"payoff", " ", "+", " ", 
        RowBox[{"delta", "*", 
         RowBox[{"Extract", "[", 
          RowBox[{"idm", ",", " ", 
           RowBox[{"pij", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", "-", " ", 
        RowBox[{"delta", "*", 
         RowBox[{"Extract", "[", 
          RowBox[{"idm", ",", " ", 
           RowBox[{"pij", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}]}]}], "\t   ", "\n", 
     "    ", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Computing", " ", "the", " ", 
     RowBox[{"(", 
      RowBox[{"Pre", "-"}], ")"}], "Kernel", " ", "by", " ", "a", " ", 
     "convergence", " ", "algorithm", " ", "due", " ", "to", " ", 
     RowBox[{"U", ".", " ", "Faigle"}]}], ",", " ", 
    RowBox[{
     RowBox[{"W", ".", " ", "Kern"}], " ", "and", " ", 
     RowBox[{"J", ".", " ", "Kuipers"}], " ", 
     RowBox[{"(", "1998", ")"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConvergenceToKernel", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", "\n", 
    "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "survec", ",", " ", "surpl", ",", " ", "deltavec", ",", " ", "soldel", 
        ",", " ", "maxdel", ",", " ", "posmdel", ",", " ", "minpos", ",", " ",
         "solvec", ",", "\n", "      ", "plpair", ",", " ", "extr", ",", " ", 
        "trfij", ",", " ", "numval", ",", " ", "travec", ",", " ", "nwpay", 
        ",", " ", "mp"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"survec", " ", "=", " ", 
        RowBox[{"MaxSurpluses", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"surpl", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"List", " ", "->", " ", "Subtract"}]}], "]"}], " ", "&"}],
          " ", "/@", " ", "survec"}]}], ";", "\n", "    ", 
       RowBox[{"deltavec", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", " ", "2"}], " ", "Global`\[Alpha]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "surpl", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"soldel", " ", "=", " ", "\n", "      ", 
        RowBox[{"MapThread", "[", "\n", "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"#1", " ", "==", " ", "#2"}], ",", " ", 
               "Global`\[Alpha]"}], "]"}], "]"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"surpl", ",", " ", "\n", "          ", "deltavec"}], 
           "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"solvec", " ", "=", " ", 
        RowBox[{"Global`\[Alpha]", " ", "/.", " ", "soldel"}]}], ";", "\n", 
       "    ", 
       RowBox[{"maxdel", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "solvec", "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"posmdel", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Abs", "[", "solvec", "]"}], ",", " ", "maxdel"}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{"minpos", " ", "=", " ", 
        RowBox[{"Min", "[", "posmdel", "]"}]}], ";", "\n", "    ", 
       RowBox[{"plpair", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"listIJ", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"extr", " ", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"plpair", ",", " ", "minpos"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"trfij", " ", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"payoff", ",", " ", 
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", " ", "extr"}], "]"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"numval", " ", "=", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", "posmdel", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"travec", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"solvec", "[", 
            RowBox[{"[", "numval", "]"}], "]"}]}], ",", " ", 
          RowBox[{"solvec", "[", 
           RowBox[{"[", "numval", "]"}], "]"}]}], "}"}]}], ";", "\n", "    ", 
       
       RowBox[{"nwpay", " ", "=", " ", 
        RowBox[{"trfij", " ", "+", " ", "travec"}]}], ";", "\n", "    ", 
       RowBox[{"mp", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{"nwpay", ",", "extr"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"Rp", "[", 
        RowBox[{
         RowBox[{"Rp", "[", 
          RowBox[{"payoff", ",", 
           RowBox[{"mp", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"mp", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"mp", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"mp", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], "\n", "    ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rp", "[", 
    RowBox[{"vec_", ",", " ", "nwcom_", ",", " ", "posi_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"vec", ",", " ", "nwcom", ",", " ", "posi"}], "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"81ccedda-e6b1-4344-8c95-71d3e076c051"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Auxiliary", " ", "functions", " ", "to", " ", "construct", " ", "the", " ", 
   RowBox[{"(", 
    RowBox[{"n", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "/", "2"}]}], ")"}], " ", "initial", 
   " ", "LPs", " ", "for", " ", 
   RowBox[{"KernelCalculation", "[", "]"}]}], " ", "*)"}]], "Code",ExpressionU\
UID->"7bde080f-dc88-42d4-a0ec-5f38f4aa7e9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DelRat", "[", 
     RowBox[{
     "i_Integer", ",", " ", "j_Integer", ",", " ", "Global`\[Delta]_", ",", 
      " ", 
      RowBox[{"eps_", ":", "0"}]}], "]"}], " ", ":=", " ", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "#", "]"}], " ", "+", " ", "Global`\[Delta]"}], " ",
        ">=", " ", 
       RowBox[{"v", "[", "#", "]"}]}], "  ", "&"}], " ", "/@", " ", 
     RowBox[{"TIJsets", "[", 
      RowBox[{"i", ",", " ", "j"}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TransferConstraints", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"TransferConstraints", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TransferConstraints", "[", 
    RowBox[{"game_", ",", " ", "i_Integer", ",", " ", "j_Integer", ",", " ", 
     RowBox[{"eps_", ":", "0"}]}], "]"}], " ", ":=", " ", "\n", "    ", 
   RowBox[{
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Core", "[", "game", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DelRat", "[", 
         RowBox[{"i", ",", " ", "j", ",", " ", 
          RowBox[{"-", "Global`\[Delta]"}], ",", " ", "eps"}], "]"}], ",", 
        " ", "\n", "           ", 
        RowBox[{"DelRat", "[", 
         RowBox[{"j", ",", " ", "i", ",", " ", 
          RowBox[{"-", "Global`\[Delta]"}], ",", " ", "eps"}], "]"}], ",", 
        " ", "\n", "           ", "delconst"}], "}"}]}], "]"}], " ", "//", 
    " ", "Flatten"}]}], ";"}]}], "Code",ExpressionUUID->"6a8ba6a6-2f8c-40d2-\
a152-5efb910c62cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DeltaLP", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"DeltaLP", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DeltaLP", "[", 
     RowBox[{
     "game_", ",", " ", "i_Integer", ",", " ", "j_Integer", ",", " ", 
      RowBox[{"eps_", ":", "0"}], ",", " ", 
      RowBox[{"ops", ":", 
       RowBox[{"OptionsPattern", "[", "DeltaLP", "]"}]}]}], "]"}], " ", ":=", 
    "\n", "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "changesolver", "}"}], ",", "\n", "             ", 
      RowBox[{
       RowBox[{"changesolver", "=", 
        RowBox[{"OptionValue", "[", "CallMaximize", "]"}]}], ";", "\n", 
       "             ", 
       RowBox[{"DeltaLP", "[", 
        RowBox[{
        "game", ",", " ", "i", ",", " ", "j", ",", " ", "eps", ",", 
         "changesolver"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DeltaLP", "[", 
     RowBox[{
     "game_", ",", " ", "i_Integer", ",", " ", "j_Integer", ",", " ", 
      RowBox[{"eps_", ":", "0"}], ",", " ", 
      RowBox[{"changesolver_", ":", "False"}]}], "]"}], " ", ":=", "\n", 
    "   ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "        ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"changesolver", "==", "False"}], ",", " ", "\n", 
        "                             ", 
        RowBox[{"ConstrainedMax", "[", 
         RowBox[{"Global`\[Delta]", ",", " ", 
          RowBox[{"Union", "[", 
           RowBox[{"TransferConstraints", "[", 
            RowBox[{"game", ",", " ", "i", ",", " ", "j", ",", " ", "eps"}], 
            "]"}], "]"}], ",", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"x", " ", "/@", " ", "T"}], ",", " ", 
            RowBox[{"{", "Global`\[Delta]", "}"}]}], "]"}]}], "]"}], ",", 
        "\n", "              ", "True", ",", " ", "\n", "                  ", 
        
        RowBox[{"Chop", "[", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"NMaximize", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"TransferConstraints", "[", 
                RowBox[{
                "game", ",", " ", "i", ",", " ", "j", ",", " ", "eps"}], 
                "]"}], "]"}], ",", "Global`\[Delta]"}], "]"}], ",", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"x", " ", "/@", " ", "T"}], ",", " ", 
              RowBox[{"{", "Global`\[Delta]", "}"}]}], "]"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"delconst", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Global`\[Delta]", " ", ">=", "  ", "0"}], "}"}]}], 
  ";"}]}], "Code",ExpressionUUID->"51b655ff-b7d4-4727-a745-ec4c980e0e5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pay", " ", "=", " ", 
    RowBox[{"x", " ", "/@", " ", "T"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Transfer", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Transfer", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transfer", "[", 
     RowBox[{
     "y_List", ",", " ", "T_List", ",", " ", "d_", ",", " ", "i_Integer", ",",
       " ", "j_Integer"}], "]"}], " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "idmat", "}"}], ",", " ", "\n", "    ", 
      RowBox[{
       RowBox[{"idmat", " ", "=", " ", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "T", "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", " ", "/@", " ", "T"}], " ", "/.", " ", 
          RowBox[{"Payoff", "[", "y", "]"}]}], ")"}], " ", "-", " ", 
        RowBox[{"d", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"idmat", ",", " ", "i"}], "]"}]}], " ", "+", " ", 
        RowBox[{"d", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"idmat", ",", " ", "j"}], "]"}]}]}]}]}], "\n", "   ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxDeltaij", "[", 
     RowBox[{"game_", ",", " ", 
      RowBox[{"eps_", ":", "0"}], ",", "changesolver_"}], "]"}], " ", ":=", 
    " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"anf", " ", "=", " ", "T"}], ",", " ", "rest", ",", " ", "pi",
         ",", " ", "pj", ",", " ", 
        RowBox[{"erg", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", " ", "\n", "    ", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "anf", "]"}], " ", ">", " ", "1"}], ",", 
         "\n", "      ", 
         RowBox[{
          RowBox[{"pi", " ", "=", " ", 
           RowBox[{"First", "[", "anf", "]"}]}], ";", "\n", "      ", 
          RowBox[{"rest", " ", "=", " ", 
           RowBox[{"Drop", "[", 
            RowBox[{"anf", ",", " ", "1"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "rest", "]"}], " ", ">", " ", "0"}], ",", 
            "\n", "        ", 
            RowBox[{
             RowBox[{"pj", " ", "=", " ", 
              RowBox[{"First", "[", "rest", "]"}]}], ";", "\n", "        ", 
             RowBox[{"erg", " ", "=", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"erg", ",", " ", 
                RowBox[{"DeltaLP", "[", 
                 RowBox[{
                 "game", ",", " ", "pi", ",", " ", "pj", ",", " ", "eps", ",",
                   "changesolver"}], "]"}]}], "]"}]}], ";", "\n", "        ", 
             
             RowBox[{"rest", " ", "=", " ", 
              RowBox[{"Drop", "[", 
               RowBox[{"rest", ",", " ", "1"}], "]"}]}], ";"}]}], "\n", 
           "        ", "]"}], ";", "\n", "      ", 
          RowBox[{"anf", " ", "=", " ", 
           RowBox[{"Drop", "[", 
            RowBox[{"anf", ",", " ", "1"}], "]"}]}], ";"}]}], "]"}], ";", 
       "\n", "    ", 
       RowBox[{"Return", "[", "erg", "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TijLoop", "[", "game_", "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"anf", " ", "=", " ", "T"}], ",", " ", "rest", ",", " ", "pi", 
       ",", " ", "pj", ",", " ", 
       RowBox[{"menge", " ", "=", " ", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", " ", "\n", "    ", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "anf", "]"}], " ", ">", " ", "1"}], ",", "\n",
         "      ", 
        RowBox[{
         RowBox[{"pi", " ", "=", " ", 
          RowBox[{"First", "[", "anf", "]"}]}], ";", "\n", "      ", 
         RowBox[{"rest", " ", "=", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"anf", ",", " ", "1"}], "]"}]}], ";", "\n", "      ", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "rest", "]"}], " ", ">", " ", "0"}], ",", 
           "\n", "        ", 
           RowBox[{
            RowBox[{"pj", " ", "=", " ", 
             RowBox[{"First", "[", "rest", "]"}]}], ";", "\n", "        ", 
            RowBox[{"menge", " ", "=", " ", 
             RowBox[{"Flatten", "[", "\n", "        ", 
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{"menge", ",", " ", 
                 RowBox[{"Union", "[", 
                  RowBox[{
                   RowBox[{"TIJsets", "[", 
                    RowBox[{"pi", ",", " ", "pj"}], "]"}], ",", " ", 
                   RowBox[{"TIJsets", "[", 
                    RowBox[{"pj", ",", " ", "pi"}], "]"}]}], "]"}]}], "]"}], 
               ",", " ", "0"}], "]"}]}], ";", "\n", "        ", 
            RowBox[{"rest", " ", "=", " ", 
             RowBox[{"Drop", "[", 
              RowBox[{"rest", ",", " ", "1"}], "]"}]}], ";"}]}], "\n", 
          "        ", "]"}], ";", "\n", "      ", 
         RowBox[{"anf", " ", "=", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"anf", ",", " ", "1"}], "]"}]}], ";"}]}], "]"}], ";", "\n",
       "    ", 
      RowBox[{"Return", "[", "menge", "]"}]}]}], "]"}]}], ";"}]}], "Code",Expr\
essionUUID->"a1c69bbf-1a76-43c6-97d6-426b59aa5142"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NewIneq", "[", 
     RowBox[{"ineq_", ",", " ", "param_", ",", " ", "liste_"}], "]"}], " ", ":=",
     " ", "\n", "  ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ineq", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lhs_", " ", "<=", " ", "rhs_"}], " ", ":>", " ", "\n", 
         "          ", 
         RowBox[{
          RowBox[{"lhs", " ", "<=", " ", 
           RowBox[{"rhs", " ", "+", " ", 
            RowBox[{"param", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], " ", "/;", " ", 
          RowBox[{"rhs", " ", "==", " ", 
           RowBox[{"Min", "[", "liste", "]"}]}]}]}], "}"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "param", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SortConstraints", "[", 
    RowBox[{"ineq_", ",", " ", "para_"}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pospattern", ",", " ", "rg", ",", "extpos"}], "}"}], ",", " ", 
     "\n", "    ", 
     RowBox[{
      RowBox[{"pospattern", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"ineq", ",", " ", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"ineq", ",", " ", 
            RowBox[{"_.", " ", "+", " ", "para"}], ",", " ", 
            RowBox[{"{", "2", "}"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"rg", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "pospattern", "]"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"extpos", " ", "=", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"pospattern", "[", 
            RowBox[{"[", 
             RowBox[{"#", ",", " ", "1"}], "]"}], "]"}], " ", "&"}], " ", "/@",
           " ", "rg"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"Extract", "[", 
       RowBox[{"ineq", ",", " ", "extpos"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"45600b05-577b-4da2-b712-5c5e2834dd17"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FeasibleConstraints", "[", 
     RowBox[{"ineq_", ",", " ", "delta_", ",", "changesolver_"}], "]"}], " ", 
    ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newungl", ",", 
        RowBox[{"delexc", " ", "=", " ", 
         RowBox[{"Sort", "[", "delta", "]"}]}], ",", " ", "creatpara", ",", 
        " ", "redpara", ",", " ", "paramet", ",", " ", "nebenbed", ",", " ", 
        "zf", ",", " ", "fineq", ",", " ", 
        RowBox[{"feasbineq", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "allineq", ",", " ", "varb", ",", 
        " ", "sol", ",", " ", "resl", ",", " ", "setofineq"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"newungl", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{"ineq", ",", " ", 
          RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"creatpara", " ", "=", " ", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "#", "]"}], " ", "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "delexc", "]"}], ",", 
            RowBox[{"Length", "[", "newungl", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"redpara", " ", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"Flatten", "[", "creatpara", "]"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "delexc", "]"}], " ", ">", " ", "0"}], ",", 
         " ", "\n", "      ", 
         RowBox[{
          RowBox[{"paramet", " ", "=", " ", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"creatpara", ",", " ", "1"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "      ", 
          RowBox[{"nebenbed", " ", "=", " ", 
           RowBox[{"NewIneq", "[", 
            RowBox[{"newungl", ",", " ", "paramet", ",", " ", "delexc"}], 
            "]"}]}], ";", "\n", "      ", 
          RowBox[{"fineq", " ", "=", " ", 
           RowBox[{"SortConstraints", "[", 
            RowBox[{"nebenbed", ",", " ", 
             RowBox[{"paramet", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "      ", 
          
          RowBox[{"feasbineq", " ", "=", " ", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"feasbineq", ",", " ", "fineq"}], "]"}], " ", "//", " ", 
            "Flatten"}]}], ";", "\n", "      ", 
          RowBox[{"creatpara", " ", "=", " ", 
           RowBox[{"Drop", "[", 
            RowBox[{"creatpara", ",", " ", "1"}], "]"}]}], ";", "\n", 
          "      ", 
          RowBox[{"delexc", " ", "=", " ", 
           RowBox[{"Drop", "[", 
            RowBox[{"delexc", ",", " ", "1"}], "]"}]}], ";"}]}], "\n", 
        "      ", "]"}], ";", "\n", "    ", 
       RowBox[{"allineq", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Append", "[", 
            RowBox[{"feasbineq", ",", " ", 
             RowBox[{"Last", "[", "ineq", "]"}]}], "]"}], "]"}], ",", 
          "0.01"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"varb", " ", "=", " ", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"x", " ", "/@", " ", "T"}], ",", " ", "redpara"}], "]"}], 
         " ", "//", " ", "Flatten"}]}], ";", "\n", "    ", 
       RowBox[{"zf", " ", "=", " ", 
        RowBox[{"Total", "[", "redpara", "]"}]}], ";", "\n", "    ", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"changesolver", " ", "==", " ", "False"}], ",", " ", 
          RowBox[{"ConstrainedMin", "[", 
           RowBox[{"zf", ",", " ", "allineq", ",", " ", "varb"}], "]"}], ",", 
          "\n", "                ", "True", ",", " ", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"NMinimize", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{"allineq", ",", "zf"}], "]"}], ",", " ", "varb"}], 
            "]"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"resl", " ", "=", " ", 
        RowBox[{
         RowBox[{"x", " ", "/@", " ", "T"}], " ", "/.", " ", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "    ", 
       RowBox[{"setofineq", " ", "=", " ", 
        RowBox[{"allineq", " ", "/.", " ", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"Length", "[", "redpara", "]"}]}]}], "]"}]}]}], ";", "\n",
        "    ", 
       RowBox[{"{", 
        RowBox[{"resl", ",", " ", "setofineq"}], "}"}]}]}], "\n", " ", 
     "]"}]}], ";"}], "\n", "\n"}]], "Code",ExpressionUUID->"3f7cec5b-f779-\
434e-ad47-012d01f88051"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NewConstraints", "[", 
    RowBox[{"sets_", ",", " ", "constraints_", ",", " ", "del_", ",", " ", 
     RowBox[{"eps_", ":", "0"}]}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tijsys", ",", " ", "delta", ",", " ", 
       RowBox[{"dij", " ", "=", " ", "del"}], ",", " ", 
       RowBox[{"mengsys", " ", "=", " ", "sets"}], ",", " ", "exccon", ",", 
       " ", 
       RowBox[{"const", " ", "=", " ", "constraints"}]}], "}"}], ",", "\n", 
     "    ", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dij", "]"}], " ", ">", " ", "0"}], ",", "\n",
         "      ", 
        RowBox[{
         RowBox[{"delta", " ", "=", " ", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"dij", ",", " ", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "      ", 
         RowBox[{"Tijsys", " ", "=", " ", 
          RowBox[{"Take", "[", 
           RowBox[{"mengsys", ",", " ", "1"}], "]"}]}], ";", "\n", "      ", 
         RowBox[{"exccon", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
              RowBox[{"x", "[", "#", "]"}]}], " ", "<=", " ", 
             RowBox[{"-", "delta"}]}], " ", "&"}], " ", "/@", " ", 
           RowBox[{"Tijsys", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\n", "      ", 
         RowBox[{"const", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"const", ",", " ", "exccon"}], "]"}]}], ";", "\n", 
         "      ", 
         RowBox[{"dij", " ", "=", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"dij", ",", " ", "1"}], "]"}]}], ";", "\n", "      ", 
         RowBox[{"mengsys", " ", "=", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"mengsys", ",", " ", "1"}], "]"}]}]}]}], "]"}], ";", " ", 
      "\n", "      ", 
      RowBox[{"Return", "[", "const", "]"}]}]}], "]"}]}], ";"}]], "Code",Expre\
ssionUUID->"5947cb3b-04e6-49d2-b3fb-f0af7234f0e4"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Auxiliary", " ", "functions", " ", "to", " ", "verify", " ", 
   "balancedness", " ", "of", " ", "the", " ", "excess", " ", "vector"}], " ",
   "*)"}]], "Code",ExpressionUUID->"301c66d1-4916-4b3d-835e-b607c7a6bd27"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CheckBalancedness", "[", 
    RowBox[{"game_", ",", " ", "pay_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", " ", "balancedQ", "}"}], ",", "\n", "    ", 
     RowBox[{"balancedQ", " ", "=", " ", 
      RowBox[{
       RowBox[{"MaxExcessBalanced", "[", 
        RowBox[{"newgame", ",", " ", "pay"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",Expre\
ssionUUID->"e9445ad6-ec0c-4c34-a3c1-d87f20a112f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AssgPay", "[", "payoff_List", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "vars", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"vars", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
       ";", "\n", "    ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{"vars", ",", " ", "payoff"}], "}"}]}], "]"}]}]}], "\n", 
     "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxExcess", "[", 
    RowBox[{"mgij_List", ",", " ", "asspay_List"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxExc", "[", 
      RowBox[{"#", ",", " ", "asspay"}], "]"}], " ", "&"}], " ", "/@", " ", 
    "mgij"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinExcess", "[", 
     RowBox[{"mgij_List", ",", " ", "asspay_List"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"MinExc", "[", 
       RowBox[{"#", ",", " ", "asspay"}], "]"}], " ", "&"}], " ", "/@", " ", 
     "mgij"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxExc", "[", 
    RowBox[{"mg_List", ",", " ", "asspay_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
          RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
       "mg"}], ",", " ", "asspay"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinExc", "[", 
     RowBox[{"mg_List", ",", " ", "asspay_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"ReplaceAll", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
           RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
        "mg"}], ",", " ", "asspay"}], "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConstPlj", "[", 
     RowBox[{"mngij_List", ",", " ", "asspay_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"IndCont", "[", 
        RowBox[{"#", ",", " ", "asspay"}], "]"}], " ", "&"}], " ", "/@", " ", 
      "mngij"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IndCont", "[", 
     RowBox[{"plj_List", ",", " ", "asspay_List"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "#", "]"}], " ", "-", " ", 
         RowBox[{"v", "[", 
          RowBox[{"{", "#", "}"}], "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
      RowBox[{"{", 
       RowBox[{"Last", "[", "plj", "]"}], "}"}]}], " ", "/.", " ", 
     "asspay"}]}], ";"}], "   "}]}], "Code",ExpressionUUID->"91b55c2c-472a-\
4e45-8867-ea1ead671c0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MaxSurplus", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MaxSurplus", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxSurplus", "[", 
    RowBox[{
    "game_", ",", " ", "pi_", ",", " ", "pj_", ",", " ", "payoff_List"}], 
    "]"}], " ", ":=", " ", "\n", "    ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "payass", "}"}], ",", " ", "\n", "      ", 
     RowBox[{
      RowBox[{"payass", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "payoff", "]"}], "==", "3"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"Rule", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", " ", "/@", " ", "T"}], ",", "#"}], "}"}]}], "]"}],
            "&"}], " ", "/@", " ", "payoff"}], ",", " ", "\n", 
         "                     ", 
         RowBox[{
          RowBox[{"Depth", "[", "payoff", "]"}], "==", "2"}], ",", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "/@", " ", "T"}], ",", "payoff"}], "}"}]}], 
          "]"}], ",", "\n", "                     ", "True", ",", " ", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<The input 'payoff' is not a list.\>\"", "]"}], 
          ";", 
          RowBox[{"Return", "[", "]"}]}]}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", "payass", "]"}], " ", "==", " ", "5"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                 RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@",
               " ", 
              RowBox[{"TIJsets", "[", 
               RowBox[{"pi", ",", "pj"}], "]"}]}], ",", "#"}], "]"}], "]"}], 
          " ", "&"}], "/@", " ", "payass"}], ",", "\n", "            ", 
        RowBox[{
         RowBox[{"Depth", "[", "payass", "]"}], " ", "==", " ", "4"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
               RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", 
            " ", 
            RowBox[{"TIJsets", "[", 
             RowBox[{"pi", ",", "pj"}], "]"}]}], ",", "payass"}], "]"}], 
         "]"}], ",", "\n", "            ", "True", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Wrong data format.\>\"", "]"}], ";", 
         RowBox[{"Return", "[", "]"}]}]}], "]"}]}]}], "\n", "      ", "]"}]}],
   ";"}]}], "Code",ExpressionUUID->"c1c17fa7-89be-40a2-b294-103ffe73a5cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModMaxSurplus", "[", 
     RowBox[{"game_", ",", " ", "sij_List", ",", " ", "payass_List"}], "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "          ", 
      RowBox[{"Max", "[", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
             RowBox[{"x", "[", "#", "]"}]}], " ", "&"}], ",", " ", "sij"}], 
          "]"}], ",", "payass"}], "]"}], "]"}]}], "\n", "      ", "]"}]}], 
   ";"}], "\n"}]], "Code",ExpressionUUID->"11b7ed92-5966-4cab-be3b-\
9bb66d7f45be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AntiSurplus", "[", 
    RowBox[{
    "game_", ",", " ", "pi_", ",", " ", "pj_", ",", " ", "payoff_List"}], 
    "]"}], " ", ":=", " ", "\n", "    ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "payass", "}"}], ",", " ", "\n", "      ", 
     RowBox[{
      RowBox[{"payass", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "payoff", "]"}], "==", "3"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"Rule", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", " ", "/@", " ", "T"}], ",", "#"}], "}"}]}], "]"}],
            "&"}], " ", "/@", " ", "payoff"}], ",", " ", "\n", 
         "                     ", 
         RowBox[{
          RowBox[{"Depth", "[", "payoff", "]"}], "==", "2"}], ",", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "/@", " ", "T"}], ",", "payoff"}], "}"}]}], 
          "]"}], ",", "\n", "                     ", "True", ",", " ", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<The input 'payoff' is not a list.\>\"", "]"}], 
          ";", 
          RowBox[{"Return", "[", "]"}]}]}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", "payass", "]"}], " ", "==", " ", "5"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                 RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@",
               " ", 
              RowBox[{"TIJsets", "[", 
               RowBox[{"pi", ",", "pj"}], "]"}]}], ",", "#"}], "]"}], "]"}], 
          " ", "&"}], "/@", " ", "payass"}], ",", "\n", "            ", 
        RowBox[{
         RowBox[{"Depth", "[", "payass", "]"}], " ", "==", " ", "4"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
               RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", 
            " ", 
            RowBox[{"TIJsets", "[", 
             RowBox[{"pi", ",", "pj"}], "]"}]}], ",", "payass"}], "]"}], 
         "]"}], ",", "\n", "            ", "True", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Wrong data format.\>\"", "]"}], ";", 
         RowBox[{"Return", "[", "]"}]}]}], "]"}]}]}], "\n", "      ", "]"}]}],
   ";"}]], "Code",ExpressionUUID->"7666034b-e20c-4a3a-a3e3-2478bc0da448"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModAntiSurplus", "[", 
    RowBox[{"game_", ",", " ", "sij_List", ",", " ", "payass_List"}], "]"}], 
   " ", ":=", " ", "\n", "\t", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "          ", 
     RowBox[{"Min", "[", 
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
            RowBox[{"x", "[", "#", "]"}]}], " ", "&"}], ",", " ", "sij"}], 
         "]"}], ",", "payass"}], "]"}], "]"}]}], "\n", "      ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"5c6db5a6-2ddf-43db-aeec-72faf1be0b86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxSurpluses", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", "\n", 
    "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dir", ",", "pli", ",", "plj", ",", "maxpi", ",", "maxpj", ",", 
        "res"}], "}"}], ",", " ", "\n", "      ", 
      RowBox[{
       RowBox[{"dir", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"listIJ", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"pli", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "dir"}]}], 
       ";", "\n", "      ", 
       RowBox[{"plj", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], "/@", " ", "dir"}]}], 
       ";", "\n", "      ", 
       RowBox[{"maxpi", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MaxSurplus", "[", 
            RowBox[{"game", ",", "#1", ",", "#2", ",", "payoff"}], "]"}], 
           "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"pli", ",", "plj"}], "}"}]}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"maxpj", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MaxSurplus", "[", 
            RowBox[{"game", ",", "#1", ",", "#2", ",", "payoff"}], "]"}], 
           "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"plj", ",", "pli"}], "}"}]}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"maxpi", ",", "maxpj"}], "}"}]}], "]"}]}]}], "\n", "     ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModMaxSurpluses", "[", 
     RowBox[{
     "game_", ",", " ", "sij_List", ",", " ", "sji_List", ",", 
      "payoff_List"}], "]"}], " ", ":=", " ", "\n", "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"payass", ",", "maxpi", ",", "maxpj"}], "}"}], ",", " ", "\n", 
      "      ", 
      RowBox[{
       RowBox[{"maxpi", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ModMaxSurplus", "[", 
            RowBox[{"game", ",", "#", ",", "payoff"}], "]"}], "&"}], ",", 
          "sij"}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"maxpj", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ModMaxSurplus", "[", 
            RowBox[{"game", ",", "#", ",", "payoff"}], "]"}], "&"}], ",", 
          "sji"}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"maxpi", ",", "maxpj"}], "}"}]}], "]"}]}]}], "\n", "     ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AntiSurpluses", "[", 
    RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", "\n", 
   "    ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dir", ",", "pli", ",", "plj", ",", "minpi", ",", "minpj", ",", "res"}],
       "}"}], ",", " ", "\n", "      ", 
     RowBox[{
      RowBox[{"dir", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"listIJ", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"pli", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "dir"}]}], 
      ";", "\n", "      ", 
      RowBox[{"plj", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], "/@", " ", "dir"}]}], 
      ";", "\n", "      ", 
      RowBox[{"minpi", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"AntiSurplus", "[", 
           RowBox[{"game", ",", "#1", ",", "#2", ",", "payoff"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"pli", ",", "plj"}], "}"}]}], "]"}]}], ";", "\n", "      ", 
      
      RowBox[{"minpj", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"AntiSurplus", "[", 
           RowBox[{"game", ",", "#1", ",", "#2", ",", "payoff"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"plj", ",", "pli"}], "}"}]}], "]"}]}], ";", "\n", "      ", 
      
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", 
        RowBox[{"{", 
         RowBox[{"minpi", ",", "minpj"}], "}"}]}], "]"}]}]}], "\n", "     ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"98c92b9e-5228-474e-b001-\
2a8c289b8904"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModAntiSurpluses", "[", 
     RowBox[{
     "game_", ",", "sij_List", ",", " ", "sji_List", ",", " ", 
      "payoff_List"}], "]"}], " ", ":=", " ", "\n", "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"payass", ",", "minpi", ",", "minpj"}], "}"}], ",", " ", "\n", 
      "      ", 
      RowBox[{
       RowBox[{"minpi", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ModAntiSurplus", "[", 
            RowBox[{"game", ",", "#", ",", "payass"}], "]"}], "&"}], ",", 
          "sij"}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"minpj", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ModAntiSurplus", "[", 
            RowBox[{"game", ",", "#", ",", "payass"}], "]"}], "&"}], ",", 
          "sji"}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"minpi", ",", "minpj"}], "}"}]}], "]"}]}]}], "\n", "     ", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AllMaxSurpluses", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"AllMaxSurpluses", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AllMaxSurpluses", "[", 
    RowBox[{"game_", ",", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "AllMaxSurpluses", "]"}]}]}], "]"}], ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispmat", ",", "ausz", ",", "sol", ",", "mgij", ",", "mgji", ",", 
       "ergb"}], "}"}], ",", "\n", "     ", 
     RowBox[{
      RowBox[{"dispmat", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayMatrixForm", "]"}]}], ";", "    ", 
      "\n", "     ", 
      RowBox[{"ausz", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "payoff", "]"}], "==", "2"}], ",", 
         RowBox[{"{", "payoff", "}"}], ",", "\n", "                  ", 
         RowBox[{
          RowBox[{"Depth", "[", "payoff", "]"}], "==", "3"}], ",", "payoff", 
         ",", "\n", "                  ", "True", ",", " ", 
         RowBox[{
          RowBox[{
          "Print", "[", "\"\<The input 'payoff' is not a list.\>\"", "]"}], 
          ";", 
          RowBox[{"Return", "[", "]"}]}]}], "]"}]}], ";", "\n", "     ", 
      RowBox[{"ergb", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"MaxSurpluses", "[", 
          RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
        "ausz"}]}], ";", "\n", "     ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"dispmat", " ", "==", " ", "False"}], ",", " ", "ergb", ",", 
        " ", "True", ",", " ", 
        RowBox[{"DisplayResult", "[", "ergb", "]"}]}], "]"}]}]}], "\n", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"9b61477f-8bea-49fa-a2ab-\
de548a2f839d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AllAntiSurpluses", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"AllAntiSurpluses", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllAntiSurpluses", "[", 
     RowBox[{"game_", ",", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AllAntiSurpluses", "]"}]}]}], "]"}], ":=",
     " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dispmat", ",", "ausz", ",", "sol", ",", "mgij", ",", "mgji", ",", 
        "ergb"}], "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"dispmat", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayMatrixForm", "]"}]}], ";", "    ",
        "\n", "     ", 
       RowBox[{"ausz", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], "==", "2"}], ",", 
          RowBox[{"{", "payoff", "}"}], ",", "\n", "                  ", 
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], "==", "3"}], ",", "payoff", 
          ",", "\n", "                  ", "True", ",", " ", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<The input 'payoff' is not a list.\>\"", "]"}], 
           ";", 
           RowBox[{"Return", "[", "]"}]}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"ergb", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"AntiSurpluses", "[", 
           RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
         "ausz"}]}], ";", "\n", "     ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"dispmat", " ", "==", " ", "False"}], ",", " ", "ergb", ",", 
         " ", "True", ",", " ", 
         RowBox[{"DisplayResult", "[", "ergb", "]"}]}], "]"}]}]}], "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DisplayResult", "[", "payoff_", "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "surpl", ",", "dir", ",", "pli", ",", "plj", ",", "setij", ",", "setji",
        ",", "nwij", ",", "mgij"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"surpl", " ", "=", " ", "payoff"}], ";", " ", "\n", "    ", 
      RowBox[{"setij", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"listIJ", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"setji", " ", "=", " ", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"listJI", "[", "T", "]"}], ",", "2"}], "]"}]}], ";", 
      "\t\t\t\t", "\n", "    ", 
      RowBox[{"nwij", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"List", ",", 
         RowBox[{"{", 
          RowBox[{"setij", ",", "setji"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"mgij", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Global`sij", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
        "nwij"}]}], ";", "\n", "    ", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"PrependTo", "[", 
        RowBox[{"surpl", ",", "mgij"}], "]"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"de073201-7f03-408b-bef2-78626cecec10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "User", " ", "interface", " ", "to", " ", "check", " ", "for", " ", 
    "kernel", " ", 
    RowBox[{"elements", "."}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"KernelImputationQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"KernelImputationQ", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelImputationQ", "[", 
      RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "dimpay", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"dimpay", " ", "=", " ", 
         RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", "\n", "    ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "2"}], 
          ",", "\n", "         ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
             ")"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"KernelImputQ", "[", 
               RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
             " ", "payoff"}], ",", " ", "\n", "                       ", 
            "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
          "\n", "   ", 
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "1"}], 
          ",", "\n", "            ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", 
               "2"}]}], " ", ")"}], ",", " ", 
            RowBox[{"KernelImputQ", "[", 
             RowBox[{"game", ",", " ", "payoff"}], "]"}], ",", " ", "\n", 
            "                         ", "True", ",", "  ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", " ", 
          "\n", "   ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}]}]}], "\n", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelImputQ", "[", 
      RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", "\n",
      "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ub", ",", "lb", ",", "plpr", ",", "rvpr", ",", "asspay", ",", "sij", 
         ",", "sji", ",", "msrplij", ",", "msrplji", ",", "msrij", ",", 
         "msrji", ",", "conj", ",", "coni", ",", "intvij", ",", "intvji", ",",
          "npij", ",", "npji", ",", "orij", ",", "orji", ",", "ntmj", ",", 
         "ntmi", ",", "neq"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"ub", "=", 
         RowBox[{"4", "*", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "7"}], ")"}]}]}]}], ";", "\n", "    ", 
        RowBox[{"lb", "=", 
         RowBox[{"-", "ub"}]}], ";", "\n", "    ", 
        RowBox[{"plpr", " ", "=", " ", 
         RowBox[{"PlayerPairs", "[", "T", "]"}]}], ";", "\n", "    ", 
        RowBox[{"rvpr", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "plpr"}]}], ";", "\n", "    ", 
        RowBox[{"asspay", " ", "=", " ", 
         RowBox[{"AssgPay", "[", "payoff", "]"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sij", ",", "sji"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"TIJsets", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
             " ", "plpr"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"TIJsets", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
             " ", "rvpr"}]}], "}"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"msrplij", ",", "msrplji"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MaxExcess", "[", 
            RowBox[{"sij", ",", " ", "asspay"}], "]"}], ",", 
           RowBox[{"MaxExcess", "[", 
            RowBox[{"sji", ",", " ", "asspay"}], "]"}]}], "}"}]}], ";", "\n", 
        "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"msrij", ",", "msrji"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"msrplij", " ", "-", " ", "msrplji"}], ",", 
           RowBox[{"msrplji", " ", "-", " ", "msrplij"}]}], "}"}]}], ";", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"conj", ",", "coni"}], "}"}], "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ConstPlj", "[", 
            RowBox[{"plpr", ",", " ", "asspay"}], "]"}], ",", " ", 
           RowBox[{"ConstPlj", "[", 
            RowBox[{"rvpr", ",", " ", "asspay"}], "]"}]}], "}"}]}], ";", "\n",
         "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tmij", ",", "tmji"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Times", "[", 
            RowBox[{"msrij", ",", " ", "conj"}], "]"}], ",", 
           RowBox[{"Times", "[", 
            RowBox[{"msrji", ",", " ", "coni"}], "]"}]}], "}"}]}], ";", "\n", 
        "    ", 
        RowBox[{"intvij", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lb", "<=", " ", "#", " ", "<=", " ", "ub"}], ")"}], " ", 
           "&"}], "/@", " ", "tmij"}]}], ";", "  ", "\n", "    ", 
        RowBox[{"intvji", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lb", "<=", " ", "#", " ", "<=", " ", "ub"}], ")"}], " ", 
           "&"}], "/@", " ", "tmji"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npij", ",", "npji"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonPositive", "[", "tmij", "]"}], ",", 
           RowBox[{"NonPositive", "[", "tmji", "]"}]}], "}"}]}], ";", "\n", 
        "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"orij", ",", "orji"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{"Or", ",", 
             RowBox[{"{", 
              RowBox[{"intvij", ",", "npij"}], "}"}]}], "]"}], ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Or", ",", 
             RowBox[{"{", 
              RowBox[{"intvji", ",", "npji"}], "}"}]}], "]"}]}], "}"}]}], ";",
         " ", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ntmj", ",", "ntmi"}], "}"}], " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Union", "[", "orij", "]"}], ",", 
           RowBox[{"Union", "[", "orji", "]"}]}], "}"}]}], ";", "\n", "    ", 
        
        RowBox[{"neq", " ", "=", " ", 
         RowBox[{"Apply", "[", 
          RowBox[{"Join", ",", " ", 
           RowBox[{"{", 
            RowBox[{"ntmj", ",", " ", "ntmi"}], "}"}]}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "neq"}], "]"}]}]}], "\n", " ", "]"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"b4d958cf-2e22-40e0-ae9e-e2d448a74637"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplayMessFindKernel", "[", "payoff_List", "]"}], ":=", 
    RowBox[{"(", "\n", "       ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Depth is equal to \>\"", ",", 
        RowBox[{"Depth", "[", "payoff", "]"}]}], "]"}], ";", "\n", "       ", 
      
      RowBox[{
      "Print", "[", "\"\<Usage: FindKernelSolution[game,payoff]\>\"", "]"}], 
      ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<Input format of the variable 'payoff' is not correct.\>\"", "]"}],
       ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<The variable 'payoff' must be a single payoff vector or a list of \
payoffs.\>\"", "]"}]}], "\n", ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplayMess", "[", "payoff_List", "]"}], ":=", 
    RowBox[{"(", "\n", "       ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Depth is equal to \>\"", ",", 
        RowBox[{"Depth", "[", "payoff", "]"}]}], "]"}], ";", "\n", "       ", 
      
      RowBox[{
      "Print", "[", "\"\<Usage: KernelImputationQ[game,payoff]\>\"", "]"}], 
      ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<Input format of the variable 'payoff' is not correct.\>\"", "]"}],
       ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<The variable 'payoff' must be a single payoff vector.\>\"", "]"}],
       ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<Use the function KernelImputationListQ[game,payoff]\>\"", "]"}], 
      ";", "\n", "       ", 
      RowBox[{
      "Print", "[", "\"\<to check a list of payoff vectors.\>\"", "]"}]}], 
     "\n", ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplayMessReclim", "[", "reclimval_", "]"}], ":=", 
    RowBox[{"(", "\n", "       ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Warning:: Recursion limit exceeds threshold value: \>\"", ",", 
        " ", "reclimval"}], "]"}], ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<Use the function KernelImputationListQ[game,payoff]\>\"", "]"}], 
      ";", "\n", "       ", 
      RowBox[{
      "Print", "[", "\"\<to check if the result is a kernel solution.\>\"", 
       "]"}]}], "       ", "\n", "\n", ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelImputationListQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"KernelImputationListQ", "::", "argerr"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelImputationListQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kerimpQ", ",", "impQ"}], "}"}], ",", "\n", "    ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}], ",", 
       " ", "\n", "            ", 
       RowBox[{
        RowBox[{"kerimpQ", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"KernelImputationQ", "[", 
            RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], "/@", " ", 
          "payoff"}]}], ";", "\n", "            ", 
        RowBox[{"impQ", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"CheckImputations", "[", 
            RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "payoff"}]}], ";", "\n", "            ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"And", ",", 
          RowBox[{"{", 
           RowBox[{"kerimpQ", ",", "impQ"}], "}"}]}], "]"}]}], ",", "\n", 
       "          ", 
       RowBox[{
        RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], ",", 
       " ", "\n", "            ", 
       RowBox[{
        RowBox[{"kerimpQ", " ", "=", " ", 
         RowBox[{"KernelImputationQ", "[", 
          RowBox[{"game", ",", "payoff"}], "]"}]}], ";", "\n", "            ", 
        RowBox[{"impQ", " ", "=", " ", 
         RowBox[{"CheckImputations", "[", 
          RowBox[{"game", ",", "payoff"}], "]"}]}], ";", "\n", "            ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{"{", 
           RowBox[{"kerimpQ", ",", "impQ"}], "}"}]}], "]"}]}], ",", "\n", 
       "          ", "True", ",", " ", 
       RowBox[{"DisplayMessage", "[", "payoff", "]"}]}], "\n", "    ", "\n", 
      "   ", "]"}]}], "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->\
"b87fe9d4-fa00-4584-96ce-bcd9243777c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImputationQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ImputationQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImputationQ", "[", 
    RowBox[{"game_", ",", "payoff_List"}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "   ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}], ",", 
       " ", 
       RowBox[{
        RowBox[{
         RowBox[{"CheckImputations", "[", 
          RowBox[{"game", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "payoff"}], ",", "\n", "         ", 
       RowBox[{
        RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], ",", 
       " ", 
       RowBox[{"CheckImputations", "[", 
        RowBox[{"game", ",", "payoff"}], "]"}], ",", "\n", "         ", 
       "True", ",", " ", 
       RowBox[{"DisplayMessage", "[", "payoff", "]"}]}], "\n", "   ", "]"}]}],
     "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->"cebea53b-91bc-4d6f-9833-\
039f91be633b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckImputations", "[", 
     RowBox[{"game_", ",", "payoff_List"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "impQ", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"impQ", " ", "=", " ", 
        RowBox[{
         RowBox[{"TolImputations", "[", "game", "]"}], " ", "/.", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], ",", " ", "payoff"}], "}"}]}], "]"}]}]}], ";", "\n", 
       "    ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "impQ"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TolImputations", "[", "game_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tolv", ",", "indrat", ",", "eff"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"tolv", "=", 
       RowBox[{"4", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "9"}], ")"}]}]}]}], ";", "\n", "    ", 
      RowBox[{"indrat", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "#", "]"}], " ", "-", " ", 
            RowBox[{"v", "[", 
             RowBox[{"{", "#", "}"}], "]"}]}], ")"}], ">=", 
          RowBox[{"-", "tolv"}]}], " ", "&"}], "/@", " ", "T"}]}], ";", "\n", 
      "    ", 
      RowBox[{"eff", "=", 
       RowBox[{"LessEqual", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"x", "[", "T", "]"}], "-", 
           RowBox[{"v", "[", "T", "]"}]}], "]"}], ",", "tolv"}], "]"}]}], ";",
       "\n", "    ", 
      RowBox[{"Append", "[", 
       RowBox[{"indrat", ",", "eff"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"56349e60-723a-4be4-a615-14d9e20759ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplayMessage", "[", "payoff_List", "]"}], ":=", 
    RowBox[{"(", " ", "\n", "       ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Depth is equal to \>\"", ",", 
        RowBox[{"Depth", "[", "payoff", "]"}]}], "]"}], ";", "\n", "       ", 
      
      RowBox[{
      "Print", "[", 
       "\"\<Usage: KernelImputationListQ[game,payoff] and \
PreKernelQ[game,payoff]\>\"", "]"}], ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<Input format of the variable 'payoff' is not correct.\>\"", "]"}],
       ";", "\n", "       ", 
      RowBox[{
      "Print", "[", 
       "\"\<The variable 'payoff' must be a list of payoff vectors or a \
single payoff vector.\>\"", "]"}]}], "\n", "\n", ")"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "User", " ", "interface", " ", "to", " ", "check", " ", "for", " ", 
     RowBox[{"(", "anti", ")"}], " ", "pre"}], "-", 
    RowBox[{"kernel", " ", 
     RowBox[{"element", "."}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"PreKernelQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelQ", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tolv", ",", "graval", ",", "dimpay"}], "}"}], ",", " ", "\n", 
      "       ", 
      RowBox[{
       RowBox[{"graval", " ", "=", " ", 
        RowBox[{"v", "[", "T", "]"}]}], ";", "\n", "       ", 
       RowBox[{"dimpay", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", "\n", "       ", 
       RowBox[{"tolv", "=", 
        RowBox[{"1.5", "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "8"}], ")"}]}]}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "2"}], ",",
          "\n", "                                 ", 
         RowBox[{"Which", "[", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
            ")"}], ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{"And", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", "#", "]"}], " ", "-", " ", 
                    "graval"}], "]"}], "<=", "tolv"}], ")"}], " ", "&"}], " ",
                 "/@", " ", "payoff"}], ",", 
               RowBox[{"MaxExcessBalanced", "[", 
                RowBox[{"game", ",", " ", "payoff"}], "]"}]}], "}"}]}], "]"}],
            ",", "\n", "                                               ", 
           "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
         "                   ", 
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "1"}], ",",
          "\n", "                              ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}],
             " ", ")"}], ",", " ", 
           RowBox[{"MapThread", "[", 
            RowBox[{"And", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"Total", "[", "payoff", "]"}], " ", "-", " ", 
                   "graval"}], "]"}], "<=", "tolv"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"MaxExcessBalanced", "[", 
                 RowBox[{"game", ",", " ", "payoff"}], "]"}], "}"}]}], 
              "}"}]}], "]"}], ",", " ", "\n", 
           "                                            ", "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
         "      ", "True", ",", " ", 
         RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", "            ", 
        "]"}]}]}], "\n", " ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AntiPreKernelQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"AntiPreKernelQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AntiPreKernelQ", "[", 
    RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tolv", ",", "graval", ",", "dimpay"}], "}"}], ",", " ", "\n", 
     "       ", 
     RowBox[{
      RowBox[{"graval", " ", "=", " ", 
       RowBox[{"v", "[", "T", "]"}]}], ";", "\n", "       ", 
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", "\n", "       ", 
      RowBox[{"tolv", "=", 
       RowBox[{"1.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "8"}], ")"}]}]}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "2"}], ",", 
        "\n", "                               ", 
        RowBox[{"Which", "[", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
           ")"}], ",", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"And", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{
                    RowBox[{"Total", "[", "#", "]"}], " ", "-", " ", 
                    "graval"}], "]"}], "<=", " ", "tolv"}], ")"}], " ", "&"}],
                " ", "/@", " ", "payoff"}], ",", 
              RowBox[{"MinExcessBalanced", "[", 
               RowBox[{"game", ",", " ", "payoff"}], "]"}]}], "}"}]}], "]"}], 
          ",", "\n", "                                               ", 
          "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                   ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], " ", "===", " ", "1"}], ",", 
        "\n", "                              ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           " ", ")"}], ",", " ", 
          RowBox[{"MapThread", "[", 
           RowBox[{"And", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"Total", "[", "payoff", "]"}], " ", "-", " ", 
                  "graval"}], "]"}], "<=", "tolv"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"MinExcessBalanced", "[", 
                RowBox[{"game", ",", " ", "payoff"}], "]"}], "}"}]}], "}"}]}],
            "]"}], ",", " ", "\n", 
          "                                            ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "      ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", "            ", 
       "]"}]}]}], "\n", " ", "]"}]}], ";"}]}], "Code",ExpressionUUID->\
"e4b8f2b4-e00b-4bed-ab96-ed7da3bb1ac7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "User", " ", "interface", " ", "to", " ", "calculate", " ", "kernel", 
      " ", "elements", " ", "of", " ", "a", " ", "Tu"}], "-", "game"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"cf", ".", " ", "Meinhardt"}], " ", 
     RowBox[{
      RowBox[{"(", "2006", ")"}], "."}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"KernelCalculation", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"KernelCalculation", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelCalculation", "[", 
      RowBox[{"game_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "KernelCalculation", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "callm", ",", "changeps", ",", "dispres", ",", " ", "epsi1", ",", " ",
          "fieps", ",", " ", "notzeromono", ",", " ", "firstcrit", ",", 
         "kernres", ",", " ", "epsilon", ",", " ", "zmonoQ", ",", " ", 
         "kernQ", ",", " ", "avcQ", ",", " ", "orggame", ",", " ", "orgval"}],
         "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"Off", "[", 
         RowBox[{"Set", "::", "setraw"}], "]"}], ";", "\n", "  ", 
        RowBox[{"Off", "[", 
         RowBox[{"Set", "::", "write"}], "]"}], ";", "\n", "  ", 
        RowBox[{"callm", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "CallMaximize", "]"}]}], ";", "\n", "  ", 
        RowBox[{"changeps", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "ChangeInternalEps", "]"}]}], ";", "\n", 
        "  ", 
        RowBox[{"dispres", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
        "  ", 
        RowBox[{"epsi1", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", "  ", 
        RowBox[{"notzeromono", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "SetGameToNonZeroMonotonic", "]"}]}], 
        ";", " ", "\n", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "epsi1", "]"}], "==", "1"}], ",", " ", "\n", 
          "    ", 
          RowBox[{
           RowBox[{"ClearProtected", "[", "Global`w", "]"}], ";", "\n", 
           "    ", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", 
              RowBox[{"Set", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Global`w", "[", "#", "]"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"v", "[", "#", "]"}], "}"}]}], "}"}]}], "]"}], " ", 
             "&"}], " ", "/@", " ", 
            RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "    ", 
           RowBox[{"SetAttributes", "[", 
            RowBox[{"Global`w", ",", " ", "Protected"}], "]"}], ";", "\n", 
           "    ", 
           RowBox[{"orgval", " ", "=", " ", 
            RowBox[{"Rationalize", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              RowBox[{"Subsets", "[", "T", "]"}]}], "]"}]}], ";", " ", "\n", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"ZeroMonotonQ", "[", "]"}], " ", "changes", " ", "the", 
             " ", "coalitional", " ", 
             RowBox[{"values", ".", " ", "orgval"}], " ", "stores", " ", 
             "the", " ", "original", " ", 
             RowBox[{"values", "."}]}], "  ", "*)"}], "\n", "    ", 
           RowBox[{"fieps", "=", " ", 
            RowBox[{
             RowBox[{"FirstCriticalVal", "[", "game", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
           RowBox[{"(*", "    ", 
            RowBox[{
             RowBox[{"fieps", "=", " ", 
              RowBox[{
               RowBox[{"ThirdCriticalVal", "[", "game", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "*)"}], "\n", 
           "    ", 
           RowBox[{"epsilon", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"epsi1", " ", "<", " ", "fieps"}], ",", "fieps", ",", 
              "epsi1"}], "]"}]}], ";", "\n", "    ", 
           RowBox[{"zmonoQ", " ", "=", " ", 
            RowBox[{"ZeroMonotoneQ", "[", "game", "]"}]}], ";", "\n", "    ", 
           
           RowBox[{"orggame", " ", ":=", " ", 
            RowBox[{"DefineGame", "[", 
             RowBox[{"T", ",", "orgval"}], "]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Reconstruction", " ", "of", " ", "the", " ", "original", " ", 
             RowBox[{"game", "."}]}], " ", "*)"}], "\n", "    ", 
           RowBox[{"kernQ", " ", "=", " ", 
            RowBox[{"CoreQ", "[", "orggame", "]"}]}], ";", "\n", "    ", 
           RowBox[{"avcQ", " ", "=", " ", 
            RowBox[{"AvConvexQ", "[", "orggame", "]"}]}], ";", "\n", "    ", 
           RowBox[{"kernres", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"epsilon", " ", "!=", " ", "0"}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"For", " ", "zero"}], "-", 
                 RowBox[{
                 "monotonic", " ", "games", " ", "with", " ", "an", " ", 
                  "nonempty", " ", "core", " ", "we", " ", "can", " ", "use", 
                  " ", 
                  RowBox[{"KernelPoints", "[", "]"}]}]}], ",", " ", "\n", 
                "                        ", 
                RowBox[{
                 RowBox[{
                 "otherwise", " ", "we", " ", "use", " ", "the", " ", 
                  "function", " ", 
                  RowBox[{
                   RowBox[{"Kernel", "[", "]"}], ".", "\n", 
                   "                        ", 
                   RowBox[{"KernelPoints", "[", "]"}]}], " ", "can", " ", 
                  "run", " ", "into", " ", "infinite", " ", "loops", " ", 
                  "for", " ", "\n", "                        ", "non", " ", 
                  "zero"}], "-", 
                 RowBox[{"monotonic", " ", 
                  RowBox[{
                  "games", ".", "\n", "                        ", "This"}], 
                  " ", "function", " ", "seems", " ", "to", " ", "be", " ", 
                  "stable", " ", "for", " ", "non", " ", "zero"}], "-", 
                 RowBox[{"monotonic", " ", 
                  RowBox[{"games", "."}]}]}]}], " ", "*)"}], " ", "\n", 
              "                 ", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"zmonoQ", " ", "||", " ", "kernQ"}], ")"}], " ", "==",
                  " ", "True"}], ",", " ", "\n", "                 ", 
                RowBox[{
                 RowBox[{"DisplayZmQKerQ01", "[", 
                  RowBox[{"zmonoQ", ",", "kernQ"}], "]"}], ";", "\n", 
                 "                 ", 
                 RowBox[{"KernelPoints", "[", 
                  RowBox[{"orggame", ",", " ", 
                   RowBox[{"{", "}"}], ",", "callm", ",", "changeps", ",", 
                   " ", "dispres", ",", " ", 
                   RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                   " ", "opts"}], "]"}]}], ",", "\n", "                 ", 
                RowBox[{
                 RowBox[{"DisplayZmQKerQ02", "[", 
                  RowBox[{"zmonoQ", ",", "kernQ"}], "]"}], ";", "\n", 
                 "                 ", 
                 RowBox[{"KernelSubCallZero", "[", 
                  RowBox[{
                  "orggame", ",", " ", "callm", ",", " ", "changeps", ",", 
                   " ", "dispres", ",", " ", 
                   RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                   " ", 
                   RowBox[{
                   "SetGameToNonZeroMonotonic", " ", "->", " ", 
                    "notzeromono"}]}], "]"}]}]}], "\n", "                 ", 
               "]"}], ",", "\n", "           ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"zmonoQ", " ", "||", " ", "kernQ"}], ")"}], " ", "==",
                  " ", "False"}], ",", "\n", "              ", 
                RowBox[{
                 RowBox[{"DisplayZmQKerQ02", "[", 
                  RowBox[{"zmonoQ", ",", "kernQ"}], "]"}], ";", "\n", 
                 "              ", 
                 RowBox[{"KernelSubCallZero", "[", 
                  RowBox[{
                  "orggame", ",", " ", "callm", ",", " ", "changeps", ",", 
                   "  ", "dispres", ",", " ", 
                   RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                   " ", 
                   RowBox[{
                   "SetGameToNonZeroMonotonic", " ", "->", " ", 
                    "notzeromono"}]}], "]"}]}], ",", "\n", "              ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"kernQ", " ", "==", " ", "False"}], ",", "\n", 
                  "                 ", 
                  RowBox[{
                   RowBox[{"DisplayZmQKerQ03", "[", 
                    RowBox[{"zmonoQ", ",", "kernQ"}], "]"}], ";", "\n", 
                   "                 ", 
                   RowBox[{"KernelSubCallEmpty", "[", 
                    RowBox[{
                    "orggame", ",", "callm", ",", " ", "changeps", ",", "  ", 
                    "dispres", ",", " ", 
                    RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                    " ", 
                    RowBox[{
                    "SetGameToNonZeroMonotonic", " ", "->", " ", 
                    "notzeromono"}]}], "]"}]}], ",", "\n", 
                  "                 ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"avcQ", " ", "==", " ", "True"}], ",", " ", "\n", 
                    "                   ", 
                    RowBox[{
                    RowBox[{"DisplayAvcQ", "[", "avcQ", "]"}], ";", "\n", 
                    "                   ", 
                    RowBox[{"KernelSubCall", "[", 
                    RowBox[{
                    "orggame", ",", "callm", ",", " ", "changeps", ",", " ", 
                    "dispres", ",", " ", 
                    RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                    " ", 
                    RowBox[{
                    "SetGameToNonZeroMonotonic", " ", "->", " ", 
                    "notzeromono"}]}], "]"}]}], ",", "\n", 
                    "                   ", 
                    RowBox[{
                    RowBox[{"DisplayAvcQ", "[", "avcQ", "]"}], ";", "\n", 
                    "                   ", 
                    RowBox[{"KernelSubCall", "[", 
                    RowBox[{
                    "orggame", ",", "callm", ",", " ", "changeps", ",", " ", 
                    "dispres", ",", " ", 
                    RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                    " ", 
                    RowBox[{
                    "SetGameToNonZeroMonotonic", " ", "->", " ", 
                    "notzeromono"}]}], "]"}]}]}], "\n", "                   ",
                    "]"}]}], "\n", "                ", "]"}]}], "\n", 
               "             ", "]"}]}], "\n", "       ", "]"}]}]}], ",", " ", 
          RowBox[{"DisplayRemark", "[", "epsilon", "]"}]}], "\n", "   ", 
         "]"}], ";", "\n", "   ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"T", ",", "orgval"}], "]"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Reconstruction", " ", "of", " ", "the", " ", "original", " ", 
          RowBox[{"game", "."}]}], " ", "*)"}], "\n", "   ", "kernres"}]}], 
      "\n", "  ", "]"}]}], ";"}], "\n", " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayZmQKerQ01", "[", 
      RowBox[{"zmQ_", ",", "coreQ_"}], "]"}], " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "          ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Game is zero-monotone? \>\"", ",", "zmQ"}], "]"}], ";", 
        "\n", "          ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Core is nonempty? \>\"", ",", "coreQ"}], "]"}], ";", 
        "\n", "          ", 
        RowBox[{
        "Print", "[", 
         "\"\<Game is either zero-monotonic or has nonempty core\>\"", 
         "]"}]}]}], "\n", "         ", "]"}]}], ";"}], "\n", "         ", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayZmQKerQ02", "[", 
      RowBox[{"zmQ_", ",", "coreQ_"}], "]"}], " ", ":=", " ", "\n", "   ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "          ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Game is zero-monotone? \>\"", ",", "zmQ"}], "]"}], ";", 
        "\n", "          ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Core is nonempty? \>\"", ",", "coreQ"}], "]"}], ";", 
        "\n", "          ", 
        RowBox[{
        "Print", "[", "\"\<Game is not zero-monotonic and has empty core\>\"",
          "]"}]}]}], "\n", "          ", "]"}]}], ";"}], "\n", "          ", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayZmQKerQ03", "[", 
      RowBox[{"zmQ_", ",", "coreQ_"}], "]"}], " ", ":=", "\n", "   ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "          ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Game is zero-monotone? \>\"", ",", "zmQ"}], "]"}], ";", 
        "\n", "          ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Core is nonempty? \>\"", ",", "coreQ"}], "]"}], ";", 
        "\n", "          ", 
        RowBox[{"Print", "[", "\"\<Core is empty\>\"", "]"}], ";"}]}], "\n", 
      "       ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayAvcQ", "[", "avconQ_", "]"}], " ", ":=", " ", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Game is average-convex? \>\"", ",", "avconQ"}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayRemark", "[", "eps_Real", "]"}], " ", ":=", " ", "\n", 
     "    ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "      ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Depth is equal to \>\"", ",", 
          RowBox[{"Depth", "[", "eps", "]"}]}], "]"}], ";", "\n", "      ", 
        RowBox[{"Print", "[", "\"\<Usage: Kernel[game,options]\>\"", "]"}], 
        ";", "\n", "      ", 
        RowBox[{
        "Print", "[", "\"\<and KernelCalculation[game,options]\>\"", "]"}], 
        ";", "\n", "      ", 
        RowBox[{
        "Print", "[", 
         "\"\<The variable 'eps' has not the correct input format.\>\"", 
         "]"}], ";", "\n", "      ", 
        RowBox[{
        "Print", "[", 
         "\"\<The variable 'eps' must be a rational number and not a \
list.\>\"", "]"}], ";", "\n", "      ", 
        RowBox[{
        "Print", "[", 
         "\"\<Use for instance the function FirstCriticalVal[] to find out \
such a number.\>\"", "]"}]}]}], "\n", "      ", "]"}]}], ";"}], 
   "\n"}]}]], "Code",ExpressionUUID->"a08bd211-07d7-411e-abfd-6f0fdfdcd1fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelSubCallEmpty", "[", 
     RowBox[{"game_", ",", "callm_", ",", "changeps_", ",", "dispres_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "KernelCalculation", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "     ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"epsi1", ",", "notzeromono", ",", "critical", ",", "kernres"}],
        "}"}], ",", "\n", "          ", 
      RowBox[{
       RowBox[{"epsi1", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
       "          ", 
       RowBox[{"notzeromono", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SetGameToNonZeroMonotonic", "]"}]}], ";",
        "\n", "          ", 
       RowBox[{"critical", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"changeps", " ", "==", " ", "False"}], ",", " ", "epsi1", 
          ",", " ", "True", ",", " ", 
          RowBox[{
           RowBox[{"SecondCriticalVal", "[", "game", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
       "          ", 
       RowBox[{"kernres", " ", "=", " ", 
        RowBox[{"KernelPoints", "[", 
         RowBox[{"game", ",", " ", 
          RowBox[{"{", "}"}], ",", " ", "callm", ",", " ", "changeps", ",", 
          "  ", "dispres", ",", " ", 
          RowBox[{"EpsilonValue", " ", "->", " ", "critical"}], ",", " ", 
          RowBox[{
          "SetGameToNonZeroMonotonic", " ", "->", " ", "notzeromono"}]}], 
         "]"}]}]}]}], "\n", "\n", "\n", " ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelSubCall", "[", 
    RowBox[{"game_", ",", "callm_", ",", "changeps_", ",", "dispres_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "KernelCalculation", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "     ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"epsi1", ",", "notzeromono", ",", "critical", ",", "kernres"}], 
      "}"}], ",", "\n", "          ", 
     RowBox[{
      RowBox[{"epsi1", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
      "          ", 
      RowBox[{"notzeromono", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "SetGameToNonZeroMonotonic", "]"}]}], ";", 
      " ", "\n", "          ", 
      RowBox[{"critical", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"changeps", " ", "==", " ", "False"}], ",", " ", "epsi1", 
         ",", " ", "True", ",", " ", 
         RowBox[{
          RowBox[{"FourthCriticalVal", "[", "game", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
      "          ", 
      RowBox[{"kernres", " ", "=", " ", 
       RowBox[{"KernelPoints", "[", 
        RowBox[{"game", ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "callm", ",", " ", "changeps", ",", 
         "  ", "dispres", ",", " ", 
         RowBox[{"EpsilonValue", " ", "->", " ", "critical"}], ",", " ", 
         RowBox[{
         "SetGameToNonZeroMonotonic", " ", "->", " ", "notzeromono"}]}], 
        "]"}]}]}]}], "\n", "\n", "\n", " ", "]"}]}], ";"}]}], "Code",Expressio\
nUUID->"d6a58d8a-8336-4e24-8e02-1fdae3ad644a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelSubCallZero", "[", 
     RowBox[{"game_", ",", "callm_", ",", "changeps_", ",", "dispres_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "KernelCalculation", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "     ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "epsi1", ",", "notzeromono", ",", "critical", ",", "kernres", ",", 
        "kernsol"}], "}"}], ",", "\n", "          ", 
      RowBox[{
       RowBox[{"epsi1", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
       "          ", 
       RowBox[{"notzeromono", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SetGameToNonZeroMonotonic", "]"}]}], ";",
        " ", "\n", "          ", 
       RowBox[{"critical", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"changeps", " ", "==", " ", "False"}], ",", " ", "epsi1", 
          ",", " ", "True", ",", " ", 
          RowBox[{
           RowBox[{"StarCriticalVal", "[", "game", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
       
       RowBox[{"(*", " ", "\n", 
        RowBox[{
         RowBox[{"The", " ", "function", " ", 
          RowBox[{"KernelPoints", "[", "]"}], " ", "is", " ", "not", " ", 
          "stable", " ", "for", " ", "non", " ", "zero"}], "-", 
         RowBox[{"monotonic", " ", 
          RowBox[{"games", ".", "\n", "We"}], " ", "comment", " ", "the", " ",
           "function", " ", 
          RowBox[{"KernelPoints", "[", "]"}], " ", "out", " ", "and", " ", 
          "rely", " ", "on", " ", "the", " ", "stable", " ", "\n", "function",
           " ", 
          RowBox[{"Kernel", "[", "]"}], " ", "to", " ", "avoid", " ", 
          "infinite", " ", 
          RowBox[{"loops", "."}]}]}], "\n", "*)"}], "\n", 
       RowBox[{"(*", "\n", "          ", 
        RowBox[{"kernres", " ", "=", " ", 
         RowBox[{"KernelPoints", "[", 
          RowBox[{"game", ",", " ", 
           RowBox[{"{", "}"}], ",", " ", "critical"}], "]"}]}], "\n", "*)"}], 
       "\n", "       ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"notzeromono", " ", "==", " ", "False"}], ",", "\n", 
         "             ", 
         RowBox[{
          RowBox[{"kernsol", "=", " ", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"Kernel", "[", 
              RowBox[{"game", ",", " ", 
               RowBox[{"DisplayAllResults", " ", "->", " ", "True"}], ",", 
               " ", 
               RowBox[{"EpsilonValue", " ", "->", " ", "critical"}]}], "]"}], 
             ",", "3"}], "]"}]}], ";", "\n", "             ", 
          RowBox[{"kernres", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"kernsol", ",", 
             RowBox[{"kernsol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", "\n", 
         "            ", "True", ",", " ", 
         RowBox[{"KernelPoints", "[", 
          RowBox[{"game", ",", " ", 
           RowBox[{"{", "}"}], ",", " ", "callm", ",", " ", "changeps", ",", 
           " ", "dispres", ",", " ", 
           RowBox[{"EpsilonValue", " ", "->", " ", "critical"}], ",", " ", 
           RowBox[{
           "SetGameToNonZeroMonotonic", " ", "->", " ", "notzeromono"}]}], 
          "]"}]}], "\n", "         ", "]"}]}]}], "\n", " ", "]"}]}], ";"}], 
  "\n"}]], "Code",ExpressionUUID->"734f2e95-b2ec-4a82-92d6-f28d30fc992b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", 
   RowBox[{
   "Main", " ", "functions", " ", "to", " ", "determine", " ", "kernel", " ", 
    "elements", " ", "according", " ", "to", " ", "the", " ", "algorithm", 
    " ", "\n", "as", " ", "described", " ", "in", " ", "Meinhardt", 
    RowBox[{
     RowBox[{"(", "2006", ")"}], ".", " ", "Recursive"}], " ", 
    RowBox[{"procedure", "."}]}], " ", "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"KernelPoints", "[", 
     RowBox[{"game_", ",", " ", 
      RowBox[{"storepay_", ":", 
       RowBox[{"{", "}"}]}], ",", " ", "callm_", ",", " ", "changeps_", ",", 
      " ", "dispres_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "KernelCalculation", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "epsi1", ",", " ", "notzeromono", ",", " ", "ruf", ",", " ", "zwerg", 
        ",", " ", 
        RowBox[{"initialpay", " ", "=", " ", "storepay"}], ",", " ", "folg", 
        ",", " ", "rf", ",", " ", "del", ",", " ", "alloc", ",", " ", "po", 
        ",", " ", "newgame", ",", " ", "maxsets", ",", " ", "tijsets", ",", 
        " ", "mengsys", ",", " ", "reslofSt2", ",", " ", "constofSt2", ",", 
        " ", 
        RowBox[{"const", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", "var", ",", " ", "subres", ",", 
        "sol", ",", " ", "reddel", ",", "unpay", ",", " ", "retval", ",", " ",
         "objfunc", ",", " ", "epsilon", ",", " ", "leastgame"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"epsi1", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"notzeromono", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SetGameToNonZeroMonotonic", "]"}]}], ";",
        " ", "\n", "    ", 
       RowBox[{"epsilon", " ", "=", " ", "epsi1"}], ";", "\n", "    ", 
       RowBox[{"newgame", " ", "=", " ", 
        RowBox[{"EpsValue", "[", 
         RowBox[{"game", ",", " ", "epsi1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"ruf", " ", "=", " ", 
        RowBox[{"MaxDeltaij", "[", 
         RowBox[{"newgame", ",", " ", "epsi1", ",", "callm"}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"folg", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "T", "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "T", "]"}], " ", "-", " ", "1"}], ")"}]}],
           ")"}], "/", "2"}]}], ";", "\n", "    ", 
       RowBox[{"rf", "=", 
        RowBox[{"Range", "[", "folg", "]"}]}], ";", "\n", "    ", 
       RowBox[{"zwerg", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"ruf", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "&"}], " ", "/@",
          " ", "rf"}]}], ";", "\n", "    ", 
       RowBox[{"var", " ", "=", " ", 
        RowBox[{"x", " ", "/@", " ", "T"}]}], ";", "\n", "    ", 
       RowBox[{"subres", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", "var", ")"}], " ", "/.", " ", "zwerg"}]}], ";", "\n", 
       "    ", 
       RowBox[{"initialpay", " ", "=", " ", 
        RowBox[{"FlattenAt", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"initialpay", ",", " ", 
            RowBox[{"Union", "[", "subres", "]"}]}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", "initialpay", "]"}], " ", "+", " ", "1"}]}],
          "]"}]}], ";", "\n", "    ", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Global`\[Delta]", " ", "/.", " ", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"ruf", "[", 
              RowBox[{"[", 
               RowBox[{"#", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
             RowBox[{"-", "2"}]}], "]"}]}], " ", "&"}], " ", "/@", " ", 
         "rf"}]}], ";", "\n", "    ", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Rationalize", "[", 
           RowBox[{"#", ",", "0.01"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "del"}]}], ";", "\n", "    ", 
       RowBox[{"tijsets", " ", "=", " ", 
        RowBox[{"TijLoop", "[", "newgame", "]"}]}], ";", "\n", "    ", 
       RowBox[{"po", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"ExcessPayoff", "[", 
               RowBox[{"newgame", ",", " ", "#1"}], "]"}], "]"}], ",", " ", 
             RowBox[{"-", "#2"}]}], "]"}], " ", "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"subres", ",", " ", "del"}], "}"}]}], "]"}]}], ";", " ", 
       "\n", "    ", 
       RowBox[{"maxsets", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"Subsets", "[", "T", "]"}], ",", " ", "#"}], "]"}], " ", 
          "&"}], " ", "/@", " ", "po"}]}], ";", "\n", "    ", 
       RowBox[{"mengsys", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Intersection", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"maxsets", ",", " ", "tijsets"}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"const", " ", "=", " ", 
        RowBox[{"NewConstraints", "[", 
         RowBox[{
         "mengsys", ",", " ", "const", ",", " ", "del", ",", " ", "epsi1"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"objfunc", " ", "=", " ", 
        RowBox[{"Total", "[", "var", "]"}]}], ";", "\n", "    ", 
       RowBox[{"const", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"const", ",", " ", 
            RowBox[{"objfunc", " ", "<=", " ", 
             RowBox[{"v", "[", "T", "]"}]}]}], "]"}], "]"}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"reddel", " ", "=", " ", 
        RowBox[{"Sort", "[", 
         RowBox[{"-", 
          RowBox[{"Union", "[", "del", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"reslofSt2", ",", " ", "constofSt2"}], "}"}], " ", "=", " ", 
        
        RowBox[{"FeasibleConstraints", "[", 
         RowBox[{"const", ",", " ", "reddel", ",", " ", "callm"}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{"initialpay", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"initialpay", ",", "reslofSt2"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"unpay", " ", "=", " ", 
        RowBox[{"Union", "[", "initialpay", "]"}]}], ";", "\n", "    ", 
       RowBox[{"const", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{"Union", "[", "constofSt2", "]"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"callm", " ", "==", " ", "False"}], ",", " ", 
          RowBox[{"ConstrainedMax", "[", 
           RowBox[{"objfunc", ",", " ", "const", ",", " ", "var"}], "]"}], 
          ",", "\n", "                ", "True", ",", " ", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"NMaximize", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{"const", ",", " ", "objfunc"}], "]"}], ",", " ", 
             "var"}], "]"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"alloc", " ", "=", " ", 
        RowBox[{"var", " ", "/.", " ", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "    ", 
       RowBox[{"retval", "=", 
        RowBox[{"Apply", "[", 
         RowBox[{"Or", ",", 
          RowBox[{"Union", "[", 
           RowBox[{"KernelImputationListQ", "[", 
            RowBox[{"newgame", ",", "subres"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"retval", "===", "True"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"alloc", ",", 
            RowBox[{"Union", "[", "subres", "]"}]}], "}"}], "]"}], ",", 
         "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "alloc", "]"}], "!=", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"alloc", ",", "subres"}], "}"}], ",", "True"}], "]"}], ";", 
       "\n", "    ", 
       RowBox[{"retval", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"notzeromono", " ", "==", " ", "False"}], ",", " ", 
          RowBox[{"KernelImputationQ", "[", 
           RowBox[{"newgame", ",", " ", "alloc"}], "]"}], ",", " ", "\n", 
          "                        ", "True", ",", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"PreKernelQ", "[", 
              RowBox[{"newgame", ",", " ", "alloc"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "||", " ", 
            RowBox[{"KernelImputationQ", "[", 
             RowBox[{"newgame", ",", " ", "alloc"}], "]"}]}], ")"}]}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"retval", " ", "==", " ", "True"}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<A Kernel solution is: \>\"", ",", 
            RowBox[{"MapThread", "[", 
             RowBox[{"Rule", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "alloc"}], "}"}]}], "]"}]}], "]"}], ";", 
          "\n", "      ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"dispres", " ", "==", " ", "False"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"alloc", ",", "unpay"}], "}"}], ",", " ", "True", ",", 
            " ", 
            RowBox[{"{", 
             RowBox[{
             "alloc", ",", " ", "objfunc", ",", " ", "const", ",", " ", 
              RowBox[{"del", "-", "epsi1"}], ",", " ", "unpay"}], "}"}]}], 
           "]"}]}], ",", "\n", "      ", 
         RowBox[{
          RowBox[{"MessageKerPoints01", "[", "sol", "]"}], ";", "\n", 
          "      ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"epsi1", " ", "!=", " ", "0"}], ",", "\n", "         ", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<epsi1=\>\"", ",", "epsi1"}], "]"}], ";", "\n", 
             "         ", "MessageKerPoints02", ";", "\n", "         ", 
             RowBox[{"KernelPoints", "[", 
              RowBox[{
              "newgame", ",", " ", "initialpay", ",", "callm", ",", 
               "changeps", ",", "dispres", ",", 
               RowBox[{"EpsilonValue", " ", "->", " ", "0"}], ",", " ", 
               RowBox[{
               "SetGameToNonZeroMonotonic", " ", "->", " ", "notzeromono"}]}],
               "]"}]}], ",", "\n", "           ", 
            RowBox[{
             RowBox[{"epsilon", " ", "=", " ", 
              RowBox[{
               RowBox[{"FirstCriticalVal", "[", "newgame", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
             "           ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"epsilon", " ", "==", " ", "0"}], ",", "\n", 
               "                ", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<eps=\>\"", ",", "epsilon"}], "]"}], ";", "\n", 
                "                ", 
                RowBox[{"epsilon", " ", "=", " ", 
                 RowBox[{
                  RowBox[{"SecondCriticalVal", "[", "newgame", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
                "                ", 
                RowBox[{"leastgame", " ", "=", " ", 
                 RowBox[{"EpsValue", "[", 
                  RowBox[{"newgame", ",", " ", "epsilon"}], "]"}]}], ";", 
                "\n", "                ", 
                RowBox[{"KernelPoints", "[", 
                 RowBox[{
                 "leastgame", ",", " ", "initialpay", ",", "callm", ",", 
                  "changeps", ",", "dispres", ",", 
                  RowBox[{"EpsilonValue", " ", "->", " ", "epsilon"}], ",", 
                  " ", 
                  RowBox[{
                  "SetGameToNonZeroMonotonic", " ", "->", " ", 
                   "notzeromono"}]}], "]"}]}], ",", "\n", "           ", 
               RowBox[{
                RowBox[{"leastgame", " ", "=", " ", 
                 RowBox[{"EpsValue", "[", 
                  RowBox[{"newgame", ",", " ", "epsilon"}], "]"}]}], ";", 
                "\n", "           ", 
                RowBox[{"KernelPoints", "[", 
                 RowBox[{
                 "leastgame", ",", " ", "initialpay", ",", "callm", ",", 
                  "changeps", ",", "dispres", ",", 
                  RowBox[{"EpsilonValue", " ", "->", " ", "0"}], ",", " ", 
                  RowBox[{
                  "SetGameToNonZeroMonotonic", " ", "->", " ", 
                   "notzeromono"}]}], "]"}]}]}], "\n", "              ", 
              "]"}]}]}], "\n", "         ", "]"}]}]}], "\n", "       ", 
        "]"}]}]}], "\n", "    ", "]"}]}], ";"}]}]], "Code",ExpressionUUID->\
"5d16816f-5d60-4770-beb3-dc5cac83f374"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MessageKerPoints01", "[", "erg_", "]"}], " ", ":=", " ", "\n", 
    "   ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "         ", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<At least one player outweighs another player.\>\"", 
        "]"}], ";", " ", "\n", "         ", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<A further calculation loop is required.\\n\>\"", ",", " ", 
         "erg"}], "]"}], ";"}]}], "\n", "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MessageKerPoints02", " ", ":=", "\n", "   ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "        ", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Solution is not balanced.\>\"", "]"}], ";", 
       "\n", "        ", 
       RowBox[{
       "Print", "[", "\"\<The solution found may be a Kernel element.\>\"", 
        "]"}], ";", "\n", "        ", 
       RowBox[{
       "Print", "[", 
        "\"\<Check solution with the function KernelImputationQ or \
MaxExcessBalanced.\>\"", "]"}], ";"}]}], "\n", "   ", "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"NewKernel", " ", "section", " ", "starts"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Description", " ", "of", " ", "the", " ", "algorithm", " ", "can", " ", 
    "be", " ", "found", " ", "in", " ", "section", " ", "5", " ", "in", " ", 
    "Meinhardt", " ", 
    RowBox[{"(", "2006", ")"}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Kernel", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Kernel", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Kernel", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "Kernel", "]"}]}]}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "chopt", ",", " ", "dispres", ",", " ", "eps", ",", " ", "kersol", ",",
         " ", "coreq", ",", "orgval", ",", "callm"}], "}"}], ",", "\n", 
      "       ", 
      RowBox[{
       RowBox[{"dispres", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"eps", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"callm", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "CallMaximize", "]"}]}], ";", "\n", 
       "       ", 
       RowBox[{"orgval", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Subsets", "[", "T", "]"}]}], "]"}]}], ";", " ", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"EpsValue", "[", "]"}], " ", "changes", " ", "the", " ", 
         "coalitional", " ", 
         RowBox[{"values", ".", " ", "orgval"}], " ", "store", " ", "the", 
         " ", "original", " ", 
         RowBox[{"values", "."}]}], "  ", "*)"}], "\n", "       ", 
       RowBox[{"kersol", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "eps", "]"}], "==", "1"}], ",", "\n", 
          "         ", 
          RowBox[{
           RowBox[{"coreq", " ", "=", " ", 
            RowBox[{"CoreQ", "[", "game", "]"}]}], ";", "\n", "          ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"eps", " ", "==", " ", "0"}], ",", " ", "\n", 
             "             ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"coreq", " ", "==", " ", "False"}], ",", " ", 
               RowBox[{"KernelSubCallFir", "[", 
                RowBox[{"game", ",", "dispres", ",", "callm"}], "]"}], ",", 
               " ", 
               RowBox[{"KernelSubCallSec", "[", 
                RowBox[{"game", ",", "dispres", ",", "callm"}], "]"}]}], "\n",
               "               ", "]"}], ",", " ", 
             RowBox[{"KernelSubCallThir", "[", 
              RowBox[{"game", ",", "eps", ",", "dispres", ",", "callm"}], 
              "]"}]}], "\n", "            ", "]"}]}], ",", " ", 
          RowBox[{"DisplayRemark", "[", "eps", "]"}]}], "    ", "\n", 
         "          ", "]"}]}], ";", "\n", "        ", 
       RowBox[{"DefineGame", "[", 
        RowBox[{"T", ",", "orgval"}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Reconstruction", " ", "of", " ", "the", " ", "original", " ", 
         RowBox[{"game", "."}]}], " ", "*)"}], "\n", "        ", "kersol"}]}],
      "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelSubCallFir", "[", 
    RowBox[{"game_", ",", "dispres_", ",", "callm_"}], "]"}], ":=", " ", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "firstcrit", ",", "seccrit", ",", "newgame", ",", "nb", ",", 
       "alldelvar", ",", "dvar", ",", "objfunc", ",", "var", ",", "solut", 
       ",", "kersol", ",", "tra"}], "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"firstcrit", " ", "=", " ", 
       RowBox[{
        RowBox[{"FirstCriticalVal", "[", "game", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\n", "        ", 
      RowBox[{"newgame", " ", "=", " ", 
       RowBox[{"EpsValue", "[", 
        RowBox[{"game", ",", " ", "firstcrit"}], "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "alldelvar", ",", "dvar"}], "}"}], " ", "=", " ", 
       RowBox[{"AllConstraints", "[", "newgame", "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"objfunc", "=", " ", 
       RowBox[{"Total", "[", "dvar", "]"}]}], ";", "\n", "        ", 
      RowBox[{"var", "=", " ", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"x", " ", "/@", " ", "T"}], ",", " ", "alldelvar"}], "]"}]}],
       ";", "\n", "        ", 
      RowBox[{"solut", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"callm", ",", "False"}], "]"}], ",", 
         RowBox[{"ConstrainedMax", "[", 
          RowBox[{"objfunc", ",", "nb", ",", "var"}], "]"}], ",", "\n", 
         "                              ", "True", ",", 
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"NMaximize", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{"nb", ",", "objfunc"}], "]"}], ",", "var"}], "]"}], ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "12"}], ")"}]}]}], "]"}]}], "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"kersol", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", " ", "/@", " ", "T"}], ")"}], " ", "/.", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"solut", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}]}], ";", "\n", 
      "        ", 
      RowBox[{"tra", "=", " ", 
       RowBox[{"dvar", " ", "/.", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"solut", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Length", "[", "alldelvar", "]"}]}]}], "]"}]}]}], ";", 
      "\n", "        ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"dispres", ",", "False"}], "]"}], ",", " ", "kersol", ",", 
        " ", "True", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "kersol", ",", "objfunc", ",", "nb", ",", "var", ",", "tra"}], 
         "}"}]}], "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->\
"bfa3364d-db41-4b4b-a45b-2d70abe61595"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KernelSubCallSec", "[", 
     RowBox[{"game_", ",", "dispres_", ",", "callm_"}], "]"}], ":=", " ", 
    "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nb", ",", "alldelvar", ",", "dvar", ",", "objfunc", ",", "var", ",", 
        "solut", ",", "kersol", ",", "tra"}], "}"}], ",", "\n", 
      "             ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nb", ",", "alldelvar", ",", "dvar"}], "}"}], " ", "=", " ", 
        
        RowBox[{"AllConstraints", "[", "game", "]"}]}], ";", " ", "\n", 
       "             ", 
       RowBox[{"objfunc", "=", " ", 
        RowBox[{"Total", "[", "dvar", "]"}]}], ";", "\n", "             ", 
       RowBox[{"var", "=", " ", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{"x", " ", "/@", " ", "T"}], ",", " ", "alldelvar"}], 
         "]"}]}], ";", "\n", "             ", 
       RowBox[{"solut", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"callm", ",", "False"}], "]"}], ",", 
          RowBox[{"ConstrainedMax", "[", 
           RowBox[{"objfunc", ",", "nb", ",", "var"}], "]"}], ",", "\n", 
          "                                   ", "True", ",", 
          RowBox[{"Rationalize", "[", 
           RowBox[{
            RowBox[{"NMaximize", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{"nb", ",", "objfunc"}], "]"}], ",", "var"}], "]"}], 
            ",", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "12"}], ")"}]}]}], "]"}]}], "]"}]}], ";", "\n", 
       "             ", 
       RowBox[{"kersol", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", " ", "/@", " ", "T"}], ")"}], " ", "/.", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"solut", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}]}]}], ";", "\n", 
       "             ", 
       RowBox[{"tra", "=", " ", 
        RowBox[{"dvar", " ", "/.", " ", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"solut", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Length", "[", "alldelvar", "]"}]}]}], "]"}]}]}], ";", 
       "\n", "             ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"dispres", ",", "False"}], "]"}], ",", " ", "kersol", ",", 
         " ", "True", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "kersol", ",", "objfunc", ",", "nb", ",", "var", ",", "tra"}], 
          "}"}]}], "]"}]}]}], "\n", "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelSubCallThir", "[", 
    RowBox[{"game_", ",", "eps_", ",", "dispres_", ",", "callm_"}], "]"}], ":=",
    " ", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "newgame", ",", "nb", ",", "alldelvar", ",", "dvar", ",", "objfunc", 
       ",", "var", ",", "solut", ",", "kersol", ",", "tra"}], "}"}], ",", 
     "\n", "      ", 
     RowBox[{
      RowBox[{"newgame", " ", "=", " ", 
       RowBox[{"EpsValue", "[", 
        RowBox[{"game", ",", " ", "eps"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nb", ",", "alldelvar", ",", "dvar"}], "}"}], " ", "=", " ", 
       RowBox[{"AllConstraints", "[", "newgame", "]"}]}], ";", "\n", "      ", 
      RowBox[{"objfunc", "=", " ", 
       RowBox[{"Total", "[", "dvar", "]"}]}], ";", "\n", "      ", 
      RowBox[{"var", "=", " ", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"x", " ", "/@", " ", "T"}], ",", " ", "alldelvar"}], "]"}]}],
       ";", "\n", "      ", 
      RowBox[{"solut", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"callm", ",", "False"}], "]"}], ",", 
         RowBox[{"ConstrainedMax", "[", 
          RowBox[{"objfunc", ",", "nb", ",", "var"}], "]"}], ",", "\n", 
         "                            ", "True", ",", 
         RowBox[{"Rationalize", "[", 
          RowBox[{
           RowBox[{"NMaximize", "[", 
            RowBox[{
             RowBox[{"Prepend", "[", 
              RowBox[{"nb", ",", "objfunc"}], "]"}], ",", "var"}], "]"}], ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "12"}], ")"}]}]}], "]"}]}], "]"}]}], ";", "\n", 
      "      ", 
      RowBox[{"kersol", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", " ", "/@", " ", "T"}], ")"}], " ", "/.", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"solut", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}]}], ";", "\n", "      ", 
      RowBox[{"tra", "=", " ", 
       RowBox[{"dvar", " ", "/.", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"solut", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Length", "[", "alldelvar", "]"}]}]}], "]"}]}]}], ";", 
      "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"dispres", ",", "False"}], "]"}], ",", " ", "kersol", ",", 
        " ", "True", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "kersol", ",", "objfunc", ",", "nb", ",", "var", ",", "tra"}], 
         "}"}]}], "]"}]}]}], "\n", "\n", "]"}]}], ";"}]}], "Code",ExpressionUU\
ID->"e52858b1-4eb3-4bc3-af61-6d68af24f9ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Constructing", " ", "the", " ", "one", " ", "large", " ", "LP", " ", 
    "for", " ", 
    RowBox[{"Kernel", "[", "]"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AllConstraints", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"AllConstraints", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllConstraints", "[", "game_", "]"}], ":=", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"anf", "=", "T"}], ",", "rest", ",", "pi", ",", "pj", ",", 
         "const", ",", 
         RowBox[{"conset", "=", 
          RowBox[{"{", "}"}]}], ",", "sub", ",", 
         RowBox[{"deltaset", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"deltavar", "=", 
          RowBox[{"{", "}"}]}], ",", "newconst", ",", "constsys"}], "}"}], 
       ",", "\n", "      ", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "anf", "]"}], ">", "1"}], ",", "\n", 
          "      ", 
          RowBox[{
           RowBox[{"pi", "=", 
            RowBox[{"First", "[", "anf", "]"}]}], ";", "\n", "      ", 
           RowBox[{"rest", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"anf", ",", "1"}], "]"}]}], ";", "\n", "      ", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "rest", "]"}], ">", "0"}], ",", 
             RowBox[{
              RowBox[{"pj", "=", 
               RowBox[{"First", "[", "rest", "]"}]}], ";", "\n", "        ", 
              RowBox[{"const", "=", 
               RowBox[{"TransferConstraints", "[", 
                RowBox[{"game", ",", "pi", ",", "pj"}], "]"}]}], ";", "\n", 
              "        ", 
              RowBox[{"sub", "=", 
               RowBox[{"MapThread", "[", 
                RowBox[{"Rule", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", " ", "Global`\[Delta]", " ", "}"}], ",", " ", 
                   
                   RowBox[{"{", 
                    RowBox[{"Global`\[Delta]", "[", 
                    RowBox[{"pi", ",", "pj"}], "]"}], "}"}]}], "}"}]}], 
                "]"}]}], ";", "\n", "        ", 
              RowBox[{"deltavar", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"deltavar", ",", 
                 RowBox[{"{", 
                  RowBox[{"Global`\[Delta]", "[", 
                   RowBox[{"pi", ",", "pj"}], "]"}], "}"}]}], "]"}]}], ";", 
              "\n", "        ", 
              RowBox[{"newconst", "=", 
               RowBox[{"const", "/.", "sub"}]}], ";", "\n", "        ", 
              RowBox[{"conset", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"conset", ",", "newconst"}], "]"}]}], ";", "\n", 
              "        ", 
              RowBox[{"rest", "=", 
               RowBox[{"Drop", "[", 
                RowBox[{"rest", ",", "1"}], "]"}]}], ";"}]}], "\n", 
            "        ", "]"}], ";", "\n", "      ", 
           RowBox[{"anf", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"anf", ",", "1"}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
        "    ", 
        RowBox[{"constsys", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "[", "conset", "]"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"constsys", ",", 
          RowBox[{"Flatten", "[", "deltavar", "]"}], ",", 
          RowBox[{"Flatten", "[", "deltavar", "]"}]}], "}"}]}]}], "\n", 
      "    ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"NewKernel", " ", "section", " ", "ends"}], " ", "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Section", " ", "starts", " ", "to", " ", "determine", " ", "a", " ", 
     "Kernel", " ", "Range", " ", "from", " ", "an", " ", 
     RowBox[{"LP", "."}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelVertices", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"KernelVertices", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"KernelVertices", "[", 
      RowBox[{"game_", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "KernelVertices", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "callm", ",", " ", "sil", ",", " ", "epsval", ",", " ", "fieps", ",", 
         " ", "kerli", ",", " ", "ratkli", ",", " ", "sol", ",", " ", "obj", 
         ",", " ", "const", ",", " ", "var", ",", " ", "trans", ",", "kerQ", 
         ",", "posker", ",", "prkQ", ",", "posprk", ",", "kl", ",", "pkl"}], 
        "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"callm", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "CallMaximize", "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"sil", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
        RowBox[{"epsval", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"fieps", "=", " ", 
         RowBox[{
          RowBox[{"FirstCriticalVal", "[", "game", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"epsval", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"epsval", " ", "<", " ", "fieps"}], ",", " ", "fieps", ",",
            "epsval"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "sol", ",", " ", "obj", ",", " ", "const", ",", " ", "var", ",", 
           " ", "trans"}], "}"}], " ", "=", " ", "\n", "      ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"callm", ",", "True"}], "]"}], ",", "  ", 
           RowBox[{"Kernel", "[", 
            RowBox[{"game", ",", " ", 
             RowBox[{"CallMaximize", " ", "->", " ", "True"}], ",", " ", 
             RowBox[{"EpsilonValue", " ", "->", " ", "epsval"}], ",", " ", 
             RowBox[{"DisplayAllResults", " ", "->", " ", "True"}]}], "]"}], 
           ",", " ", "\n", "            ", "True", ",", "  ", 
           RowBox[{"Kernel", "[", 
            RowBox[{"game", ",", " ", 
             RowBox[{"CallMaximize", " ", "->", " ", "False"}], ",", " ", 
             RowBox[{"EpsilonValue", " ", "->", " ", "epsval"}], ",", " ", 
             RowBox[{"DisplayAllResults", " ", "->", " ", "True"}]}], "]"}]}],
           "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<sol: \>\"", ",", " ", "sol"}], "]"}], ",", "True"}], 
         "]"}], ";", "\n", "    ", 
        RowBox[{"kerli", " ", "=", " ", 
         RowBox[{"DetermineAddVertices", "[", 
          RowBox[{
           RowBox[{"{", "sol", "}"}], ",", " ", "obj", ",", " ", "const", ",",
            " ", "var", ",", " ", "T", ",", " ", "callm", ",", "sil"}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<kerli: \>\"", ",", " ", "kerli"}], "]"}], ",", " ", 
          "True"}], "]"}], ";", "\n", "    ", 
        RowBox[{"ratkli", " ", "=", " ", 
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rationalize", "[", 
             RowBox[{"#", ",", 
              RowBox[{"1.5", "*", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "12"}], ")"}]}]}]}], "]"}], "&"}], "/@", " ", 
           "kerli"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"kerQ", "=", 
         RowBox[{"KernelImputationListQ", "[", 
          RowBox[{"game", ",", "ratkli"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"prkQ", "=", 
         RowBox[{"PreKernelQ", "[", 
          RowBox[{"game", ",", "ratkli"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"posker", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"kerQ", ",", "True"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"posprk", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"prkQ", ",", "True"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"kl", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Extract", "[", 
           RowBox[{"ratkli", ",", " ", "posker"}], "]"}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"pkl", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Extract", "[", 
           RowBox[{"ratkli", ",", " ", "posprk"}], "]"}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"kl", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"pkl", ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<Pre-Kernel Element found!\>\"", "]"}],
              ";", "pkl"}]}], "]"}], ",", "kl"}], "]"}]}]}], "\n", "    ", 
      "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"91e579cc-f3f5-483c-8a41-\
38b07943000b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DetermineAddVertices", "[", 
    RowBox[{
    "sol_", ",", " ", "obj_", ",", " ", "const_", " ", ",", " ", "var_", " ", 
     ",", " ", "T_", ",", " ", "callm_", ",", "sil_", ",", " ", 
     RowBox[{"zf_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nwzf", ",", "dures", ",", "valzf", ",", "boolzf", ",", "dualvar", ",", 
       "yset", ",", "duyp", ",", "newineq", ",", "nwsol", ",", "prmax", ",", 
       "lngt", ",", "kersolQ", ",", 
       RowBox[{"oldres", "=", "sol"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"nwzf", " ", "=", " ", 
       RowBox[{"Total", "[", "var", "]"}]}], ";", "\n", "    ", 
      RowBox[{"dures", " ", "=", " ", 
       RowBox[{"SolveDual", "[", 
        RowBox[{"nwzf", ",", " ", "const", ",", " ", "var"}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"valzf", " ", "=", " ", 
       RowBox[{"dures", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"boolzf", " ", "=", " ", 
       RowBox[{"SameQ", "[", 
        RowBox[{"valzf", ",", "zf"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"boolzf", ",", "True"}], "]"}], ",", " ", 
        RowBox[{"Return", "[", "oldres", "]"}], ",", " ", "True", ",", " ", 
        "True"}], "]"}], ";", "\n", "    ", 
      RowBox[{"dualvar", " ", "=", " ", 
       RowBox[{"Global`y", " ", "/@", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"dures", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
      ";", "\n", "    ", 
      RowBox[{"yset", " ", "=", " ", 
       RowBox[{"dualvar", " ", "/.", " ", 
        RowBox[{"dures", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"duyp", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"yset", ",", " ", "0"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"newineq", " ", "=", " ", 
       RowBox[{"Extract", "[", 
        RowBox[{"const", ",", " ", "duyp"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"nwsol", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"callm", ",", "True"}], "]"}], ",", " ", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"NMaximize", "[", 
           RowBox[{
            RowBox[{"Prepend", "[", 
             RowBox[{"newineq", ",", "nwzf"}], "]"}], ",", "var"}], "]"}], 
          "]"}], ",", " ", "\n", "                  ", "True", ",", " ", 
         RowBox[{"ConstrainedMax", "[", 
          RowBox[{"nwzf", ",", " ", "newineq", ",", " ", "var"}], "]"}]}], 
        "]"}]}], ";", "\n", "    ", 
      RowBox[{"prmax", " ", "=", " ", 
       RowBox[{"nwsol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"sil", ",", "False"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<DualSol: \>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"dures", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"dures", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "duyp"}], "]"}]}], 
            "}"}]}], "]"}], ";", "\n", "                           ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<PrimalSol: \>\"", ",", "nwsol"}], "]"}], ";"}], ",", 
        "\n", "                ", "True", ",", "True"}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"lngt", " ", "=", " ", 
       RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "    ", 
      RowBox[{"kersolQ", " ", "=", " ", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"var", ",", " ", "lngt"}], "]"}], " ", "/.", " ", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"nwsol", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", "lngt"}], "]"}]}]}], ";",
       "\n", "    ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"oldres", ",", " ", "kersolQ"}], "]"}], ";", "\n", "    ", 
      RowBox[{"oldres", " ", "=", " ", 
       RowBox[{"Union", "[", "oldres", "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"sol", ",", "oldres"}], "]"}], " ", "&&", " ", 
          RowBox[{"Greater", "[", 
           RowBox[{
            RowBox[{"2", "*", "prmax"}], ",", "valzf"}], "]"}]}], ")"}], ",", 
        " ", "oldres", ",", " ", "True", ",", " ", "\n", "      ", 
        RowBox[{"DetermineAddVertices", "[", 
         RowBox[{
         "oldres", ",", " ", "obj", ",", " ", "newineq", ",", " ", "var", ",",
           " ", "T", ",", " ", "callm", ",", " ", "sil", ",", " ", "valzf"}], 
         "]"}]}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->\
"7abbc4c0-14f5-4786-b039-838d11f2b51a"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Section", " ", "ends", " ", "to", " ", "determine", " ", "a", " ", 
   "Kernel", " ", "Range", " ", "from", " ", "an", " ", 
   RowBox[{"LP", "."}]}], " ", "*)"}]], "Code",ExpressionUUID->"b195da85-acf3-\
4c71-9a2c-ad2f25bc878b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Section", " ", "starts", " ", "to", " ", "determine", " ", "a", " ", 
     "PreKernel", " ", "solution", " ", "by", " ", "a", " ", "modified", " ", 
     "SDM"}], "-", "Method"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", "\n", "  ", 
   RowBox[{"First", ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "introduce", " ", "the", " ", "user", " ", "interface", " ", 
      "to", " ", "compute", " ", "an", " ", "anti"}], "-", "pre", "-", 
     RowBox[{"kernel", " ", "of", " ", "the", " ", 
      RowBox[{"game", ".", "\n", "  ", "The"}], " ", "anti"}], "-", "pre", 
     "-", 
     RowBox[{
     "kernel", " ", "solution", " ", "is", " ", "just", " ", "a", " ", 
      "reflection", " ", "of", " ", "the", " ", "pre"}], "-", 
     RowBox[{"kernel", " ", 
      RowBox[{"solution", ".", " ", "Instead"}], "\n", "  ", "of", " ", 
      "balancing", " ", "the", " ", "maximum", " ", "excesses", " ", "among", 
      " ", "each", " ", "pair", " ", "of", " ", "player"}]}], ",", " ", 
    RowBox[{
     RowBox[{"it", " ", "balances", " ", "the", " ", "minimal", "\n", "  ", 
      RowBox[{"excesses", ".", " ", "A"}], " ", "formal", " ", "definition", 
      " ", "of", " ", "the", " ", "anti"}], "-", "pre", "-", 
     RowBox[{"kernel", " ", "can", " ", "be", " ", "found", " ", "in", " ", 
      RowBox[{"Y", ".", " ", "Funaki"}], " ", "and", "\n", "  ", 
      RowBox[{"H", ".", " ", "Meinhardt"}], " ", 
      RowBox[{
       RowBox[{"(", "2006", ")"}], "."}]}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AntiPreKernelSolution", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"AntiPreKernelSolution", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AntiPreKernelSolution", "[", 
      RowBox[{"game_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "AntiPreKernelSolution", "]"}]}]}], 
      "]"}], " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"pay", " ", "=", " ", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "[", "T", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
          RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
        RowBox[{"AntiPreKernelSolution", "[", 
         RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
      "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"a4b4b848-c033-4d61-9fc3-\
8986f37b9337"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AntiPreKernelSolution", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "AntiPreKernelSolution", "]"}]}]}], 
     "]"}], " ", ":=", " ", "\n", "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "showzf", ",", "rattol", ",", "conjfu", ",", "sil", ",", "anti", ",", 
        "mth", ",", "ext"}], "}"}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{"showzf", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "ShowObjectiveFunction", "]"}]}], ";", 
       "\n", "      ", 
       RowBox[{"rattol", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalTol", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"conjfu", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "ConjugateFunction", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "      ", 
       RowBox[{"anti", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "AntiPreKernel", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"mth", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", " ", "\n", 
       "      ", 
       RowBox[{"ext", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SolutionExact", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"PreKernelSolution", "[", 
        RowBox[{"game", ",", " ", "payoff", ",", " ", 
         RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
         RowBox[{"ConjugateFunction", " ", "->", " ", "conjfu"}], ",", " ", 
         RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
         RowBox[{"ShowObjectiveFunction", " ", "->", " ", "showzf"}], ",", 
         " ", 
         RowBox[{"RationalTol", " ", "->", " ", "rattol"}], ",", " ", 
         RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
         RowBox[{"SolutionExact", " ", "->", " ", "ext"}]}], "]"}]}]}], "\n", 
     " ", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "\n", "  ", 
   RowBox[{
    RowBox[{
    "User", " ", "interface", " ", "to", " ", "calculate", " ", "a", " ", 
     "pre"}], "-", 
    RowBox[{
    "kernel", " ", "solution", " ", "by", " ", "a", " ", "mixture", " ", "of",
      " ", "Algorithm", " ", "8.1", ".1", "\n", "  ", "and", " ", "8.2", ".1",
      " ", "of", " ", "Meinhardt", " ", 
     RowBox[{
      RowBox[{"(", "2013", ")"}], ".", "\n", "  ", "The"}], " ", "algorithms",
      " ", "rely", " ", "on", " ", "the", " ", "indirect", " ", "function", 
     " ", 
     RowBox[{"approach", ".", " ", "See"}], " ", "Meseguer"}], "-", 
    RowBox[{"Artola", " ", 
     RowBox[{"(", "1997", ")"}], " ", "and", " ", "Meinhardt", " ", 
     RowBox[{
      RowBox[{"(", "2013", ")"}], ".", "\n", "  ", "The"}], " ", "indirect", 
     " ", "characteristic", " ", "function", " ", "is", " ", "the", " ", 
     "conjugate", " ", 
     RowBox[{"(", 
      RowBox[{"Fenchel", " ", "transform"}], ")"}], " ", "of", " ", "the", 
     " ", "characteristic", " ", 
     RowBox[{"function", ".", "\n", "  ", "See"}], " ", "Martinez"}], "-", 
    RowBox[{"Legaz", " ", 
     RowBox[{
      RowBox[{"(", "1996", ")"}], "."}]}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreKernelSolution", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"PreKernelSolution", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreKernelSolution", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "PreKernelSolution", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"pay", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
        RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"PreKernelSolution", "[", 
       RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"3afff4e4-06c1-4659-a3b6-\
13557a0a7224"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PreKernelSolution", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "PreKernelSolution", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dimCorQ", ",", " ", "showzf", ",", "rattol", ",", "conjfu", ",", 
        "sil", ",", "anti", ",", "mth", ",", "ext", ",", "allres", ",", 
        "ratres", ",", "res", ",", "detobj", ",", "grad", ",", "conj", ",", 
        "smc", ",", "rclim"}], "}"}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{"Off", "[", 
        RowBox[{"FindMinimum", "::", "fmgz"}], "]"}], ";", "\n", "      ", 
       RowBox[{"dimCorQ", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "3"}], ",",
           " ", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], " ", "===", " ", 
               RowBox[{"Length", "[", "T", "]"}]}], ",", "True", ",", " ", 
              "False"}], "]"}], "&"}], "/@", " ", "payoff"}], ",", "\n", 
          "                      ", 
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}], ",",
           " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "payoff", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], ",", "True", ",", " ", 
            "False"}], "]"}], ",", " ", "\n", "                      ", 
          "True", ",", " ", "False"}], "\n", "                ", "]"}]}], ";",
        "\n", "      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", "dimCorQ"}], "]"}], "===", "False"}], ",", 
         RowBox[{"WrongDimension", ";", 
          RowBox[{"Return", "[", "]"}]}], ",", "True"}], "]"}], ";", "\n", 
       "      ", 
       RowBox[{"showzf", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "ShowObjectiveFunction", "]"}]}], ";", 
       "\n", "      ", 
       RowBox[{"rattol", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalTol", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"conjfu", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "ConjugateFunction", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "      ", 
       RowBox[{"anti", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "AntiPreKernel", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"mth", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", "      ", 
       RowBox[{"ext", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SolutionExact", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", "\n",
        "      ", 
       RowBox[{"rclim", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "T", "]"}], " ", ">", " ", "11"}], ",", 
          "256", ",", "156"}], "]"}]}], ";", "\n", "      ", 
       RowBox[{"allres", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}], ",", 
          " ", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], ",", 
            
            RowBox[{
             RowBox[{
              RowBox[{"SDMPreKernel", "[", 
               RowBox[{"game", ",", "#", ",", "Infinity", ",", 
                RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
                RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
                RowBox[{"RationalTol", "->", "rattol"}], ",", " ", 
                RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
                RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}], ",", 
                " ", 
                RowBox[{"SolutionExact", " ", "->", " ", "ext"}]}], "]"}], 
              " ", "&"}], "/@", " ", "payoff"}]}], "]"}], ",", "\n", 
          "                     ", 
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], ",", 
          " ", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], ",", 
            
            RowBox[{"SDMPreKernel", "[", 
             RowBox[{"game", ",", " ", "payoff", ",", "Infinity", ",", " ", 
              RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
              RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
              RowBox[{"RationalTol", "->", "rattol"}], ",", "  ", 
              RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
              RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}], ",", 
              " ", 
              RowBox[{"SolutionExact", " ", "->", " ", "ext"}]}], "]"}]}], 
           "]"}], ",", "\n", "                     ", "True", ",", " ", 
          RowBox[{"DisplayMessFindKernel", "[", "payoff", "]"}]}], "\n", 
         "                     ", "]"}]}], ";", "\n", "      ", 
       RowBox[{"ratres", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ext", "===", "False"}], ",", 
          RowBox[{"Chop", "[", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"allres", ",", "rattol"}], "]"}], "]"}], ",", "allres"}], 
         "]"}]}], ";", "\n", "      ", 
       RowBox[{"res", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "3"}], ",", 
          " ", 
          RowBox[{"Union", "[", "ratres", "]"}], ",", "\n", 
          "                  ", 
          RowBox[{
           RowBox[{"Depth", "[", "payoff", "]"}], " ", "==", " ", "2"}], ",", 
          " ", "ratres", ",", "\n", "                  ", "True", ",", 
          "ratres"}], "\n", "                  ", "]"}]}], ";", "\n", 
       "      ", 
       RowBox[{"detobj", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "res", "]"}], "==", " ", "3"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"DetObjFunc", "[", 
             RowBox[{"game", ",", "#", ",", 
              RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
              RowBox[{"Silent", " ", "->", " ", "sil"}]}], "]"}], "&"}], "/@",
            " ", "res"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"DetObjFunc", "[", 
            RowBox[{"game", ",", "res", ",", " ", 
             RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
             RowBox[{"Silent", " ", "->", " ", "sil"}]}], "]"}], "}"}]}], 
         "]"}]}], ";", "\n", "      ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"grad", ",", "conj"}], "}"}], " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"conjfu", " ", "===", " ", "True"}], ",", " ", "\n", 
          "                      ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "detobj", "]"}], " ", "===", " ", 
             RowBox[{"Length", "[", "res", "]"}]}], ",", " ", 
            RowBox[{"FormatConjugateRes", "[", 
             RowBox[{"game", ",", "detobj", ",", " ", 
              RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
              RowBox[{"SolutionExact", " ", "->", " ", "ext"}]}], " ", "]"}], 
            " ", ",", "\n", "                            ", 
            RowBox[{
             RowBox[{"Length", "[", "detobj", "]"}], " ", "===", " ", "1"}], 
            ",", " ", 
            RowBox[{"ConvexConjugate", "[", 
             RowBox[{"game", ",", "detobj", ",", " ", 
              RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
              RowBox[{"SolutionExact", " ", "->", " ", "ext"}]}], "]"}], ",", 
            "\n", "                            ", "True", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "}"}]}], "}"}]}], "]"}], ",", "\n", 
          "                      ", "True", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "}"}]}], "}"}]}], "\n", "                         ", 
         "]"}]}], ";", "\n", "      ", 
       RowBox[{"grad", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "grad", "]"}], " ", "==", " ", "3"}], ",", 
          " ", 
          RowBox[{"Union", "[", "grad", "]"}], ",", "\n", 
          "                  ", 
          RowBox[{
           RowBox[{"Depth", "[", "grad", "]"}], " ", "==", " ", "2"}], ",", 
          " ", "grad", ",", "\n", "                  ", "True", ",", "grad"}],
          "\n", "                  ", "]"}]}], ";", "\n", "      ", 
       RowBox[{"detobj", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "conj", "]"}], " ", "===", " ", "0"}], ",", 
          " ", "detobj", ",", " ", "\n", "                   ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "detobj", "]"}], " ", "===", " ", 
             RowBox[{"Length", "[", "res", "]"}]}], ",", " ", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "#1", "}"}], ",", "#2"}], "}"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"detobj", ",", "conj"}], "}"}]}], "]"}], ",", "\n", 
            "                         ", 
            RowBox[{
             RowBox[{"Length", "[", "detobj", "]"}], " ", "===", " ", "1"}], 
            ",", " ", 
            RowBox[{"FlattenAt", "[", 
             RowBox[{
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "#1", "}"}], ",", 
                   RowBox[{"{", "#2", "}"}]}], "}"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"detobj", ",", "conj"}], "}"}]}], "]"}], ",", "1"}], 
             "]"}], ",", "\n", "                         ", "True", ",", " ", 
            
            RowBox[{"MapThread", "[", 
             RowBox[{"List", ",", 
              RowBox[{"{", 
               RowBox[{"detobj", ",", "conj"}], "}"}]}], "]"}]}], "\n", 
           "                         ", "]"}]}], "\n", "                 ", 
         "]"}]}], ";", "\n", "      ", 
       RowBox[{"On", "[", 
        RowBox[{"FindMinimum", "::", "fmgz"}], "]"}], ";", "\n", "      ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"showzf", " ", "===", " ", "False"}], ",", " ", "res", ",", 
         " ", "\n", "                 ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Depth", "[", "res", "]"}], "===", "3"}], " ", "&&", 
              " ", 
              RowBox[{
               RowBox[{"Length", "[", "res", "]"}], "===", "1"}]}], ")"}], "===",
             "True"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Flatten", "[", "res", "]"}], ",", " ", "detobj", ",", 
             "grad"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"res", ",", "detobj", ",", "grad"}], "}"}]}], "]"}]}], 
        "]"}]}]}], "\n", "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WrongDimension", ":=", 
    RowBox[{"(", 
     RowBox[{
     "Print", "[", "\"\<Payoff vector has not the correct dimension!\>\"", 
      "]"}], ")"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WrongCoordDimension", "[", "T_", "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "      ", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<List of unanimity coordinates of size 2 has not the correct \
length!\>\"", "]"}], ";", "\n", "      ", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<The correct dimension is: \>\"", ",", " ", 
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}]}], "]"}], 
      ";"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WrongCoordDimension", "[", 
    RowBox[{"coord_List", ",", "T_"}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "      ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<List of unanimity coordinates of length \>\"", ",", " ", 
        RowBox[{"Length", "[", "coord", "]"}]}], "]"}], ";", "\n", "      ", 
      RowBox[{"Print", "[", "\"\<is not correct!\>\"", "]"}], ";", "\n", 
      "      ", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<The correct dimension is: \>\"", ",", " ", 
        RowBox[{"2", "^", 
         RowBox[{"Length", "[", "T", "]"}]}]}], "]"}], ";"}]}], "\n", "]"}]}],
   ";"}], "\n"}], "Code",ExpressionUUID->"3220cb03-bf1b-40ee-b78c-\
edff38c5e920"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FormatConjugateRes", "[", 
     RowBox[{"game_", ",", "detobj_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "PreKernelSolution", "]"}]}]}], "]"}], ":=",
     " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sil", ",", "cr", ",", "gradv", ",", "cflist"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
       RowBox[{"ext", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SolutionExact", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"cr", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ConvexConjugate", "[", 
           RowBox[{"game", ",", "#", ",", " ", 
            RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
            RowBox[{"SolutionExact", " ", "->", " ", "False"}]}], "]"}], 
          "&"}], "/@", " ", "detobj"}]}], ";", "\n", "    ", 
       RowBox[{"gradv", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "cr"}]}], 
       ";", "\n", "    ", 
       RowBox[{"cflist", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], " ", "&"}], "/@", " ", "cr"}]}], 
       ";", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{"gradv", ",", "cflist"}], "}"}]}]}], "\n", "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", "\n", " ", 
   RowBox[{
    RowBox[{"Based", " ", "on", " ", "Algorithm", " ", 
     RowBox[{"8.1", ".", " ", "and"}], " ", "8.2", " ", "of", " ", 
     "Meinhardt"}], ",", " ", 
    RowBox[{
     RowBox[{"(", "2013", ")"}], "."}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SDMPreKernel", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", "optval_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "PreKernelSolution", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "smc", ",", "sil", ",", "anti", ",", "mth", ",", "rattol", ",", "ext", 
        ",", "rl", ",", "obj", ",", "var", ",", "init", ",", "minval", ",", 
        "nwpay", ",", "tolv", ",", "meff", ",", "matE", ",", "matQ", ",", 
        "vmeff", ",", "ralpv", ",", "alpv", ",", "bvec", ",", "solpay", ",", 
        "maxexc", ",", "sumexc", ",", "dfpy", ",", "leq"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{
       RowBox[{"anti", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "AntiPreKernel", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"ext", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SolutionExact", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"mth", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", "    ", 
       RowBox[{"rattol", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalTol", "]"}]}], ";", "\n", "    ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
       RowBox[{"var", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
       ";", "\n", "    ", 
       RowBox[{"rl", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{"var", ",", " ", "payoff"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ext", ",", "False"}], "]"}], ",", "\n", "       ", 
         RowBox[{
          RowBox[{"obj", " ", "=", " ", 
           RowBox[{"DetObjFunc", "[", 
            RowBox[{"game", ",", " ", "payoff", ",", " ", 
             RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
             RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
             RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], 
            "]"}]}], ";"}], ",", "      ", "\n", "        ", 
         RowBox[{
          RowBox[{"meff", " ", "=", " ", 
           RowBox[{"Bestcoalij01", "[", 
            RowBox[{"game", ",", " ", "payoff", ",", " ", 
             RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
             RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
             
             RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], 
            "]"}]}], ";", " ", "\n", "        ", 
          RowBox[{"matE", " ", "=", " ", 
           RowBox[{"Developer`ToPackedArray", "[", 
            RowBox[{"-", 
             RowBox[{"SetsToVec", "[", 
              RowBox[{"meff", ",", " ", "T", ",", " ", 
               RowBox[{"EffVector", " ", "->", " ", "True"}]}], "]"}]}], 
            "]"}]}], ";", "\n", "        ", 
          RowBox[{"matQ", " ", "=", " ", 
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{"Transpose", "[", "matE", "]"}], ".", "matE"}]}]}], ";", 
          "\n", "        ", 
          RowBox[{"vmeff", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "#", "]"}], " ", "&"}], ",", " ", "#"}], 
              "]"}], " ", "&"}], " ", "/@", " ", "meff"}]}], ";", "\n", 
          "        ", 
          RowBox[{"ralpv", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.", ",", " ", 
                RowBox[{"-", "1."}]}], "}"}], ".", "#"}], " ", "&"}], " ", "/@",
             " ", "vmeff"}]}], ";", "\n", "        ", 
          RowBox[{"alpv", " ", "=", " ", 
           RowBox[{"Prepend", "[", 
            RowBox[{"ralpv", ",", 
             RowBox[{"v", "[", "T", "]"}]}], "]"}]}], ";", "\n", "        ", 
          RowBox[{"bvec", " ", "=", " ", 
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{"Transpose", "[", "matE", "]"}], ".", "alpv"}]}]}], 
          ";"}]}], "\n", "       ", "]"}], ";", "\n", "    ", 
       RowBox[{"init", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", " ", 
          RowBox[{"{", 
           RowBox[{"var", ",", "payoff"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"minval", " ", "=", " ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"ext", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"sil", ",", "True"}], "]"}], ",", " ", 
            RowBox[{"FindMinimum", "[", 
             RowBox[{"obj", ",", " ", "init", ",", " ", 
              RowBox[{"Method", " ", "->", " ", "mth"}]}], "]"}], ",", " ", 
            RowBox[{"(*", 
             RowBox[{"Approximate", " ", "solution"}], " ", "*)"}], " ", "\n",
             "                                           ", 
            RowBox[{"FindMinimum", "[", 
             RowBox[{"obj", ",", " ", "init", ",", " ", 
              RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
              RowBox[{"StepMonitor", " ", ":>", " ", 
               RowBox[{"Print", "[", "init", "]"}]}]}], "]"}]}], "]"}], ",", 
          "\n", "                  ", "True", ",", " ", 
          RowBox[{"SolveLinEQ", "[", 
           RowBox[{"matQ", ",", "bvec", ",", "var", ",", " ", 
            RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
            RowBox[{"Silent", " ", "->", " ", "sil"}]}], "]"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Try", " ", "to", " ", "find", " ", "an", " ", "exact", " ", 
           "solution"}], " ", "*)"}], "\n", "             ", "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"solpay", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{"var", " ", "/.", " ", 
          RowBox[{"minval", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"tolv", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "8"}], ")"}]}]}], " ", "&"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"dfpy", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{"solpay", "-", "payoff"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"leq", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"LessEqual", ",", " ", 
          RowBox[{"{", 
           RowBox[{"dfpy", ",", "tolv"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"leq", ",", "True"}], "]"}], ",", 
         RowBox[{"Return", "[", "solpay", "]"}], ",", 
         RowBox[{"nwpay", "=", "solpay"}]}], "]"}], ";", "\n", "    ", 
       RowBox[{"maxexc", "  ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"anti", ",", "False"}], "]"}], ",", 
          RowBox[{"MaxSurpluses", "[", 
           RowBox[{"game", ",", "nwpay"}], "]"}], ",", 
          RowBox[{"AntiSurpluses", "[", 
           RowBox[{"game", ",", "nwpay"}], "]"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"sumexc", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Subtract", "[", 
                 RowBox[{"#2", ",", " ", "#1"}], "]"}], "^", "2"}], " ", 
               "&"}], ",", " ", 
              RowBox[{"Outer", "[", 
               RowBox[{"List", ",", " ", "#"}], "]"}]}], "]"}], " ", "&"}], 
           " ", "/@", " ", "maxexc"}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sil", ",", "False"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MessageSDMKer", "[", 
           RowBox[{"obj", ",", "minval", ",", "nwpay", ",", 
            RowBox[{"minval", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "maxexc", ",", "sumexc"}], 
           "]"}], ";", "\n", "        ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"ext", ",", "False"}], "]"}], ",", " ", 
            RowBox[{"SolveLinEQ", "[", 
             RowBox[{"matQ", ",", "bvec", ",", "var", ",", " ", 
              RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
              RowBox[{"Silent", " ", "->", " ", "False"}]}], "]"}], ",", 
            "True"}], "]"}]}], ",", "True"}], "]"}], ";", " ", "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Chop", "[", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"sumexc", ",", "rattol"}], "]"}], " ", "]"}], " ", "===", 
          " ", "0"}], ",", " ", "nwpay", ",", "  ", "\n", "               ", 
         RowBox[{"SDMPreKernel", "[", 
          RowBox[{"game", ",", " ", "nwpay", ",", " ", "sumexc", ",", " ", 
           RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
           RowBox[{"Method", " ", "->", " ", "mth"}], ",", " ", 
           RowBox[{"RationalTol", "->", "rattol"}], ",", 
           RowBox[{"Silent", " ", "->", " ", "sil"}], ",", 
           RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}], ",", 
           RowBox[{"SolutionExact", " ", "->", " ", "ext"}]}], "]"}]}], 
        "]"}]}]}], "\n", "   ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MessageSDMKer", "[", 
    RowBox[{
    "zfc_", ",", "minw_", ",", "nwaz_", ",", " ", "fucval_", ",", " ", 
     "mexc_", ",", " ", "addexc_"}], "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<The objective function h is: \>\"", ",", "zfc"}], "]"}], 
      ";", "\n", "        ", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<The local minimum of h is: \>\"", ",", 
        RowBox[{"N", "[", 
         RowBox[{"minw", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", "\n", 
      "        ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The local minimum of the objective function h is at:\\n \>\"", 
        ",", "nwaz"}], "]"}], ";", "\n", "        ", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<The maximum surpluses are:\\n\>\"", ",", " ", "mexc"}], 
       "]"}], ";", "\n", "        ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The value of the original objective function H is:\\n \>\"", ",", 
        
        RowBox[{"{", 
         RowBox[{"addexc", ",", " ", 
          RowBox[{"N", "[", "addexc", "]"}]}], "}"}]}], "]"}], ";", "\n", 
      "        ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The difference between the original function H and h is: \>\"", 
        ",", 
        RowBox[{"N", "[", 
         RowBox[{"addexc", " ", "-", " ", "fucval"}], "]"}]}], "]"}], ";"}]}],
     "\n", "  ", "]"}]}], ";"}]}], "Code",ExpressionUUID->"d41d805f-9896-49df-\
8a11-e83ae85c754a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Solving", " ", "a", " ", "system", " ", "of", " ", "linear", " ", 
    "equations", " ", "to", " ", "find", " ", "an", " ", "exact", " ", 
    RowBox[{"solution", "."}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SolveLinEQ", "[", 
      RowBox[{"coefmat_List", ",", "bv_List", ",", "indvar_List", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "PreKernelSolution", "]"}]}]}], "]"}], 
     ":=", " ", "\n", "   ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sil", ",", "mth", ",", "foc", ",", "syseq", ",", "rest", ",", "rl", 
         ",", "sol", ",", "coefm"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"sil", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
        RowBox[{"mth", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", "    ", 
        RowBox[{"coefm", "=", 
         RowBox[{"Developer`ToPackedArray", "[", "coefmat", "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sil", "===", "False"}], ",", " ", 
          RowBox[{
           RowBox[{"MessageSolveLinEQ", "[", 
            RowBox[{"coefm", ",", "bv"}], "]"}], ";"}], ",", " ", "True"}], 
         "]"}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"$VersionNumber", "<", "6"}], ",", "\n", "       ", 
          RowBox[{
           RowBox[{"sol", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Det", "[", "coefm", "]"}], " ", "!=", " ", "0"}], ",",
               " ", 
              RowBox[{"LinearSolve", "[", 
               RowBox[{"coefm", ",", 
                RowBox[{"-", "bv"}], ",", 
                RowBox[{"Method", " ", "->", " ", "mth"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"PseudoInverse", "[", "coefm", "]"}], ".", 
               RowBox[{"(", 
                RowBox[{"-", "bv"}], ")"}]}]}], "]"}]}], ";"}], ",", "\n", 
          "       ", 
          RowBox[{
           RowBox[{"sol", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Det", "[", "coefm", "]"}], " ", "!=", " ", "0"}], ",",
               " ", "\n", "              ", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"LUDecomposition", "[", "coefm", "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}], " ", "<=", " ", 
                 RowBox[{"10", "^", 
                  RowBox[{"(", "4", ")"}]}]}], ",", 
                RowBox[{"LinearSolve", "[", 
                 RowBox[{"coefm", ",", 
                  RowBox[{"-", "bv"}], ",", 
                  RowBox[{"Method", " ", "->", " ", "mth"}]}], "]"}], ",", 
                "\n", "                    ", "True", ",", " ", 
                RowBox[{
                 RowBox[{"matpr", "=", 
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{"coefm", ",", " ", "30"}], "]"}]}], ";", " ", "\n",
                  "                          ", 
                 RowBox[{"bvpr", " ", "=", " ", 
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{"bv", ",", " ", "30"}], "]"}]}], ";", "\n", 
                 "                          ", 
                 RowBox[{"LeastSquares", "[", 
                  RowBox[{"matpr", ",", 
                   RowBox[{"-", "bvpr"}], ",", " ", 
                   RowBox[{"Tolerance", " ", "->", " ", 
                    RowBox[{"10", "^", 
                    RowBox[{"(", 
                    RowBox[{"-", "10"}], ")"}]}]}]}], "]"}]}]}], "\n", 
               "                          ", "]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"PseudoInverse", "[", "coefm", "]"}], ".", 
               RowBox[{"(", 
                RowBox[{"-", "bv"}], ")"}]}]}], "]"}]}], ";"}]}], "\n", 
         "       ", "]"}], ";", "\n", "    ", 
        RowBox[{"rl", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{"indvar", ",", "sol"}], "}"}]}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"{", 
         RowBox[{"rl", ",", 
          RowBox[{"Rationalize", "[", "rl", "]"}]}], "}"}]}]}], "\n", "     ",
       "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MessageSolveLinEQ", "[", 
      RowBox[{"cfmat_", ",", "bvec_"}], "]"}], " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "alpscal", "}"}], ",", "\n", "         ", 
       RowBox[{
        RowBox[{"alpscal", " ", "=", " ", 
         RowBox[{
          RowBox[{"Norm", "[", "bvec", "]"}], "^", "2"}]}], ";", "\n", 
        "         ", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<The matrix of the objective function is given by:\\n\>\"", ",", 
          " ", "cfmat"}], "]"}], ";", "\n", "         ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Is the matrix singular? \\n\>\"", ",", " ", 
          RowBox[{
           RowBox[{"Det", "[", "cfmat", "]"}], "==", "0"}]}], "]"}], ";", 
        "\n", "         ", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<The column vector b of the objective function is given by:\\n\>\
\"", ",", " ", "bvec"}], "]"}], ";", "\n", "         ", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<The scalar alpha of the objective function is given by:\\n\>\"",
           ",", " ", "alpscal"}], "]"}], ";"}]}], "\n", "  ", "]"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"45911f9e-1fff-4a18-9247-cdd0c92a1a38"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Trying", " ", "to", " ", "determine", " ", "the", " ", "complete", " ", 
    "solution", " ", "set", " ", "of", " ", "the", " ", "objective", " ", 
    "function", " ", "h", " ", "whenever", " ", "the", " ", "coefficient", 
    " ", "matrix", " ", "is", " ", "singular"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DetSolSet", "[", 
      RowBox[{
      "dfconjugate_List", ",", " ", "objf_", ",", " ", "xvar_List", ",", " ", 
       "pvar_List"}], "]"}], ":=", " ", "\n", "       ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "objdf", ",", "orgmat", ",", "orgrest", ",", "bgvec", ",", "partsol", 
         ",", "sparts", ",", "cgmat", ",", "gensol", ",", "solvecs", ",", 
         "unsol", ",", "mpres"}], "}"}], ",", "\n", "         ", 
       RowBox[{
        RowBox[{"objdf", " ", "=", " ", 
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Simplify", "[", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"objf", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "]"}], " ",
             "&"}], "/@", " ", "xvar"}], "]"}]}], ";", "\n", "         ", 
        RowBox[{"orgmat", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Coefficient", "[", 
            RowBox[{"#", ",", " ", "xvar"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "objdf"}]}], ";", "\n", "         ", 
        RowBox[{"orgrest", " ", "=", " ", 
         RowBox[{
          RowBox[{"objf", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], " ", 
           RowBox[{"xvar", ".", "orgmat", ".", "xvar"}]}]}]}], ";", "\n", 
        "         ", 
        RowBox[{"bgvec", " ", "=", "  ", 
         RowBox[{"Coefficient", "[", 
          RowBox[{"orgrest", ",", "xvar"}], "]"}]}], ";", "\n", "         ", 
        RowBox[{"partsol", "=", 
         RowBox[{
          RowBox[{"PseudoInverse", "[", "orgmat", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"-", "bgvec"}], ")"}]}]}], ";", "\n", "         ", 
        RowBox[{"sparts", "=", 
         RowBox[{"Total", "[", "partsol", "]"}]}], ";", "\n", "         ", 
        RowBox[{"cgmat", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Coefficient", "[", 
            RowBox[{"#", ",", " ", "pvar"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "dfconjugate"}]}], ";", "\n", "         ", 
        RowBox[{"gensol", " ", "=", " ", 
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{
           RowBox[{"NullSpace", "[", "cgmat", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", "         ", 
        RowBox[{"solvecs", " ", "=", " ", 
         RowBox[{"partsol", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"Length", "[", "pvar", "]"}], "]"}], " ", "-", " ", 
             RowBox[{
              RowBox[{"PseudoInverse", "[", "orgmat", "]"}], ".", 
              "orgmat"}]}], ")"}], "gensol"}]}]}], ";", "\n", "         ", 
        RowBox[{"unsol", " ", "=", " ", 
         RowBox[{"Union", "[", "solvecs", "]"}]}], ";", "\n", "         ", 
        RowBox[{"unsol", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"unsol", ",", "partsol"}], "]"}]}], ";", "\n", "         ", 
        
        RowBox[{"unsol", " ", "=", " ", 
         RowBox[{"CheckGenRes", "[", 
          RowBox[{"unsol", ",", "partsol", ",", "sparts"}], "]"}]}], ";", 
        "\n", "         ", 
        RowBox[{"mpres", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "unsol", "]"}], "===", "1"}], ",", 
           RowBox[{"unsol", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "unsol"}], "]"}]}], ";", 
        "\n", "         ", "mpres"}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckGenRes", "[", 
      RowBox[{"vecli_List", ",", "pvec_List", ",", 
       RowBox[{"psum_", "?", "NumberQ"}]}], "]"}], ":=", "\n", "        ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sumuns", ",", "cksum", ",", "psck", ",", "extps", ",", "res"}], 
        "}"}], ",", "\n", "        ", 
       RowBox[{
        RowBox[{"sumuns", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "vecli", "]"}], ">", "1"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", "#", "]"}], " ", "&"}], "/@", " ", 
            "vecli"}], ",", "\n", "                  ", "True", ",", 
           RowBox[{"Total", "[", "vecli", "]"}]}], "]"}]}], ";", "\n", 
        "         ", 
        RowBox[{"cksum", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sumuns", "]"}], ">", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Equal", "[", 
              RowBox[{"psum", ",", "#"}], "]"}], " ", "&"}], "/@", " ", 
            "sumuns"}], ",", "\n", "                  ", "True", ",", " ", 
           RowBox[{"Equal", "[", 
            RowBox[{"psum", ",", "sumuns"}], "]"}]}], "]"}]}], ";", "\n", 
        "         ", 
        RowBox[{"psck", " ", "=", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"cksum", ",", "True"}], "]"}]}], ";", "\n", "         ", 
        RowBox[{"extps", " ", "=", " ", 
         RowBox[{"Extract", "[", 
          RowBox[{"vecli", ",", "psck"}], "]"}]}], ";", "\n", "         ", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "extps", "]"}], "===", "0"}], ",", "pvec", 
           ",", "extps"}], "]"}]}], ";", "\n", "         ", "res"}]}], "\n", 
      "]"}]}], ";"}], "\n", "\n"}]}]], "Code",ExpressionUUID->"fa1d7963-f332-\
4c8e-bbe7-f6c82d91d96e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", "  ", 
   RowBox[{
   "Constructing", " ", "for", " ", "a", " ", "particular", " ", "payoff", 
    " ", "vector", " ", "and", " ", "\n", "  ", "from", " ", "the", " ", 
    "induced", " ", "set", " ", "of", " ", "most", " ", "effective", " ", 
    "an", " ", "objective", " ", 
    RowBox[{"function", "."}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DetObjFunc", "[", 
      RowBox[{"game_", ",", " ", "payoff_List", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "PreKernelSolution", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", "   ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "anti", ",", " ", "smc", ",", " ", "sil", ",", " ", "bestc", ",", " ",
          "maxsl", ",", " ", "crlist", ",", " ", "eqs", ",", " ", "eff", ",", 
         " ", "obj"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"sil", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
        RowBox[{"anti", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "AntiPreKernel", "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"smc", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"bestc", " ", "=", " ", 
         RowBox[{"Bestcoalij01", "[", 
          RowBox[{"game", ",", " ", "payoff", ",", " ", 
           RowBox[{"AntiPreKernel", " ", "->", " ", "anti"}], ",", " ", 
           RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}]}], 
        ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"PrintMostEff", "[", 
           RowBox[{"payoff", ",", " ", "bestc"}], "]"}], ",", "  ", "True"}], 
         "]"}], ";", "\n", "    ", 
        RowBox[{"maxsl", " ", "=", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
                 RowBox[{"x", "[", "#", "]"}]}], ")"}], " ", "&"}], ",", " ", 
              "#"}], "]"}], " ", "&"}], ",", " ", "bestc"}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"crlist", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
          " ", 
          RowBox[{"Developer`ToPackedArray", "[", "maxsl", "]"}]}]}], ";", 
        "\n", 
        RowBox[{"(*", " ", "\n", "   ", 
         RowBox[{
          RowBox[{
          "the", " ", "sum", " ", "of", " ", "the", " ", "quadratic", " ", 
           "differences", " ", "of", " ", "\n", "   ", "max", " ", 
           "surpluses", " ", "for", " ", "each", " ", "pair", " ", "of", " ", 
           "players", " ", "i"}], ",", 
          RowBox[{"j", " ", "in", " ", 
           RowBox[{"T", "."}]}]}], " ", "\n", "*)"}], "\n", "    ", 
        RowBox[{"eqs", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Subtract", "[", 
                RowBox[{"#1", ",", " ", "#2"}], "]"}], "^", "2"}], " ", "&"}],
              ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Developer`ToPackedArray", "[", "crlist", "]"}]}]}], ";", 
        "\n", "    ", 
        RowBox[{"obj", " ", "=", " ", 
         RowBox[{"Total", "[", "eqs", "]"}]}], ";", "\n", 
        RowBox[{"(*", " ", "efficiency", " ", "*)"}], "\n", "    ", 
        RowBox[{"eff", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
              "T"}], "]"}], " ", "-", " ", 
            RowBox[{"v", "[", "T", "]"}]}], ")"}], "^", "2"}]}], ";", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"Meinhardt", " ", 
          RowBox[{"(", "2013", ")"}], " ", "formula", " ", "7.7"}], " ", 
         "*)"}], "\n", "    ", 
        RowBox[{
         RowBox[{"obj", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "eff"}]}]}], " ", 
      "\n", "    ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "\n", "  ", 
    RowBox[{
    "Next", " ", "we", " ", "define", " ", "the", " ", "user", " ", 
     "interface", " ", "to", " ", "compute", " ", "the", " ", "most", "\n", 
     "  ", "effective", " ", "coalitions", " ", "to", " ", "balance", " ", 
     "the", " ", "maximum", " ", 
     RowBox[{"surpluses", "."}]}], "\n", "*)"}]}]}]], "Code",ExpressionUUID->\
"d07ef2ee-37ce-41f4-b3db-dfecb4b341b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrintMostEff", "[", 
     RowBox[{"payoff_List", ",", " ", "meffc_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "       ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<A set of most effective coalitions at payoff \>\"", ",", " ", 
         "payoff", ",", " ", "\"\< is: \\n\>\"", ",", "  ", "meffc"}], "]"}], 
       ";"}]}], " ", "\n", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "User", " ", "interface", " ", "to", " ", "compute", " ", "the", " ", 
    "set", " ", "of", " ", "significant", " ", "coalitions", " ", "at", " ", 
    "a", " ", 
    RowBox[{"proposal", " ", "'"}], 
    RowBox[{
     RowBox[{"payoff", "'"}], "."}]}], "  ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BestCoalitions", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"BestCoalitions", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BestCoalitions", "[", 
     RowBox[{"game_", ",", "payoff_List", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "BestCoalitions", "]"}]}]}], "]"}], ":=",
     " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "dimpay", "}"}], ",", " ", "\n", "       ", 
      RowBox[{
       RowBox[{"dimpay", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
       "      ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
         "\n", "                        ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
            ")"}], ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Bestcoalij01", "[", 
              RowBox[{"game", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
            " ", "payoff"}], ",", "\n", 
           "                                     ", "True", ",", " ", 
           "WrongDimension"}], "]"}], ",", "\n", "                    ", 
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
         "\n", "                        ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}],
             " ", ")"}], ",", 
           RowBox[{"Bestcoalij01", "[", 
            RowBox[{"game", ",", "payoff", ",", "opts"}], "]"}], ",", " ", 
           "\n", "                                     ", "True", ",", " ", 
           "WrongDimension"}], "]"}], ",", "\n", "                    ", 
         "True", ",", " ", "WrongDimension"}], "\n", 
        "                                   ", "]"}]}]}], "\n", "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "\n", "   ", 
   RowBox[{"Here", ",", " ", 
    RowBox[{
    "we", " ", "select", " ", "the", " ", "set", " ", "of", " ", "most", " ", 
     "effective", " ", "coalitions", " ", 
     RowBox[{"w", ".", "r", ".", "t", ".", " ", "payoff"}], " ", "which", " ",
      "induces", "\n", "   ", "the", " ", "maximum", " ", 
     RowBox[{"surpluses", "."}]}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listIJ", "[", "T_List", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "j"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"i", " ", "+", " ", "1"}], ",", " ", 
          RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"listJI", "[", "T_List", "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "j"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"j", " ", "+", " ", "1"}], ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Bestcoalij01", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "BestCoalitions", "]"}]}]}], "]"}], " ", 
   ":=", "  ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "anti", ",", " ", "maxsurp", ",", " ", "allc", ",", "plvec", ",", "sij",
        ",", "sji", ",", "plj", ",", "pli", ",", "amax", ",", "ramax", ",", 
       "exc", ",", "exvec", ",", "intcoal", ",", "selcij", ",", "selcji", ",",
        "sigcoal"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"anti", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "AntiPreKernel", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"allc", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "AllCoalitions", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"maxsurp", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "MaximumSurpluses", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"plvec", " ", "=", " ", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"listIJ", "[", "T", "]"}], ",", "2"}], "]"}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"pli", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], " ", "&"}], "/@", " ", "plvec"}]}],
       ";", "\n", "    ", 
      RowBox[{"plj", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], "/@", " ", "plvec"}]}], 
      ";", "\n", "    ", 
      RowBox[{"sij", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TIJsets", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"pli", ",", "plj"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"sji", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TIJsets", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"plj", ",", "pli"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"payass", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "/@", " ", "T"}], ",", "payoff"}], "}"}]}], 
        "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"anti", "===", "False"}], ",", 
        RowBox[{"amax", " ", "=", " ", 
         RowBox[{"ModMaxSurpluses", "[", 
          RowBox[{"game", ",", "sij", ",", "sji", ",", "payass"}], "]"}]}], 
        ",", 
        RowBox[{"amax", "=", 
         RowBox[{"ModAntiSurpluses", "[", 
          RowBox[{"game", ",", "sij", ",", "sji", ",", "payass"}], "]"}]}]}], 
       "]"}], ";", "\n", "    ", 
      RowBox[{"sij", "=", 
       RowBox[{"Developer`ToPackedArray", "[", "sij", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"sji", "=", 
       RowBox[{"Developer`ToPackedArray", "[", "sji", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"amax", "=", 
       RowBox[{"Developer`ToPackedArray", "[", "amax", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"exc", " ", "=", " ", 
       RowBox[{
        RowBox[{"ExcessPayoff", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"exvec", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"exc", ",", " ", "1"}], "]"}], ",", " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"intcoal", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T", "]"}], ",", " ", "1"}], "]"}], ",", 
         " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"ramax", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Reverse", "[", "#", "]"}], " ", "&"}], "/@", " ", 
        "amax"}]}], ";", "\n", "    ", 
      RowBox[{"ramax", "=", 
       RowBox[{"Developer`ToPackedArray", "[", "ramax", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"selcij", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SelCoal", "[", 
           RowBox[{
           "#1", ",", " ", "intcoal", ",", " ", "exvec", ",", " ", "#2", ",", 
            " ", "opts"}], "]"}], " ", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"sij", ",", " ", "amax"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"selcji", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SelCoal", "[", 
           RowBox[{
           "#1", ",", " ", "intcoal", ",", " ", "exvec", ",", " ", "#2", ",", 
            " ", "opts"}], "]"}], " ", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"sji", ",", " ", "ramax"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"sigcoal", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"allc", " ", "===", " ", "False"}], ",", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Flatten", "[", "#1", "]"}], ",", " ", 
              RowBox[{"Flatten", "[", "#2", "]"}]}], "}"}], " ", "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"selcij", ",", " ", "selcji"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"selcij", ",", " ", "selcji"}], "}"}]}], "]"}]}], ";", "\n",
       "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"maxsurp", " ", "===", " ", "False"}], ",", " ", "sigcoal", 
        ",", 
        RowBox[{"{", 
         RowBox[{"sigcoal", ",", "amax"}], "}"}]}], "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->"a3b75251-821e-4a22-8a97-\
67bd6fa107bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelCoal", "[", 
     RowBox[{
     "setsij_List", ",", " ", "coal_List", ",", " ", "redexc_List", ",", " ", 
      "maxexc_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "BestCoalitions", "]"}]}]}], "]"}], " ",
     ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "allc", ",", " ", "smc", ",", " ", "detpos", ",", " ", "extval", ",", 
        " ", "poscoal", ",", " ", "extcoal"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"allc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "AllCoalitions", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "The", " ", "subsequent", " ", "two", " ", "lines", " ", "consume", 
          " ", "80", "%", " ", "of", " ", "the", " ", "computation", " ", 
          "time", " ", "of", " ", "an", " ", "pre"}], "-", 
         RowBox[{"kernel", " ", 
          RowBox[{
           RowBox[{"element", "!!"}], "!"}]}]}], " ", "*)"}], "\n", "    ", 
       RowBox[{"detpos", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"List", ",", 
          RowBox[{"{", 
           RowBox[{"coal", ",", "redexc"}], "}"}]}], "]"}]}], ";", " ", "\n", 
       "    ", 
       RowBox[{"extval", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "#", "]"}], " ", "&"}], "/@", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"detpos", ",", 
              RowBox[{"{", 
               RowBox[{"#", ",", "___"}], "}"}]}], "]"}]}], " ", "&"}], "/@", 
          " ", "setsij"}], " ", "//", " ", "Flatten"}]}], ";", "\n", "    ", 
       RowBox[{"poscoal", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"extval", ",", " ", 
          RowBox[{"First", "[", "maxexc", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"extcoal", " ", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"setsij", ",", " ", "poscoal"}], "]"}]}], ";", "\n", 
       RowBox[{"(*", "  ", 
        RowBox[{
         RowBox[{"Taking", " ", "the", " ", "coalition", " ", "with", " ", 
          RowBox[{"smallest", "/", "largest"}], " ", 
          RowBox[{"(", 
           RowBox[{"First", "/", "Last"}], ")"}], " ", "cardinality", " ", 
          "if", " ", "extcoal"}], " ", ">", " ", "1"}], " ", "*)"}], "\n", 
       "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "extcoal", "]"}], " ", "===", " ", "1"}], 
         ",", " ", "extcoal", ",", " ", "\n", "     ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"allc", " ", "===", " ", "True"}], ",", " ", "extcoal", 
           ",", " ", "True", ",", "\n", "       ", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"smc", " ", "===", " ", "True"}], ",", " ", 
             RowBox[{"First", "[", "extcoal", "]"}], ",", " ", "\n", 
             "             ", 
             RowBox[{"smc", " ", "===", " ", "False"}], ",", " ", 
             RowBox[{"Last", "[", "extcoal", "]"}], ",", " ", "\n", 
             "             ", "True", ",", "  ", 
             RowBox[{"First", "[", "extcoal", "]"}]}], "]"}]}], "]"}]}], 
        "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", "\n"}]], "Code",Express\
ionUUID->"78ffea1e-0a02-4df3-9ae5-ab5534afad96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{"Next", ",", " ", 
    RowBox[{
    "we", " ", "construct", " ", "an", " ", "equivalence", " ", "matrix", " ",
      "from", " ", "the", " ", "set", " ", "of", " ", "most", " ", 
     "effective", " ", "coalitions", " ", "\n", "as", " ", "described", " ", 
     "in", " ", "Meinhardt", " ", 
     RowBox[{
      RowBox[{"(", "2013", ")"}], "."}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "User", " ", "interface", " ", "to", " ", "compute", " ", "an", " ", 
    "equivalence", " ", "matrix", " ", "and", " ", "its", " ", "intermediate",
     " ", 
    RowBox[{"results", "."}]}], "  ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ImputationToMatrix", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ImputationToMatrix", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ImputationToMatrix", "[", 
      RowBox[{"game_", ",", " ", "payoff_List", ",", "  ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "BestCoalToMatrix", "]"}]}]}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "dimpay", "}"}], ",", " ", "\n", "       ", 
       RowBox[{
        RowBox[{"dimpay", " ", "=", " ", 
         RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
        "      ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
             ")"}], " ", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"ImputToMatrixMain", "[", 
                RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
               " ", "payoff"}], " ", "//", "Union"}], ",", "\n", 
            "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", 
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", 
               "2"}]}], " ", ")"}], ",", " ", 
            RowBox[{"ImputToMatrixMain", "[", 
             RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], "]"}], 
            ",", " ", "\n", "                                     ", "True", 
            ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
         "                                   ", "]"}]}]}], "\n", "      ", 
      "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"613d2358-f778-4849-a942-\
3056d77d64ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImputToMatrixMain", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "BestCoalToMatrix", "]"}]}]}], "]"}], ":=",
     " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "meff", "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"meff", " ", "=", " ", 
        RowBox[{"BestCoalitions", "[", 
         RowBox[{"game", ",", " ", "payoff", ",", " ", "opts"}], "]"}]}], ";",
        " ", "\n", "     ", 
       RowBox[{"BestCoalToMatrix", "[", 
        RowBox[{"meff", ",", " ", "T", ",", " ", "opts"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BestCoalToMatrix", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"BestCoalToMatrix", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BestCoalToMatrix", "[", 
     RowBox[{"coal_List", ",", " ", "T_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "BestCoalToMatrix", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "allsol", ",", "dismat", ",", "zrv", ",", " ", "pscoal", ",", " ", 
        "replzr", ",", " ", "vecij", ",", " ", "allmij", ",", " ", "detQij", 
        ",", " ", "sumQij", ",", " ", "detsum", ",", " ", "mQ", ",", "\n", 
        "      ", "detq"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"allsol", " ", "=", "  ", 
        RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"dismat", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayMatrixForm", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"vecij", " ", "=", " ", 
        RowBox[{"SetsToVec", "[", 
         RowBox[{"coal", ",", "T", ",", 
          RowBox[{"EffVector", " ", "->", " ", "False"}]}], "]"}]}], ";", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"Tensor", " ", "Product"}], " ", "*)"}], "\n", "    ", 
       RowBox[{"allmij", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"Times", ",", "#", ",", "#"}], "]"}], " ", "&"}], "/@", 
         " ", "vecij"}]}], ";", "\n", "    ", 
       RowBox[{"detQij", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "allmij"}]}], ";", "\n", "    ", 
       RowBox[{"sumQij", " ", "=", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"allmij", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "allmij", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"detsum", " ", "=", " ", 
        RowBox[{"Det", "[", "sumQij", "]"}]}], ";", "\n", "    ", 
       RowBox[{"mQ", " ", "=", " ", 
        RowBox[{
         RowBox[{"2", "*", "sumQij"}], " ", "+", " ", "2"}]}], " ", ";", " ", 
       "\n", "    ", 
       RowBox[{"detq", " ", "=", " ", 
        RowBox[{"Det", "[", "mQ", "]"}]}], ";", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"allsol", " ", "===", " ", "False"}], ",", 
         "                         ", "\n", "      ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"dismat", " ", "===", " ", "False"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mQ", ",", " ", "detq"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"sumQij", ",", " ", "detsum"}], "}"}]}], "}"}], ",", 
           " ", "\n", "        ", "True", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mQ", ",", " ", 
               RowBox[{"MatrixForm", "[", "mQ", "]"}], ",", " ", "detq"}], 
              "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "sumQij", ",", " ", "detsum", ",", " ", "\n", "            ", 
               RowBox[{"MatrixForm", "[", "sumQij", "]"}]}], "}"}]}], "}"}]}],
           "]"}], ",", "   ", "True", ",", " ", "\n", "      ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"dismat", " ", "===", " ", "False"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mQ", ",", " ", "detq"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"sumQij", ",", " ", "detsum"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"allmij", ",", " ", "detQij"}], "}"}]}], "}"}], ",", 
           " ", "\n", "         ", "True", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mQ", ",", " ", 
               RowBox[{"MatrixForm", "[", "mQ", "]"}], ",", " ", "detq"}], 
              "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"sumQij", " ", ",", " ", 
               RowBox[{"MatrixForm", "[", "sumQij", "]"}], ",", " ", "\n", 
               "            ", "detsum"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"allmij", ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"MatrixForm", "[", "#", "]"}], " ", "&"}], " ", "/@",
                 " ", "allmij"}], ",", " ", "detQij"}], "}"}]}], "}"}]}], 
          "]"}]}], "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "User", " ", "interface", " ", "to", " ", "compute", " ", "a", " ", 
    "strength", " ", 
    RowBox[{"matrix", ".", " ", 
     RowBox[{"(", 
      RowBox[{"see", " ", "Meinhardt", " ", "2013"}], ")"}]}]}], "  ", "*)"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImputationToVec", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ImputationToVec", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImputationToVec", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", "  ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "ImputationToVec", "]"}]}]}], "]"}], " ",
    ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "dimpay", "}"}], ",", "  ", "\n", "       ", 
     RowBox[{
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
           ")"}], " ", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ImputToVecMain", "[", 
              RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
             " ", "payoff"}], " ", "//", "Union"}], ",", " ", "\n", 
          "                                     ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           " ", ")"}], ",", " ", 
          RowBox[{"ImputToVecMain", "[", 
           RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], "]"}], 
          ",", "  ", "\n", "                                     ", "True", 
          ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
       "                                   ", "]"}]}]}], "\n", "      ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"9662f492-8e51-47cd-9b5d-\
3067107cc040"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImputToVecMain", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ImputationToVec", "]"}]}]}], "]"}], ":=",
     " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "allr", ",", " ", "fav", ",", " ", "meff", ",", " ", "stsv", ",", " ", 
        "skew"}], "}"}], ",", "  ", "\n", "     ", 
      RowBox[{
       RowBox[{"allr", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"fav", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "InFavor", "]"}]}], ";", " ", "\n", 
       "     ", 
       RowBox[{"meff", " ", "=", " ", 
        RowBox[{"BestCoalitions", "[", 
         RowBox[{"game", ",", " ", "payoff", ",", " ", "opts"}], "]"}]}], ";",
        " ", "\n", "     ", 
       RowBox[{"stsv", " ", "=", " ", 
        RowBox[{"SetsToVec", "[", 
         RowBox[{"meff", ",", " ", "T", ",", " ", "opts"}], "]"}]}], ";", 
       "\n", "     ", 
       RowBox[{"skew", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"allr", " ", "||", " ", "fav"}], ")"}], "===", " ", 
           "False"}], ",", " ", "True", ",", " ", "\n", 
          "                        ", 
          RowBox[{
           RowBox[{"onesT", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", 
           "   ", "\n", "                        ", 
           RowBox[{"stsv", ".", "onesT"}]}]}], "\n", 
         "                         ", "]"}]}], ";", " ", "\n", "      ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"allr", " ", "===", " ", "True"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"stsv", ",", " ", "skew"}], "}"}], ",", "\n", 
         "                     ", "True", ",", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"fav", " ", "===", " ", "False"}], ",", " ", "stsv", ",", 
           " ", "skew"}], "]"}]}], " ", "\n", "                   ", 
        "]"}]}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetsToVec", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"SetsToVec", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetsToVec", "[", 
     RowBox[{"mg_List", ",", " ", "T_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "SetsToVec", "]"}]}]}], "]"}], " ", ":=",
     " ", "\n", "    ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "effvec", ",", " ", "zrv", ",", " ", "pscoal", ",", " ", "replzr", ",",
         "coasts", ",", " ", "onesoft"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"effvec", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "EffVector", "]"}]}], ";", "\n", "    ", 
       RowBox[{"zrv", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"pscoal", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Outer", "[", 
           RowBox[{"List", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"Developer`ToPackedArray", "[", "mg", "]"}]}]}], ";", "\n", 
       "    ", 
       RowBox[{"replzr", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ReplacePart", "[", 
              RowBox[{"zrv", ",", " ", "1", ",", " ", "#"}], "]"}], " ", 
             "&"}], ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "pscoal"}]}], ";", "\n", "    ", 
       RowBox[{"coasts", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subtract", "[", 
              RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
            "#"}], "]"}], " ", "&"}], " ", "/@", " ", "replzr"}]}], ";", "\n",
        "    ", 
       RowBox[{"onesoft", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"effvec", "==", "True"}], ",", " ", 
         RowBox[{"Prepend", "[", 
          RowBox[{"coasts", ",", "onesoft"}], "]"}], ",", " ", "coasts"}], 
        "]"}]}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "\n", 
   RowBox[{
    RowBox[{
    "Replicates", " ", "from", " ", "the", " ", "difference", " ", "of", " ", 
     "unanimity", " ", "coordinates", " ", "the", "\n", "set", " ", "of", " ", 
     RowBox[{"best", "/", "most"}], " ", "effective", " ", 
     RowBox[{"coalitions", ".", " ", "The"}], " ", "input", " ", "is", " ", 
     "a", " ", "\n", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Binom", 
        RowBox[{"(", 
         RowBox[{"n", ",", "2"}], ")"}], " ", "x", " ", 
        RowBox[{"2", "^", "n"}]}], " ", "-", " ", "1"}], ")"}]}], "-", 
    RowBox[{"matrix", "."}]}], " ", "\n", " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "User", " ", "interface", " ", "to", " ", "determine", " ", "an", " ", 
    "equivalence", " ", "class", " ", "from", " ", "an", " ", 
    RowBox[{"imputation", "."}]}], "  ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImputationToEqClass", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ImputationToEqClass", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImputationToEqClass", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "ImputationToEqClass", "]"}]}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "dimpay", "}"}], ",", " ", "\n", "       ", 
     RowBox[{
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
           ")"}], " ", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"EqClassMain", "[", 
              RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
             " ", "payoff"}], " ", "//", "Union"}], ",", "\n", 
          "                                     ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           " ", ")"}], ",", " ", 
          RowBox[{"EqClassMain", "[", 
           RowBox[{"game", ",", " ", "payoff", ",", " ", "opts"}], "]"}], ",",
           " ", "\n", "                                     ", "True", ",", 
          " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
       "                                   ", "]"}]}]}], "\n", "      ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"9767252f-a4e0-46dc-9956-\
58a73a3b660a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EqClassMain", "[", 
     RowBox[{"game_", ",", " ", "payoff_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "ImputationToEqClass", "]"}]}]}], "]"}],
     ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"unmatQ", ",", " ", "unm"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"unmatQ", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "BargUnanMat", "]"}]}], ";", "   ", "\n", 
       "    ", 
       RowBox[{"unm", " ", "=", " ", 
        RowBox[{"BargainUnanMatrix", "[", 
         RowBox[{"game", ",", "payoff", ",", " ", 
          RowBox[{"EffVector", " ", "->", " ", "False"}]}], "]"}]}], ";", " ",
        "\n", "    ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"unmatQ", " ", "===", " ", "False"}], ",", " ", 
         RowBox[{"DetEqClass", "[", 
          RowBox[{"unm", ",", " ", "T"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DetEqClass", "[", 
            RowBox[{"unm", ",", " ", "T"}], "]"}], ",", " ", "unm"}], "}"}]}],
         "]"}]}]}], " ", "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DetEqClass", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"DetEqClass", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetEqClass", "[", 
     RowBox[{"mat_List", ",", "T_"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "     ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "mat", "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Binomial", "[", " ", 
            RowBox[{
             RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"2", "^", 
             RowBox[{"Length", "[", "T", "]"}]}], "-", "1"}]}], "}"}]}], ",", 
        " ", "\n", "                                  ", 
        RowBox[{"FuncDetEqClass", "[", 
         RowBox[{"mat", ",", " ", "T"}], "]"}], ",", "\n", 
        "                    ", "True", ",", " ", 
        RowBox[{"WrongMatDimension", "[", "T", "]"}]}], "]"}]}], "\n", "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WrongMatDimension", "[", "T_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "      ", 
      RowBox[{
       RowBox[{
       "Print", "[", 
        "\"\<The unanimity matrix has not the correct dimension!\>\"", "]"}], 
       ";", "\n", "      ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<The correct dimension is: \>\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Binomial", "[", 
            RowBox[{
             RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}], ",", 
           RowBox[{
            RowBox[{"2", "^", 
             RowBox[{"Length", "[", "T", "]"}]}], "-", "1"}]}], "}"}]}], 
        "]"}], ";"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FuncDetEqClass", "[", 
     RowBox[{"mat_List", ",", " ", "T_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gb", ",", " ", "clmat"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"gb", " ", "=", " ", 
        RowBox[{"GameBasis", "[", "T", "]"}]}], ";", "\n", "    ", 
       RowBox[{"clmat", " ", "=", " ", 
        RowBox[{"-", 
         RowBox[{"mat", ".", 
          RowBox[{"Inverse", "[", "gb", "]"}]}]}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"FindEqClass", "[", 
          RowBox[{"#", ",", " ", "T"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "clmat"}]}]}], "\n", " ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEqClass", "[", 
     RowBox[{"dir_List", ",", " ", "T_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pwmg", ",", " ", "lhs", ",", " ", "rhs"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{
       RowBox[{"pwmg", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Subsets", "[", "T", "]"}], ",", " ", "1"}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"lhs", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"dir", ",", " ", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"rhs", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"dir", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Extract", "[", 
        RowBox[{"pwmg", ",", " ", 
         RowBox[{"{", 
          RowBox[{"lhs", ",", " ", "rhs"}], "}"}]}], "]"}]}]}], "\n", "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BargainUnanMatrix", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"BargainUnanMatrix", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BargainUnanMatrix", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "BargainUnanMatrix", "]"}]}]}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"effvec", ",", "meff", ",", "detunan", ",", "onesv"}], "}"}], 
     ",", "   ", "\n", "    ", 
     RowBox[{
      RowBox[{"effvec", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "EffVector", "]"}]}], ";", "   ", "\n", 
      "    ", 
      RowBox[{"meff", " ", "=", " ", 
       RowBox[{"BestCoalitions", "[", 
        RowBox[{"game", ",", " ", "payoff", ",", " ", 
         RowBox[{"EffVector", " ", "->", " ", "effvec"}]}], "]"}]}], ";", " ",
       "\n", "    ", 
      RowBox[{"detunan", "=", 
       RowBox[{"DetUnanMat", "[", 
        RowBox[{"meff", ",", " ", "T"}], "]"}]}], ";", " ", "\n", "    ", 
      RowBox[{"onesv", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"2", "^", 
             RowBox[{"Length", "[", "T", "]"}]}], "-", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"effvec", "==", "True"}], ",", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"detunan", ",", "onesv"}], "]"}], ",", " ", "detunan"}], 
       "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",ExpressionUUID->"21f79d75-\
4d1a-41e1-9351-29eceb48f21a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DetUnanMat", "[", 
    RowBox[{"bsccoal_List", ",", " ", "T_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "powers", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"powers", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", "T", "]"}], ",", " ", "1"}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"DetDircSetIJ", "[", 
         RowBox[{"#", ",", " ", "powers"}], "]"}], " ", "&"}], " ", "/@", " ",
        "bsccoal"}]}]}], "\n", " ", "]"}]}], ";"}]], "Code",ExpressionUUID->\
"4dfa4641-6ffd-49d3-b212-63422a7f9694"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetDircSetIJ", "[", 
     RowBox[{"bsccoal_List", ",", " ", "coal_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lvec", ",", " ", "rvec"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"lvec", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SubSetQ", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"bsccoal", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", "1", ",", 
            " ", "0"}], "]"}], " ", "&"}], " ", "/@", " ", "coal"}]}], ";", 
       "\n", "    ", 
       RowBox[{"rvec", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SubSetQ", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"bsccoal", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", 
            RowBox[{"-", "1"}], ",", " ", "0"}], "]"}], " ", "&"}], " ", "/@",
          " ", "coal"}]}], ";", "\n", "    ", 
       RowBox[{"lvec", " ", "+", " ", "rvec"}]}]}], "\n", "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "User", " ", "interface", " ", "to", " ", "compute", " ", "the", " ", 
     "value", " ", "of", " ", "excesses"}], ",", " ", 
    RowBox[{"that", " ", "is"}], ",", " ", 
    RowBox[{"function", " ", 
     RowBox[{"h", ".", " ", 
      RowBox[{"(", 
       RowBox[{"Meinhardt", ",", " ", "2013"}], ")"}]}]}]}], "  ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ValueExcess", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ValueExcess", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ValueExcess", "[", "excli_List", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "subexc", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"subexc", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Subtract", "[", 
               RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
             RowBox[{"Outer", "[", 
              RowBox[{"List", ",", " ", "#"}], "]"}]}], "]"}], " ", "&"}], 
          " ", "/@", " ", 
          RowBox[{"excli", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Total", "[", 
        RowBox[{"subexc", "^", "2"}], "]"}]}]}], " ", "\n", "    ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ValueExcess", "[", 
    RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "dimpay", "}"}], ",", " ", "\n", "       ", 
     RowBox[{
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
           ")"}], " ", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"ValueExcessList", "[", 
             RowBox[{"game", ",", "#"}], "]"}], "&"}], "/@", " ", "payoff"}], 
          ",", "\n", "                                     ", "True", ",", 
          " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           " ", ")"}], ",", " ", 
          RowBox[{"ValueExcessList", "[", 
           RowBox[{"game", ",", "payoff"}], "]"}], ",", " ", "\n", 
          "                                     ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
       "                                   ", "]"}]}]}], "\n", "      ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"1089185d-99e0-4f80-a026-\
5e9b26f91f81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ValueExcessList", "[", 
     RowBox[{"game_", ",", " ", "payoff_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"subexc", ",", " ", "excli"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"excli", " ", "=", " ", 
        RowBox[{"MaxSurpluses", "[", 
         RowBox[{"game", ",", " ", "payoff"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"subexc", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Subtract", "[", 
               RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
             RowBox[{"Outer", "[", 
              RowBox[{"List", ",", " ", "#"}], "]"}]}], "]"}], " ", "&"}], 
          " ", "/@", " ", "excli"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Total", "[", 
        RowBox[{"subexc", "^", "2"}], "]"}]}]}], " ", "\n", "    ", "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "User", " ", "interface", " ", "to", " ", "compute", " ", "an", " ", 
    "optimal", " ", "step", " ", 
    RowBox[{"size", "."}]}], "  ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OptStepSize", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"OptStepSize", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OptStepSize", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", "  ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "OptStepSize", "]"}]}]}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sil", ",", "smc", ",", "dimpay"}], "}"}], ",", "\n", 
      "       ", 
      RowBox[{
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "  ", "\n", 
       "       ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", 
       "      ", "\n", "       ", 
       RowBox[{"dimpay", " ", "=", " ", 
        RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
       "      ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
         "\n", "                        ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
            ")"}], " ", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"DirectionOfImprovement", "[", 
                RowBox[{"game", ",", "#", ",", " ", 
                 RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
                 RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
                 RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], 
                "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", " ", "payoff"}], 
            " ", "//", "Union"}], ",", "\n", 
           "                                     ", "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
         "                    ", 
         RowBox[{
          RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
         "\n", "                        ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "dimpay", "]"}], "===", 
              RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}],
             " ", ")"}], ",", " ", 
           RowBox[{
            RowBox[{"DirectionOfImprovement", "[", 
             RowBox[{"game", ",", "payoff", ",", " ", 
              RowBox[{"CalcStepSize", " ", "->", " ", "True"}], ",", " ", 
              RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
              RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}],
             "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\n", 
           "                                     ", "True", ",", " ", 
           RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
         "                    ", "True", ",", " ", 
         RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
        "                                   ", "]"}]}]}], "\n", "      ", 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Based", " ", "on", " ", "Algorithm", " ", "8.2", ".1", " ", "of", " ", 
    "Meinhardt", " ", 
    RowBox[{"(", "2013", ")"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "User", " ", "interface", " ", "to", " ", "compute", " ", "a", " ", 
     "pre"}], "-", 
    RowBox[{"kernel", " ", 
     RowBox[{"element", "."}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreKernel", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"PreKernel", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PreKernel", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "PreKernel", "]"}]}]}], "]"}], " ", ":=",
    " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"pay", " ", "=", " ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
        RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
      RowBox[{"PreKernel", "[", 
       RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"e940376b-3ce4-4d8a-9cea-\
70a687d8dc70"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PreKernel", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "PreKernel", "]"}]}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dimpay", ",", "rclim"}], "}"}], ",", " ", "\n", "      ", 
     RowBox[{
      RowBox[{"dimpay", " ", "=", " ", 
       RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", "      ", 
      RowBox[{"rclim", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "T", "]"}], " ", ">", " ", "11"}], ",", 
         "256", ",", "156"}], "]"}]}], ";", "\n", "      ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", "\n",
         "                       ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
           ")"}], ",", " ", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], ",", 
            " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"PreKernelAlg2", "[", 
                RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], "/@",
               " ", "payoff"}], " ", "//", "Union"}]}], "]"}], ",", "\n", 
          "                                     ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", 
        RowBox[{
         RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", "\n",
         "                        ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"First", "[", "dimpay", "]"}], "===", 
             RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", "2"}]}], 
           " ", ")"}], ",", " ", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], ",", 
            
            RowBox[{"PreKernelAlg2", "[", 
             RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], "]"}]}],
            "]"}], ",", " ", "\n", "                                     ", 
          "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
        "                    ", "True", ",", " ", 
        RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
       "                                   ", "]"}]}]}], "\n", "      ", 
    "]"}]}], ";"}]], "Code",ExpressionUUID->"01a3cd28-6d05-4685-aede-\
5d9968725afc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PreKernelAlg2", "[", 
    RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "PreKernel", "]"}]}]}], "]"}], " ", ":=",
    " ", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sil", ",", " ", "smc", ",", " ", "meff", ",", " ", "matE", ",", " ", 
       "vlis", ",", " ", "alpv", ",", "err", ",", "xvec"}], "}"}], ",", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"sil", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "  ", 
      RowBox[{"smc", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"meff", " ", "=", " ", 
       RowBox[{"Bestcoalij01", "[", 
        RowBox[{"game", ",", " ", "payoff", ",", " ", 
         RowBox[{"MaximumSurpluses", " ", "->", " ", "False"}], ",", " ", 
         RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}]}], 
      ";", "\n", "  ", 
      RowBox[{"matE", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"SetsToVec", "[", 
         RowBox[{"meff", ",", " ", "T", ",", " ", 
          RowBox[{"EffVector", " ", "->", " ", "True"}]}], "]"}]}]}], ";", 
      "\n", "  ", 
      RowBox[{"vlis", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", "#1", "]"}], " ", "&"}], ",", " ", 
           RowBox[{"{", "#", "}"}]}], "]"}], " ", "&"}], "/@", " ", 
        "meff"}]}], ";", "\n", "  ", 
      RowBox[{"alpv", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"List", " ", "->", " ", "Subtract"}]}], "]"}], " ", "&"}], 
        " ", "/@", " ", "vlis"}]}], ";", "\n", "  ", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"alpv", ",", 
        RowBox[{"v", "[", "T", "]"}]}], "]"}], ";", "\n", "  ", 
      RowBox[{"err", "=", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"matE", ".", "payoff"}], "+", "alpv"}], "]"}], "^", "2"}]}],
       ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"LessEqual", "[", 
         RowBox[{"err", ",", 
          RowBox[{"1.5", "*", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "12"}], ")"}]}]}]}], "]"}], ",", 
        RowBox[{"Return", "[", "payoff", "]"}], ",", "     ", "\n", "     ", 
        RowBox[{
         RowBox[{"xvec", "=", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"PseudoInverse", "[", "matE", "]"}], ".", "alpv"}]}]}], 
         ";", "\n", "               ", 
         RowBox[{"PreKernelAlg2", "[", 
          RowBox[{"game", ",", "xvec", ",", "opts"}], "]"}]}]}], "]"}]}]}], 
    "   ", "\n", "  ", "]"}]}], ";"}]], "Code",ExpressionUUID->"09bb3eaf-fdf7-\
4edd-a7f6-ef48f03c9569"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Based", " ", "on", " ", "Algorithm", " ", "8.3", ".1", " ", "of", " ", 
    "Meinhardt", " ", 
    RowBox[{"(", "2013", ")"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "User", " ", "interface", " ", "to", " ", "compute", " ", "a", " ", 
     "pre"}], "-", 
    RowBox[{"kernel", " ", 
     RowBox[{"element", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelElement", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"PreKernelElement", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelElement", "[", 
      RowBox[{"game_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "PreKernelElement", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "pay", "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"pay", " ", "=", " ", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "[", "T", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}], "/", 
          RowBox[{"Length", "[", "T", "]"}]}]}], ";", "\n", "  ", 
        RowBox[{"PreKernelElement", "[", 
         RowBox[{"game", ",", "pay", ",", "opts"}], "]"}]}]}], "\n", " ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PreKernelElement", "[", 
      RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "PreKernelElement", "]"}]}]}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dimpay", ",", "rclim"}], "}"}], ",", " ", "\n", "      ", 
       RowBox[{
        RowBox[{"dimpay", " ", "=", " ", 
         RowBox[{"Dimensions", "[", "payoff", "]"}]}], ";", " ", "\n", 
        "      ", 
        RowBox[{"rclim", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "T", "]"}], " ", ">", " ", "11"}], ",", 
           "256", ",", "156"}], "]"}]}], ";", "\n", "      ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "2"}], ",", " ", 
          "\n", "                       ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", "3"}]}], 
             ")"}], ",", " ", 
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], 
              ",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"FuncPreKernelElement", "[", 
                  RowBox[{"game", ",", "#", ",", " ", "opts"}], "]"}], "&"}], 
                "/@", " ", "payoff"}], " ", "//", "Union"}]}], "]"}], ",", 
            "\n", "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", 
          RowBox[{
           RowBox[{"Length", "[", "dimpay", "]"}], "===", "1"}], ",", " ", 
          "\n", "                        ", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "dimpay", "]"}], "===", 
               RowBox[{"Length", "[", "T", "]"}]}], " ", "&&", " ", 
              RowBox[{
               RowBox[{"Depth", "[", "payoff", "]"}], " ", "===", " ", 
               "2"}]}], " ", ")"}], ",", " ", 
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"$RecursionLimit", " ", "=", " ", "rclim"}], "}"}], 
              ",", 
              RowBox[{"FuncPreKernelElement", "[", 
               RowBox[{"game", ",", " ", "payoff", ",", "  ", "opts"}], 
               "]"}]}], "]"}], ",", " ", "\n", 
            "                                     ", "True", ",", " ", 
            RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "]"}], ",", "\n", 
          "                    ", "True", ",", " ", 
          RowBox[{"PrintRemark", "[", "payoff", "]"}]}], "\n", 
         "                                   ", "]"}]}]}], "\n", "      ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Main", " ", "Functions"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FuncPreKernelElement", "[", 
      RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "PreKernelElement", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sil", ",", " ", "smc", ",", " ", "optst", ",", " ", "doi", ",", " ", 
         "mex", ",", " ", "optstep", ",", " ", "itpay", ",", "tol", ",", 
         "brc", ",", "pinv"}], "}"}], ",", "\n", "     ", 
       RowBox[{
        RowBox[{"sil", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "     ", 
        RowBox[{"smc", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", 
        "     ", "\n", "     ", 
        RowBox[{"optst", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "CalcStepSize", "]"}]}], ";", "\n", 
        "     ", 
        RowBox[{"pinv", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "PseudoInv", "]"}]}], ";", "\n", "     ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"optstep", ",", " ", "doi", ",", "mex"}], "}"}], " ", "=", 
         " ", 
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{"DirectionOfImprovement", "[", 
           RowBox[{"game", ",", " ", "payoff", ",", " ", 
            RowBox[{"MaximumSurpluses", " ", "->", " ", "True"}], ",", " ", 
            RowBox[{"CalcStepSize", " ", "->", " ", "optst"}], ",", " ", 
            RowBox[{"PseudoInv", "->", "pinv"}], ",", 
            RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
            RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sil", " ", "===", "False"}], ",", " ", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<doi=\>\"", ",", " ", "doi"}], "]"}], ",", " ", 
          "True"}], "]"}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sil", " ", "===", "False"}], ",", " ", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<optstep=\>\"", ",", " ", "optstep"}], "]"}], ",", " ",
           "True"}], "]"}], ";", "\n", "    ", 
        RowBox[{"itpay", " ", "=", "  ", 
         RowBox[{"payoff", " ", "+", " ", 
          RowBox[{"optstep", "*", "doi"}]}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sil", "===", "False"}], ",", " ", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<itpay=\>\"", ",", " ", "itpay"}], "]"}], ",", " ", 
          "True"}], "]"}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "itpay", "]"}], "!=", "2"}], ",", 
          RowBox[{"Return", "[", "payoff", "]"}], ",", "True"}], "]"}], ";", 
        "\n", "    ", 
        RowBox[{"tol", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"1.5", "*", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "7"}], ")"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", "T", "]"}], "}"}]}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"brc", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"LessEqual", "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], " ", "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Abs", "[", "doi", "]"}], ",", "tol"}], "}"}]}], 
            "]"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"brc", ",", "True"}], "]"}], ",", " ", "itpay", ",", " ", 
          RowBox[{"FuncPreKernelElement", "[", 
           RowBox[{"game", ",", " ", "itpay", ",", " ", 
            RowBox[{"CalcStepSize", " ", "->", " ", "optst"}], ",", " ", 
            RowBox[{"Silent", " ", "->", " ", "sil"}], ",", " ", 
            RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}]}],
          "]"}]}]}], " ", "\n", "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->\
"611a0466-7495-4ef6-b6ce-7ba0464f9a6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DirectionOfImprovement", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"DirectionOfImprovement", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionOfImprovement", "[", 
     RowBox[{"game_", ",", " ", "payoff_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "DirectionOfImprovement", "]"}]}]}], 
     "]"}], " ", ":=", " ", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sil", ",", " ", "smc", ",", " ", "optst", ",", " ", "meff", ",", " ", 
        "matE", ",", " ", "matQ", ",", " ", "matP", ",", " ", "varpay", ",", 
        " ", "mex", ",", " ", "mopt", ",", "submex", ",", " ", "setpay", ",", 
        " ", "grmex", ",", " ", "doi", ",", " ", "optstep", ",", "pinv"}], 
       "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"sil", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "  ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "SmallestCardinality", "]"}]}], ";", "\n",
        "  ", 
       RowBox[{"optst", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "CalcStepSize", "]"}]}], ";", "\n", "  ", 
       
       RowBox[{"pinv", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "PseudoInv", "]"}]}], ";", "\n", "  ", 
       RowBox[{"mopt", "=", " ", 
        RowBox[{"OptionValue", "[", "MaximumSurpluses", "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"meff", ",", " ", "mex"}], "}"}], " ", "=", " ", 
        RowBox[{"Bestcoalij01", "[", 
         RowBox[{"game", ",", " ", "payoff", ",", " ", 
          RowBox[{"MaximumSurpluses", " ", "->", " ", "True"}], ",", " ", 
          RowBox[{"SmallestCardinality", " ", "->", " ", "smc"}]}], "]"}]}], 
       ";", "\n", "  ", 
       RowBox[{"matE", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"SetsToVec", "[", 
           RowBox[{"meff", ",", " ", "T", ",", " ", 
            RowBox[{"EffVector", " ", "->", " ", "True"}]}], "]"}]}], " ", "//",
          " ", "N"}]}], ";", "\n", "  ", 
       RowBox[{"submex", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.", ",", " ", 
             RowBox[{"-", "1."}]}], "}"}], ".", "#"}], " ", "&"}], " ", "/@", 
         " ", 
         RowBox[{"Developer`ToPackedArray", "[", "mex", "]"}]}]}], ";", "\n", 
       "  ", 
       RowBox[{"varpay", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
       ";", "\n", "  ", 
       RowBox[{"setpay", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{"varpay", ",", " ", "payoff"}], "}"}]}], "]"}]}], ";", 
       "\n", "  ", 
       RowBox[{"grmex", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}], 
           "]"}]}], " ", "/.", " ", "setpay"}]}], ";", "\n", "  ", 
       RowBox[{"PrependTo", "[", 
        RowBox[{"submex", ",", " ", "grmex"}], "]"}], ";", "\n", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<submex=\>\"", ",", " ", "submex"}], "]"}], ",", 
         "True"}], "]"}], ";", "\n", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"pinv", ",", "False"}], "]"}], ",", "\n", "     ", 
         RowBox[{
          RowBox[{"doi", " ", "=", " ", 
           RowBox[{"LeastSquares", "[", 
            RowBox[{"matE", ",", 
             RowBox[{"-", "submex"}], ",", 
             RowBox[{"Tolerance", " ", "->", " ", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "10"}], ")"}]}]}]}], "]"}]}], ";"}], ",", "\n", 
         "     ", 
         RowBox[{"doi", " ", "=", " ", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"PseudoInverse", "[", "matE", "]"}], ".", 
            "submex"}]}]}]}], "]"}], ";", "\n", "  ", 
       RowBox[{"optstep", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"optst", ",", "True"}], "]"}], ",", " ", 
          RowBox[{"DelStar", "[", 
           RowBox[{"doi", ",", " ", "matE", ",", " ", "submex"}], "]"}], ",", 
          " ", "1"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"mopt", ",", "False"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"optstep", ",", "doi"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"optstep", ",", "doi", ",", "mex"}], "}"}]}], "]"}]}]}], 
     "\n", "  ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DelStar", "[", 
    RowBox[{"doi_List", ",", " ", "matE_List", ",", " ", "smex_List"}], "]"}],
    ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edvec", ",", "nrsq", ",", "tol"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"edvec", " ", "=", " ", 
       RowBox[{"matE", ".", "doi"}]}], ";", " ", "\n", "  ", 
      RowBox[{"nrsq", " ", "=", 
       RowBox[{
        RowBox[{"Norm", "[", "edvec", "]"}], "^", "2"}]}], ";", "\n", "  ", 
      RowBox[{"tol", "=", 
       RowBox[{"1.5", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "12"}], ")"}]}]}]}], ";", "\n", "  ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"LessEqual", "[", 
         RowBox[{
          RowBox[{"Abs", "[", "nrsq", "]"}], ",", "tol"}], "]"}], ",", " ", 
        "0", ",", " ", 
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"smex", ".", "edvec"}]}], "/", "nrsq"}]}], "]"}]}]}], "\n", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"6e14daef-9442-4661-b33c-\
b32c057076ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", "   ", 
   RowBox[{
    RowBox[{
     RowBox[{"The", " ", "convex", " ", "conjugate", " ", 
      RowBox[{"h", "^", 
       RowBox[{"{", "*", "}"}]}], " ", "of", " ", "the", " ", "convex", " ", 
      "objective", " ", "function", " ", "h", " ", "that", " ", 
      "characterizes", "\n", "   ", "a", " ", "pre"}], "-", 
     RowBox[{
     "kernel", " ", "solution", " ", "can", " ", "be", " ", "specified", " ", 
      "by", " ", "the", " ", "function", " ", 
      RowBox[{
       RowBox[{"ConvexConjugate", "[", "]"}], ".", "\n", "   ", "The"}], " ", 
      "convex", " ", "function", " ", "can", " ", "be", " ", "obtained", " ", 
      "by", " ", "the", " ", "function", " ", 
      RowBox[{"PreKernelSolution", "[", "]"}], " ", "\n", "   ", "by", " ", 
      "invoking", " ", "the", " ", "option", " ", "ShowObjectiveFunction"}]}],
     " ", "->", " ", 
    RowBox[{
     RowBox[{"True", ".", "\n", "   ", "See"}], " ", "the", " ", 
     "Rockafellar", " ", "book", " ", "for", " ", "the", " ", "mathematical", 
     " ", 
     RowBox[{"details", "."}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ConvexConjugate", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"ConvexConjugate", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvexConjugate", "[", 
      RowBox[{"game_", ",", " ", "confunc_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "ConvexConjugate", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sil", ",", " ", "cfunc", ",", " ", "var", ",", " ", "norvar", ",", 
         " ", "zerovec", ",", " ", "inprod", ",", " ", "funchst", ",", " ", 
         "gradx", ",", " ", "detsys", ",", " ", "sol", ",", "coefm", ",", 
         "solset", ",", " ", "sol1", ",", " ", "cgate", ",", "\n", "      ", 
         "dpcgate", ",", " ", "detsol", ",", " ", "rlz", ",", " ", "gradpv"}],
         "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"sil", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
        RowBox[{"cfunc", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "confunc", "]"}], "===", " ", "List"}], ",", 
           " ", 
           RowBox[{"Flatten", "[", "confunc", "]"}], ",", 
           RowBox[{"{", "confunc", "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"cfunc", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "cfunc", "]"}], "===", "1"}], ",", "cfunc",
            ",", "\n", "              ", 
           RowBox[{
            RowBox[{"ConjugateMessage01", "[", "cfunc", "]"}], ";", " ", 
            RowBox[{"Return", "[", "]"}]}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"var", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
        ";", "\n", "    ", 
        RowBox[{"norvar", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Global`p", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "T"}]}], ";", "\n", "    ", 
        RowBox[{"zerovec", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
         "    ", 
        RowBox[{"inprod", " ", "=", " ", 
         RowBox[{"Total", "[", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Times", "[", 
              RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"norvar", ",", " ", "var"}], "}"}]}], "]"}], "]"}]}], 
        ";", "\n", "    ", 
        RowBox[{"funchst", " ", "=", " ", 
         RowBox[{
          RowBox[{"inprod", " ", "-", " ", "cfunc"}], " ", "//", " ", 
          "Simplify"}]}], ";", "\n", "    ", 
        RowBox[{"gradx", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"funchst", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#"}], "]"}], " ", 
           "&"}], " ", "/@", " ", "var"}]}], ";", "\n", "    ", 
        RowBox[{"coefm", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Coefficient", "[", 
            RowBox[{"#", ",", "var"}], "]"}], " ", "&"}], "/@", " ", 
          "gradx"}]}], ";", "\n", "    ", 
        RowBox[{"detsys", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Equal", ",", " ", 
           RowBox[{"{", 
            RowBox[{"gradx", ",", " ", "zerovec"}], "}"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"sol", " ", "=", " ", 
         RowBox[{"Solve", "[", 
          RowBox[{"detsys", ",", " ", "var"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"sol1", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sol", "]"}], "===", "0"}], ",", " ", 
           RowBox[{"SolSys", "[", 
            RowBox[{"detsys", ",", "var"}], "]"}], ",", "sol"}], "]"}]}], ";",
         "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "sol1", "]"}], "===", "0"}], ",", 
          "MessageConjugate", ",", " ", "True"}], "]"}], ";", "\n", "    ", 
        RowBox[{"cgate", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sol1", "]"}], "===", "0"}], ",", 
           "funchst", ",", 
           RowBox[{
            RowBox[{"funchst", " ", "/.", " ", "sol1"}], " ", "//", " ", 
            "Simplify"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"dpcgate", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sol1", "]"}], "===", "0"}], ",", 
           "funchst", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"cgate", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "#"}], "]"}], " ", 
             "&"}], " ", "/@", " ", "norvar"}]}], "]"}]}], ";", "\n", "    ", 
        
        RowBox[{"solset", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sol", "]"}], "===", "0"}], ",", " ", 
           RowBox[{"DetSolSet", "[", 
            RowBox[{
            "dpcgate", ",", "cfunc", ",", " ", "var", ",", " ", "norvar"}], 
            "]"}], ",", " ", "dpcgate"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"rlz", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", " ", 
           RowBox[{"{", 
            RowBox[{"norvar", ",", " ", "zerovec"}], "}"}]}], "]"}]}], ";", 
        "\n", "    ", 
        RowBox[{"gradpv", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sol1", "]"}], "===", "0"}], ",", 
           "funchst", ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "sol", "]"}], "!=", "0"}], ",", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"dpcgate", " ", "/.", " ", "rlz"}], "]"}], ",", " ", 
             "solset"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"sil", ",", "False"}], "]"}], ",", " ", "True", ",", "\n", 
          "          ", "True", ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "sol", "]"}], "===", "0"}], ",", 
            RowBox[{"ConjugateMessage02", "[", "gradpv", "]"}], ",", "True"}],
            "]"}]}], "]"}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"sil", ",", "False"}], "]"}], ",", " ", 
          RowBox[{"ConjugateMessage03", "[", 
           RowBox[{
           "cfunc", ",", " ", "cgate", ",", " ", "gradpv", ",", "sol"}], 
           "]"}], ",", "True"}], "]"}], ";", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"gradpv", ",", " ", 
          RowBox[{"Flatten", "[", "cgate", "]"}]}], "}"}]}]}], "\n", "    ", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"MessageConjugate", " ", ":=", " ", 
     RowBox[{
     "Print", "[", 
      "\"\<Warning: The system of linear equations to determine the conjugate \
of h has no solution.\>\"", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SolSys", "[", 
      RowBox[{"eqsys_List", ",", "var_List"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "redsol", "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"redsol", " ", "=", " ", 
         RowBox[{"Reduce", "[", 
          RowBox[{"eqsys", ",", "var"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"redsol", " ", "=", " ", 
         RowBox[{"redsol", " ", "/.", " ", 
          RowBox[{"Equal", " ", "->", " ", "Rule"}]}]}], ";", "\n", "    ", 
        RowBox[{"Apply", "[", 
         RowBox[{"List", ",", "redsol"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConjugateMessage01", "[", "hstfunc_", "]"}], " ", ":=", "\n", 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Wrong Dimension of the argument 'confunc'!\>\"", 
        "]"}], ";", "\n", "  ", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<The Length of argument 'confunc' must be 1 and not \>\"", ",", 
         " ", 
         RowBox[{"Length", "[", "hstfunc", "]"}]}], "]"}]}], ")"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"43a36a01-0351-446f-a347-f1fdb35dde2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConjugateMessage02", "[", "gradp_List", "]"}], ":=", "\n", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<A subgradient of the conjugate h^{*} at the zero vector is: \
\\n\>\"", ",", " ", "gradp"}], "]"}], ";", "\n", "  ", 
     RowBox[{
     "Print", "[", 
      "\"\<The subgradient may not coincide with the solution of the \
objective function h,\>\"", "]"}], ";", "\n", "  ", 
     RowBox[{
     "Print", "[", "\"\<which must be a pre-kernel solution.\>\"", "]"}], ";",
      "\n", "  ", 
     RowBox[{
     "Print", "[", "\"\<This result may be another pre-kernel solution!\>\"", 
      "]"}], ";", "\n", "  ", 
     RowBox[{
     "Print", "[", 
      "\"\<The conjugate h^{*} is not differential at the zero vector and the \
solution is not a unique vector!\>\"", "]"}], ";", "\n", "  ", 
     RowBox[{
     "Print", "[", "\"\<The pre-kernel solution may not be a singleton!\>\"", 
      "]"}]}], "\n", ")"}]}], ";"}]], "Code",ExpressionUUID->"d546c0b0-5c00-\
497c-9781-a544c42b1196"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConjugateMessage03", "[", 
     RowBox[{
     "hfunc_", ",", " ", "hstfunc_", ",", " ", "gradhst_", ",", "sol_"}], 
     "]"}], ":=", " ", "\n", "    ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "sol", "]"}], "===", "0"}], ",", 
      RowBox[{"ConjugateMessage03Case1", "[", 
       RowBox[{"hfunc", ",", " ", "hstfunc", ",", " ", "gradhst"}], "]"}], 
      ",", 
      RowBox[{"ConjugateMessage03Case2", "[", 
       RowBox[{"hfunc", ",", " ", "hstfunc", ",", " ", "gradhst"}], "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConjugateMessage03Case1", "[", 
     RowBox[{"hfunc_", ",", " ", "hstfunc_", ",", " ", "gradhst_"}], "]"}], 
    " ", ":=", " ", "\n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The convex input function h\\n\>\"", ",", " ", "hfunc", ",", " ", 
        "\"\<\\n must be an objective function that determines a kernel \
solution.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The conjugate function h^{*} of the convex function h is given by \
\\n\>\"", ",", " ", "hstfunc"}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The solution\\n\>\"", ",", " ", "gradhst", ",", " ", 
        "\"\<\\n found for h^{*} at the zero vector is a subgradient of \
h^{*}.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{
      "Print", "[", 
       "\"\<Thus, the conjugate h^{*} is not differentiable at the zero \
vector.\>\"", "]"}], ";", "\n", "  ", 
      RowBox[{
      "Print", "[", 
       "\"\<Hence, the pre-kernel solution is not a singleton!\>\"", "]"}], 
      ";", "\n", "  ", 
      RowBox[{
      "Print", "[", 
       "\"\<The subgradient found, could be a pre-kernel solution of the \
game.\>\"", "]"}]}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConjugateMessage03Case2", "[", 
     RowBox[{"hfunc_", ",", " ", "hstfunc_", ",", " ", "gradhst_"}], "]"}], 
    " ", ":=", " ", "\n", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The convex input function h\\n\>\"", ",", " ", "hfunc", ",", " ", 
        "\"\<\\n must be an objective function that determines a kernel \
solution.\>\""}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The conjugate function h^{*} of the convex function h is given by \
\\n\>\"", ",", " ", "hstfunc"}], "]"}], ";", "\n", "  ", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<The solution\\n\>\"", ",", " ", "gradhst", ",", " ", 
        "\"\<\\n found for h^{*} at the zero vector is a gradient of h^{*}.\>\
\""}], "]"}], ";", "\n", "  ", 
      RowBox[{
      "Print", "[", 
       "\"\<Then the conjugate h^{*} is differentiable at the zero \
vector.\>\"", "]"}], ";", "\n", "  ", 
      RowBox[{
      "Print", "[", 
       "\"\<The gradient must be a pre-kernel solution of the game.\>\"", 
       "]"}]}], ")"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Section", " ", "ends", " ", "to", " ", "determine", " ", "a", " ", 
     "PreKernel", " ", "solution", " ", "by", " ", "a", " ", "modified", " ", 
     "SDM"}], "-", "Method"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Kernel", " ", "section", " ", "ends"}], " ", "*)"}]}]}], "Code",Ex\
pressionUUID->"2cc2bb34-d2db-4c6a-a88a-f6afeede398f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Start", " ", "mathlink", " ", "section"}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "If", " ", "you", " ", "have", " ", "not", " ", "installed", " ", 
    "cddmathlink", " ", "then", " ", "you", " ", "should", " ", "deactivate", 
    " ", 
    RowBox[{"the", " ", "\\\n", "functions"}], " ", "AllVertices", " ", "and",
     " ", "all", " ", "functions", " ", "starting", " ", 
    RowBox[{"with", " ", "'"}], 
    RowBox[{
     RowBox[{"Cdd", "'"}], "."}]}], " ", "*)"}], "\t\t", "\n", "\t\t", "\n", 
  "\t\t", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AllVertices0", "[", 
      RowBox[{"m_Integer", ",", " ", "d_Integer", ",", " ", "a_List"}], "]"}],
      " ", ":=", " ", 
     RowBox[{"ExternalCall", "[", 
      RowBox[{"cddml", ",", 
       RowBox[{"CallPacket", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "d", ",", "a"}], "}"}]}], "]"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllVertices", "[", 
      RowBox[{"m_Integer", ",", " ", "d_Integer", ",", " ", "a_String"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"ExternalCall", "[", 
      RowBox[{"cddmlgmp", ",", 
       RowBox[{"CallPacket", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "d", ",", "a"}], "}"}]}], "]"}]}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllVertices2", "[", 
      RowBox[{"m_Integer", ",", " ", "d_Integer", ",", " ", "a_String"}], 
      "]"}], " ", ":=", 
     RowBox[{"ExternalCall", "[", 
      RowBox[{"cddml2", ",", 
       RowBox[{"CallPacket", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "d", ",", "a"}], "}"}]}], "]"}]}], "]"}]}], ";"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AllVerticesWithAdjacency2", "[", 
      RowBox[{"m_Integer", ",", " ", "d_Integer", ",", " ", "a_String"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"ExternalCall", "[", 
      RowBox[{"cddmlgmp", ",", 
       RowBox[{"CallPacket", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "d", ",", "a"}], "}"}]}], "]"}]}], "]"}]}], ";"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesCore", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"CddVerticesCore", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesCore", "[", 
      RowBox[{"game_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "CddVerticesCore", "]"}]}]}], "]"}], 
     " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ratexact", ",", "liste", ",", "mat", ",", "values", ",", "extmat", 
         ",", "string1", ",", "m", ",", "d1", ",", "vert1", ",", "linearity1",
          ",", "incidences1"}], "}"}], ",", "\n", "      ", 
       RowBox[{
        RowBox[{"ratexact", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "RationalExact", "]"}]}], ";", " ", "\n",
         "      ", 
        RowBox[{"liste", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">=", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
         "      ", 
        RowBox[{"mat", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
            " ", "liste"}], ",", "1"}], "]"}]}], ";", "\n", "      ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"mat", ",", " ", 
          RowBox[{"-", 
           RowBox[{"Last", "[", "mat", "]"}]}]}], "]"}], ";", "\n", "      ", 
        
        RowBox[{"values", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"Rest", "[", "Coalitions", "]"}]}]}], ";", "\n", "      ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"values", ",", " ", 
          RowBox[{"-", 
           RowBox[{"Last", "[", "values", "]"}]}]}], "]"}], ";", "\n", 
        "      ", 
        RowBox[{"extmat", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Prepend", ",", 
           RowBox[{"{", 
            RowBox[{"mat", ",", 
             RowBox[{"-", "values"}]}], "}"}]}], "]"}]}], ";", "\n", "      ", 
        RowBox[{"string1", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "\t    ", 
        
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", "d1"}], "}"}], "=", 
         RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "\t    ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "incidences1"}],
           "}"}], "=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
           RowBox[{"AllVertices0", "[", 
            RowBox[{"m", ",", "d1", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"N", "[", "extmat", "]"}], "]"}]}], "]"}], ",", " ", 
           "\n", "                                                       ", 
           "True", ",", 
           RowBox[{"AllVertices", "[", 
            RowBox[{"m", ",", "d1", ",", "string1"}], "]"}]}], "]"}]}], ";", 
        "\n", "      ", 
        RowBox[{"vert1", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{
             RowBox[{"Length", "[", "vert", "]"}], ",", "1"}], "]"}], ",", 
           " ", "vert1", ",", " ", 
           RowBox[{"Sort", "[", "vert1", "]"}]}], "]"}]}], ";", "\n", 
        "      ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"ToExpression", "[", "#", "]"}], ",", "1"}], "]"}], " ", 
           "&"}], ",", "  ", "vert1"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n",
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesImputationSet", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"CddVerticesImputationSet", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesImputationSet", "[", 
      RowBox[{"game_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "CddVerticesReasonableSet", "]"}]}]}], 
      "]"}], " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "ratexact", ",", "liste", ",", " ", "zwmat", ",", " ", "finmat", ",", 
         " ", "bvec", ",", " ", "extmat", ",", " ", "string1", ",", " ", "m", 
         ",", " ", "d1", ",", " ", "vert1", ",", " ", "linearity1", ",", " ", 
         "incidences1", ",", " ", "sortlist"}], "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"ratexact", " ", "=", "  ", 
         RowBox[{"OptionValue", "[", "RationalExact", "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"liste", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", 
             "0"}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
         "   ", 
        RowBox[{"zwmat", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
            " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"finmat", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"zwmat", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
           RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"bvec", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"{", "#", "}"}], "]"}], "&"}], "/@", "T"}], ",", " ", 
           RowBox[{"v", "[", "T", "]"}]}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"extmat", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Prepend", ",", " ", 
           RowBox[{"{", 
            RowBox[{"finmat", ",", " ", 
             RowBox[{"-", "bvec"}]}], "}"}]}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"string1", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
         RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "   ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vert1", ",", " ", "linearity1"}], "}"}], ",", " ", 
           "incidences1"}], "}"}], " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
           RowBox[{"AllVertices0", "[", 
            RowBox[{"m", ",", " ", "d1", ",", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"N", "[", "extmat", "]"}], "]"}]}], "]"}], ",", "\n", 
           "                                                      ", "True", 
           ",", 
           RowBox[{"AllVertices", "[", 
            RowBox[{"m", ",", " ", "d1", ",", " ", "string1"}], "]"}]}], 
          "]"}]}], ";", "\n", "    ", 
        RowBox[{"sortlist", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Sort", "[", "vert1", "]"}], ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", "\n", 
           "                                ", "True", ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"ToExpression", "[", "vert1", "]"}], "]"}], ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}]}], ";", "\n",
         "   ", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "sortlist"}]}]}], "\n", "   ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesReasonableSet", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"CddVerticesReasonableSet", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CddVerticesReasonableSet", "[", 
      RowBox[{"game_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "CddVerticesReasonableSet", "]"}]}]}], 
      "]"}], " ", ":=", " ", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "propcont", ",", "ratexact", ",", "liste", ",", " ", "zwmat", ",", 
         " ", "finmat", ",", " ", "bvec", ",", " ", "extmat", ",", " ", 
         "string1", ",", " ", "m", ",", " ", "d1", ",", " ", "vert1", ",", 
         " ", "linearity1", ",", " ", "incidences1", ",", " ", "sortlist"}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"ratexact", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "RationalExact", "]"}]}], ";", "\n", 
        "   ", 
        RowBox[{"propcont", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "ProperContribution", "]"}]}], ";", "\n",
         "   ", 
        RowBox[{"liste", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", 
             "0"}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
         "   ", 
        RowBox[{"zwmat", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
            " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"finmat", " ", "=", " ", 
         RowBox[{"-", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"zwmat", ",", " ", 
              RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
            RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}]}], ";", "\n", 
        "   ", 
        RowBox[{"bvec", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"propcont", ",", "False"}], "]"}], ",", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"ReasonableOutcome", "[", "game", "]"}], ",", " ", 
              RowBox[{"v", "[", "T", "]"}]}], "]"}], "]"}], ",", "\n", 
           "           ", "True", ",", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"ProperAmount", "[", "game", "]"}], ",", " ", 
              RowBox[{"v", "[", "T", "]"}]}], "]"}], "]"}]}], "]"}]}], ";", 
        "\n", "   ", 
        RowBox[{"extmat", " ", "=", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Prepend", ",", " ", 
           RowBox[{"{", 
            RowBox[{"finmat", ",", " ", "bvec"}], "}"}]}], "]"}]}], ";", "\n",
         "   ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
         RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "   ", 
        RowBox[{"string1", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vert1", ",", " ", "linearity1"}], "}"}], ",", " ", 
           "incidences1"}], "}"}], " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
           RowBox[{"AllVertices0", "[", 
            RowBox[{"m", ",", " ", "d1", ",", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{"N", "[", "extmat", "]"}], "]"}]}], "]"}], ",", "\n", 
           "                                                      ", "True", 
           ",", 
           RowBox[{"AllVertices", "[", 
            RowBox[{"m", ",", " ", "d1", ",", " ", "string1"}], "]"}]}], 
          "]"}]}], ";", "\n", "   ", 
        RowBox[{"sortlist", " ", "=", " ", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Sort", "[", "vert1", "]"}], ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", "\n", 
           "                                ", "True", ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"ToExpression", "[", "vert1", "]"}], "]"}], ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}]}], ";", "\n",
         "   ", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{
            RowBox[{"Length", "[", "sortlist", "]"}], ",", "1"}], "]"}], ",", 
          
          RowBox[{"Print", "[", "\"\<Upper Set is a unique point.\>\"", "]"}],
           ",", "True", ",", "True"}], "]"}], ";", "\n", "   ", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "sortlist"}]}]}], "\n", "   ", "]"}]}], ";"}], "\n"}]}]], "Code",Expr\
essionUUID->"2d35a7aa-2061-4ebc-91dc-10d7c1a94b43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CddVerticesLowerSet", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddVerticesLowerSet", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CddVerticesLowerSet", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "CddVerticesLowerSet", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ratexact", ",", "liste", ",", " ", "zwmat", ",", " ", "finmat", ",", 
       " ", "bvec", ",", " ", "smc", ",", " ", "extmat", ",", " ", "string1", 
       ",", " ", "m", ",", " ", "d1", ",", " ", "vert1", ",", " ", 
       "linearity1", ",", " ", "incidences1", ",", " ", "sortlist"}], "}"}], 
     ",", "\n", "   ", 
     RowBox[{
      RowBox[{"ratexact", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "RationalExact", "]"}]}], ";", "\n", "   ", 
      RowBox[{"liste", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", "0"}],
           "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"zwmat", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
          " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"finmat", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"zwmat", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
          RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}]}], ";", "\n", "   ", 
      
      RowBox[{"smc", " ", "=", " ", 
       RowBox[{"SmallestContributionVector", "[", "game", "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"bvec", " ", "=", " ", 
       RowBox[{"Rationalize", "[", 
        RowBox[{"Append", "[", 
         RowBox[{"smc", ",", " ", 
          RowBox[{"-", 
           RowBox[{"v", "[", "T", "]"}]}]}], "]"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{"extmat", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Prepend", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "finmat"}], ",", " ", "bvec"}], "}"}]}], "]"}]}], ";",
       "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "   ", 
      RowBox[{"string1", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vert1", ",", " ", "linearity1"}], "}"}], ",", " ", 
         "incidences1"}], "}"}], "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
         RowBox[{"AllVertices0", "[", 
          RowBox[{"m", ",", " ", "d1", ",", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{"N", "[", "extmat", "]"}], "]"}]}], "]"}], ",", "\n", 
         "                                                      ", "True", 
         ",", 
         RowBox[{"AllVertices", "[", 
          RowBox[{"m", ",", " ", "d1", ",", " ", "string1"}], "]"}]}], 
        "]"}]}], ";", "\n", "   ", 
      RowBox[{"sortlist", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ratexact", ",", "False"}], "]"}], ",", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Sort", "[", "vert1", "]"}], ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", "\n", 
         "                                ", "True", ",", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"ToExpression", "[", "vert1", "]"}], "]"}], ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], "]"}]}], ";", "\n", 
      "   ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"Length", "[", "sortlist", "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Lower Set is a unique point.\>\"", "]"}], 
         ";"}], ",", "True", ",", "True"}], "]"}], ";", "\n", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
       "sortlist"}]}]}], "\n", "   ", "]"}]}], ";"}], "\n"}], "Code",Expressio\
nUUID->"15feae92-c734-46b3-9af6-6b936aa7d993"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpVerticesCore", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddGmpVerticesCore", "::", "argerr"}], "]"}], ";", "$Failed"}],
     ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpVerticesCore", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "CddGmpVerticesCore", "]"}]}]}], "]"}], 
   " ", ":=", " ", "\n", "   ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ratexact", ",", "withinc", ",", "liste", ",", "mat", ",", "values", 
       ",", "extmat", ",", "string1", ",", "string2", ",", "m", ",", "d1", 
       ",", "vert1", ",", "vertlist1", ",", "linearity1", ",", "incidences1", 
       ",", "sortlist"}], "}"}], ",", "\n", "        ", 
     RowBox[{
      RowBox[{"ratexact", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "RationalExact", "]"}]}], ";", " ", "\n", 
      "        ", 
      RowBox[{"withinc", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "WithIncidences", "]"}]}], ";", " ", "\n", 
      "\t      ", 
      RowBox[{"liste", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">=", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "\t      ", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
          " ", "liste"}], ",", "1"}], "]"}]}], ";", "\n", "        ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mat", ",", " ", 
        RowBox[{"-", 
         RowBox[{"Last", "[", "mat", "]"}]}]}], "]"}], ";", "\n", "        ", 
      
      RowBox[{"values", " ", "=", " ", 
       RowBox[{"Rationalize", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", 
         RowBox[{"Rest", "[", "Coalitions", "]"}]}], "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"values", ",", " ", 
        RowBox[{"-", 
         RowBox[{"Last", "[", "values", "]"}]}]}], "]"}], ";", "\n", 
      "        ", 
      RowBox[{"extmat", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Prepend", ",", 
         RowBox[{"{", 
          RowBox[{"mat", ",", 
           RowBox[{"-", "values"}]}], "}"}]}], "]"}]}], ";", "\n", "        ", 
      RowBox[{"string1", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "        ", 
      
      RowBox[{"string2", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"N", "[", "extmat", "]"}], ",", "InputForm"}], "]"}]}], ";", 
      "\n", "\t      ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", "d1"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "\t      ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "incidences1"}], 
        "}"}], "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"ratexact", ",", "True"}], "]"}], ",", " ", 
         RowBox[{"AllVertices", "[", 
          RowBox[{"m", ",", "d1", ",", "string1"}], "]"}], ",", "\n", 
         "                                            ", 
         RowBox[{"AllVertices2", "[", 
          RowBox[{"m", ",", "d1", ",", "string2"}], "]"}]}], "]"}]}], ";", 
      "\n", "        ", 
      RowBox[{"vert1", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"Length", "[", "vert1", "]"}], ",", "1"}], "]"}], ",", " ",
          "vert1", ",", " ", 
         RowBox[{"Sort", "[", "vert1", "]"}]}], "]"}]}], ";", "\n", 
      "        ", 
      RowBox[{"vertlist1", " ", "=", "  ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"ToExpression", "[", "#", "]"}], ",", "1"}], "]"}], " ", 
          "&"}], ",", "  ", "vert1"}], "]"}]}], ";", "\n", "        ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"withinc", " ", "==", " ", "False"}], ")"}], " ", "&&", " ", 
         RowBox[{"(", 
          RowBox[{"ratexact", " ", "==", " ", "False"}], ")"}]}], ",", " ", 
        RowBox[{"Chop", "[", 
         RowBox[{"vertlist1", ",", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "12"}], ")"}]}]}], "]"}], ",", "\n", 
        "              ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"withinc", " ", "==", " ", "False"}], ")"}], " ", "&&", " ", 
         RowBox[{"(", 
          RowBox[{"ratexact", " ", "==", " ", "True"}], ")"}]}], ",", "  ", 
        "vertlist1", ",", "\n", "              ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"withinc", " ", "==", " ", "True"}], ")"}], " ", "&&", " ", 
         
         RowBox[{"(", 
          RowBox[{"ratexact", " ", "==", " ", "False"}], ")"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Chop", "[", 
           RowBox[{"vertlist1", ",", 
            RowBox[{"10", "^", 
             RowBox[{"(", 
              RowBox[{"-", "12"}], ")"}]}]}], "]"}], ",", " ", 
          "incidences1"}], "}"}], ",", "\n", "              ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"withinc", " ", "==", " ", "True"}], ")"}], " ", "&&", " ", 
         
         RowBox[{"(", 
          RowBox[{"ratexact", " ", "==", " ", "True"}], ")"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"vertlist1", ",", "incidences1"}], "}"}], ",", "\n", 
        "              ", "True", ",", " ", "vertlist1"}], "\n", 
       "              ", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",ExpressionU\
UID->"e6ad8f9d-e998-4be5-8e8c-0dea47e3e83b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpPlotCore", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddGmpPlotCore", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotCore", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "CddGmpPlotCore", "]"}]}]}], "]"}], " ",
     ":=", " ", "\n", "   ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ratexact", ",", "liste", ",", "mat", ",", "values", ",", "extmat", 
        ",", "string1", ",", "m1", ",", "d1", ",", "vert1", ",", "vertlist1", 
        ",", "linearity1", ",", "sortlist1", ",", "ecdlist1", ",", "eadlist1",
         ",", "icdlist1", ",", "iadlist1"}], "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"ratexact", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "RationalExact", "]"}]}], ";", " ", "\n", 
       "     ", 
       RowBox[{"liste", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", ">=", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
           " ", "liste"}], ",", "1"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"mat", ",", " ", 
         RowBox[{"-", 
          RowBox[{"Last", "[", "mat", "]"}]}]}], "]"}], ";", "\n", "     ", 
       RowBox[{"values", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"Rest", "[", "Coalitions", "]"}]}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"values", ",", " ", 
         RowBox[{"-", 
          RowBox[{"Last", "[", "values", "]"}]}]}], "]"}], ";", "\n", "     ", 
       RowBox[{"extmat", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", 
          RowBox[{"{", 
           RowBox[{"mat", ",", 
            RowBox[{"-", "values"}]}], "}"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"string1", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m1", ",", "d1"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "\t   ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "ecdlist1", ",", 
          "eadlist1", ",", "icdlist1", ",", "iadlist1"}], "}"}], " ", "=", 
        " ", 
        RowBox[{"AllVerticesWithAdjacency2", "[", 
         RowBox[{"m1", ",", "d1", ",", "string1"}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"vertlist1", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", " ", 
          RowBox[{"ToExpression", "[", "vert1", "]"}]}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vertlist1", ",", "linearity1"}], "}"}], ",", "ecdlist1", 
         ",", "eadlist1", ",", "icdlist1", ",", "iadlist1", ",", "extmat"}], 
        "}"}]}]}], "\n", " ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpPlotImputationSet", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddGmpPlotImputationSet", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotImputationSet", "[", "game_", "]"}], " ", ":=", " ", 
    "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "liste", ",", " ", "zwmat", ",", " ", "finmat", ",", " ", "bvec", ",", 
        " ", "extmat", ",", " ", "m", ",", " ", "d1", ",", " ", "vert1", ",", 
        " ", "string1", ",", " ", "vertlist1", ",", " ", "linearity1", ",", 
        " ", "sortlist", ",", " ", "ecdlist1", ",", "eadlist1", ",", 
        "icdlist1", ",", "iadlist1"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"liste", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", 
            "0"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"zwmat", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
           " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"finmat", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"zwmat", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
          RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"bvec", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"{", "#", "}"}], "]"}], "&"}], "/@", "T"}], ",", " ", 
           RowBox[{"v", "[", "T", "]"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       
       RowBox[{"extmat", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", " ", 
          RowBox[{"{", 
           RowBox[{"finmat", ",", " ", 
            RowBox[{"-", "bvec"}]}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
        RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "    ", 
       RowBox[{"string1", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "ecdlist1", ",", 
          "eadlist1", ",", "icdlist1", ",", "iadlist1"}], "}"}], " ", "=", 
        " ", 
        RowBox[{"AllVerticesWithAdjacency2", "[", 
         RowBox[{"m", ",", "d1", ",", "string1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"vert1", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Sort", "[", "vert1", "]"}], ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"vertlist1", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", " ", 
          RowBox[{"ToExpression", "[", "vert1", "]"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vertlist1", ",", "linearity1"}], "}"}], ",", "ecdlist1", 
         ",", "eadlist1", ",", "icdlist1", ",", "iadlist1", ",", "extmat"}], 
        "}"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpImputationVertices", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddGmpImputationVertices", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpImputationVertices", "[", "game_", "]"}], " ", ":=", " ", 
    "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "liste", ",", "zwmat", ",", "finmat", ",", "bvec", ",", "extmat", ",", 
        "m", ",", "d1", ",", "vert1", ",", "string1", ",", "linearity1", ",", 
        "sortlist", ",", "ecdlist1", ",", "eadlist1", ",", "icdlist1", ",", 
        "iadlist1"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"liste", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", 
            "0"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"zwmat", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
           " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"finmat", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"zwmat", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
          RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"bvec", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"{", "#", "}"}], "]"}], "&"}], "/@", "T"}], ",", " ", 
           RowBox[{"v", "[", "T", "]"}]}], "]"}], "]"}]}], ";", "\n", "    ", 
       
       RowBox[{"extmat", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", " ", 
          RowBox[{"{", 
           RowBox[{"finmat", ",", " ", 
            RowBox[{"-", "bvec"}]}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
        RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "    ", 
       RowBox[{"string1", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "ecdlist1", ",", 
          "eadlist1", ",", "icdlist1", ",", "iadlist1"}], "}"}], " ", "=", 
        " ", 
        RowBox[{"AllVerticesWithAdjacency2", "[", 
         RowBox[{"m", ",", "d1", ",", "string1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"vert1", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Sort", "[", "vert1", "]"}], ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", " ", 
         RowBox[{"ToExpression", "[", "vert1", "]"}]}], "]"}]}]}], "\n", 
     "     ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpPlotReasonableSet", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddGmpPlotReasonableSet", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpPlotReasonableSet", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "CddGmpPlotReasonableSet", "]"}]}]}], 
    "]"}], " ", ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "propcont", ",", "liste", ",", " ", "zwmat", ",", " ", "finmat", ",", 
       " ", "reasout", ",", "propout", ",", "bvec", ",", " ", "extmat", ",", 
       " ", "m", ",", " ", "d1", ",", " ", "vert1", ",", " ", "vertlist1", 
       ",", " ", "string1", ",", " ", "linearity1", ",", " ", "incidences1", 
       ",", " ", "sortlist", ",", "ecdlist1", ",", "eadlist1", ",", 
       "icdlist1", ",", "iadlist1"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"propcont", " ", "=", "  ", 
       RowBox[{"OptionValue", "[", "ProperContribution", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"liste", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", "0"}],
           "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"zwmat", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
          " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"finmat", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"zwmat", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
          RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"reasout", " ", "=", " ", 
       RowBox[{"ReasonableOutcome", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"propout", " ", "=", " ", 
       RowBox[{"ProperAmount", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"reasout", ",", "propout"}], "]"}], ",", 
        RowBox[{
        "Print", "[", "\"\<Reasonable set coincides with the Upper set!\>\"", 
         "]"}], ",", "True", ",", "True"}], "]"}], ";", "\n", "    ", 
      RowBox[{"bvec", " ", "=", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"propcont", ",", "False"}], "]"}], ",", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"reasout", ",", " ", 
            RowBox[{"v", "[", "T", "]"}]}], "]"}], "]"}], ",", "\n", 
         "                 ", "True", ",", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"Append", "[", 
           RowBox[{"propout", ",", " ", 
            RowBox[{"v", "[", "T", "]"}]}], "]"}], "]"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"extmat", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Prepend", ",", " ", 
         RowBox[{"{", 
          RowBox[{"finmat", ",", " ", "bvec"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "    ", 
      RowBox[{"string1", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "ecdlist1", ",", 
         "eadlist1", ",", "icdlist1", ",", "iadlist1"}], "}"}], " ", "=", " ", 
       RowBox[{"AllVerticesWithAdjacency2", "[", 
        RowBox[{"m", ",", "d1", ",", "string1"}], "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"vert1", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Sort", "[", "vert1", "]"}], ",", 
         RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"vertlist1", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", " ", 
         RowBox[{"ToExpression", "[", "vert1", "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{
          RowBox[{"Length", "[", "vertlist1", "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Upper Set is a unique point.\>\"", "]"}], 
         ";"}], ",", "True", ",", "True"}], "]"}], ";", "\n", "    ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vertlist1", ",", "linearity1"}], "}"}], ",", "ecdlist1", 
        ",", "eadlist1", ",", "icdlist1", ",", "iadlist1", ",", "extmat"}], 
       "}"}]}]}], "\n", "    ", "]"}]}], ";"}]}], "Code",ExpressionUUID->\
"2e765a17-43ad-423c-b5ff-d052f565aea3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CddGmpPlotLowerSet", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CddGmpPlotLowerSet", "::", "argerr"}], "]"}], ";", "$Failed"}],
     ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CddGmpPlotLowerSet", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "CddGmpPlotLowerSet", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "liste", ",", " ", "zwmat", ",", " ", "finmat", ",", " ", "bvec", ",", 
        " ", "smc", ",", " ", "extmat", ",", " ", "m", ",", " ", "d1", ",", 
        " ", "vert1", ",", " ", "vertlist1", ",", " ", "string1", ",", " ", 
        "linearity1", ",", " ", "incidences1", ",", " ", "sortlist", ",", 
        "ecdlist1", ",", "eadlist1", ",", "icdlist1", ",", "iadlist1"}], 
       "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"liste", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", ">=", " ", "j"}], ",", " ", "1", ",", " ", 
            "0"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"zwmat", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Permutations", "[", "#", "]"}], " ", "&"}], " ", "/@", 
           " ", "liste"}], ",", " ", "1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"finmat", " ", "=", " ", 
        RowBox[{"-", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"zwmat", ",", " ", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}], ",", " ", 
           RowBox[{"Last", "[", "zwmat", "]"}]}], "]"}]}]}], ";", "\n", 
       "    ", 
       RowBox[{"smc", " ", "=", " ", 
        RowBox[{"SmallestContributionVector", "[", "game", "]"}]}], ";", "\n",
        "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"smc", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], "]"}], 
         ",", " ", 
         RowBox[{
         "Print", "[", 
          "\"\<The Lower Set coincides with the Imputation Set!\>\"", "]"}], 
         ",", "\n", "                ", "True", ",", "True"}], "]"}], ";", 
       "\n", "    ", 
       RowBox[{"bvec", " ", "=", " ", 
        RowBox[{"Rationalize", "[", 
         RowBox[{"Append", "[", 
          RowBox[{"smc", ",", " ", 
           RowBox[{"-", 
            RowBox[{"v", "[", "T", "]"}]}]}], "]"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"extmat", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "finmat"}], ",", " ", "bvec"}], "}"}]}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "d1"}], "}"}], " ", "=", " ", 
        RowBox[{"Dimensions", "[", "extmat", "]"}]}], ";", "\n", "    ", 
       RowBox[{"string1", "=", 
        RowBox[{"ToString", "[", 
         RowBox[{"extmat", ",", "InputForm"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vert1", ",", "linearity1"}], "}"}], ",", "ecdlist1", ",", 
          "eadlist1", ",", "icdlist1", ",", "iadlist1"}], "}"}], " ", "=", 
        " ", 
        RowBox[{"AllVerticesWithAdjacency2", "[", 
         RowBox[{"m", ",", "d1", ",", "string1"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"vert1", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Sort", "[", "vert1", "]"}], ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"vertlist1", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", " ", 
          RowBox[{"ToExpression", "[", "vert1", "]"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"Length", "[", "vertlist1", "]"}], ",", "1"}], "]"}], ",", 
         
         RowBox[{
          RowBox[{"Print", "[", "\"\<Lower Set is a unique point.\>\"", "]"}],
           ";"}], ",", "True", ",", "True"}], "]"}], ";", "\n", "    ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vertlist1", ",", "linearity1"}], "}"}], ",", "ecdlist1", 
         ",", "eadlist1", ",", "icdlist1", ",", "iadlist1", ",", "extmat"}], 
        "}"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BaryCenter", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"BaryCenter", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BaryCenter", "[", "game_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "crv", "}"}], ",", "\n", "     ", 
     RowBox[{
      RowBox[{"crv", "=", 
       RowBox[{"CddGmpVerticesCore", "[", "game", "]"}]}], ";", "\n", "     ", 
      RowBox[{
       RowBox[{"Total", "[", "crv", "]"}], "/", 
       RowBox[{"Length", "[", "crv", "]"}]}]}]}], "\n", "\t\t   ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"92c1dd61-3e5c-44e2-b667-c16bfbad77ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AnimationKernelProperty2d", "[", 
    RowBox[{"game_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "AnimationKernelProperty2d", "]"}]}]}], 
    "]"}], " ", ":=", " ", "\n", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "uppval", ",", "lowval", ",", "stpsize", ",", "detlow", ",", "manip"}], 
      "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"uppval", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "UpperCritVal", "]"}]}], ";", "\n", "    ", 
      RowBox[{"lowval", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "LowerCritVal", "]"}]}], ";", "\n", "    ", 
      RowBox[{"stpsize", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "IncSize", "]"}]}], ";", "\n", "    ", 
      RowBox[{"manip", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "UseManipulate", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"detlow", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"lowval", "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"First", "[", 
          RowBox[{"EpsCore", "[", "game", "]"}], "]"}], ",", " ", 
         RowBox[{"lowval", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"manip", ",", "False"}], "]"}], ",", "\n", "             ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"StrongEpsCore2d", "[", 
           RowBox[{"game", ",", 
            RowBox[{"EpsilonValue", " ", "->", " ", "t"}], ",", 
            RowBox[{"Labeling", " ", "->", " ", "False"}]}], "]"}], ",", " ", 
          
          RowBox[{"{", 
           RowBox[{"t", ",", " ", 
            RowBox[{"uppval", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "detlow", ",", " ", 
            RowBox[{"stpsize", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", "\n", 
        "             ", 
        RowBox[{"Manipulate", "[", 
         RowBox[{
          RowBox[{"StrongEpsCore2d", "[", 
           RowBox[{"game", ",", 
            RowBox[{"EpsilonValue", " ", "->", " ", "t"}], ",", 
            RowBox[{"Labeling", " ", "->", " ", "False"}]}], "]"}], ",", " ", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", " ", 
              RowBox[{"uppval", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Epsilon\>\""}], 
             "}"}], ",", " ", "detlow", ",", " ", 
            RowBox[{"uppval", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"stpsize", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
       "      ", "]"}]}]}], "\n", "    ", "]"}]}], ";"}]], "Code",ExpressionUU\
ID->"b7b550b7-7113-4e84-83b7-4c99279e5434"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StrongEpsCore2d", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"StrongEpsCore2d", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StrongEpsCore2d", "[", 
     RowBox[{"game_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "StrongEpsCore2d", "]"}]}]}], "]"}], 
    " ", ":=", " ", "\n", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "fs", ",", "lab", ",", "oldvls", ",", "epsval", ",", "epsvls", ",", 
        "newgame", ",", "vertlist", ",", "vert", ",", "cvh", ",", "mv", ",", 
        "vpts", ",", "lgd", ",", "origgame", ",", "gr1", ",", "gr2", ",", 
        "gr2b", ",", "gr", ",", "grli"}], "}"}], ",", "\n", "     ", 
      RowBox[{
       RowBox[{"fs", "  ", "=", "  ", 
        RowBox[{"OptionValue", "[", "FigureSize", "]"}]}], ";", "\n", "     ", 
       RowBox[{"epsval", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "EpsilonValue", "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"lab", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "Labeling", "]"}]}], ";", "\n", "     ", 
       RowBox[{"oldvls", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", "     ", 
       RowBox[{"gr1", "=", 
        RowBox[{"FilledCoreV6", "[", 
         RowBox[{"game", ",", 
          RowBox[{"DisplayLegend", " ", "->", " ", "False"}], ",", 
          RowBox[{"Silent", " ", "->", " ", "True"}]}], "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"epsvls", " ", "=", " ", 
        RowBox[{"EpsValue", "[", 
         RowBox[{"game", ",", " ", "epsval"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"epsvls", " ", "=", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"epsvls", ",", "0"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"epsvls", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"epsvls", ",", 
          RowBox[{"Last", "[", "oldvls", "]"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"newgame", "=", " ", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"T", ",", "epsvls"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"vertlist", "=", 
        RowBox[{"CddGmpVerticesCore", "[", "newgame", "]"}]}], ";", "\n", 
       "     ", 
       RowBox[{"vert", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Vec3DToSimplex", "[", "#", "]"}], " ", "&"}], " ", "/@", 
         " ", "vertlist"}]}], ";", "\n", "     ", 
       RowBox[{"cvh", "=", " ", 
        RowBox[{"ConvexHull", "[", "vert", "]"}]}], ";", "\n", "     ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"cvh", ",", 
         RowBox[{"First", "[", "cvh", "]"}]}], "]"}], ";", "\n", "     ", 
       RowBox[{"mv", "=", 
        RowBox[{"Mean", "[", "vert", "]"}]}], ";", "\n", "     ", 
       RowBox[{"vpts", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], " ", "&"}], "/@", " ", "vert"}]}],
        ";", "\n", "     ", 
       RowBox[{"lgd", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"lab", ",", "True"}], "]"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"#1", ",", 
               RowBox[{
                RowBox[{"1.15", "*", "#2"}], "-", 
                RowBox[{"0.15", "*", "mv"}]}]}], "]"}], " ", "&"}], ",", " ", 
            
            RowBox[{"{", 
             RowBox[{"vertlist", ",", "vert"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"gr2", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", " ", 
           RowBox[{"GraphicsComplex", "[", 
            RowBox[{"vert", ",", " ", 
             RowBox[{"Line", "[", "cvh", "]"}]}], "]"}]}], "}"}], "]"}]}], 
       ";", "\n", "     ", 
       RowBox[{"gr2b", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"lgd", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Brown", ",", 
               RowBox[{"PointSize", "[", "0.015", "]"}], ",", "vpts"}], "}"}],
              ",", "lgd"}], "}"}], "]"}]}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"origgame", "=", 
        RowBox[{"DefineGame", "[", 
         RowBox[{"T", ",", "oldvls"}], "]"}]}], ";", "\n", "     ", 
       RowBox[{"grli", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"gr1", ",", "gr2", ",", "gr2b"}], "}"}], "]"}]}], ";", "\n",
        "     ", 
       RowBox[{"gr", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"grli", ",", 
          RowBox[{"ImageSize", " ", "->", " ", "fs"}], ",", 
          RowBox[{"PlotLabel", " ", "->", " ", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<eps=\>\"", ",", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", "epsval", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
       ";", "\n", "     ", 
       RowBox[{"Return", "[", "gr", "]"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FilledCoreV6", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"FilledCoreV6", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FilledCoreV6", "[", 
     RowBox[{"game_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "FilledCoreV6", "]"}]}]}], "]"}], " ", ":=",
     " ", "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dlg", ",", "fs", ",", "sil", ",", "prim", ",", "vertlist", ",", 
        "impext", ",", "solv", ",", "vert", ",", "mv1", ",", "mv2", ",", 
        "imp", ",", "clm", ",", "lgd1", ",", "lgd2", ",", "vpts", ",", "ipts",
         ",", "spts", ",", "redead", ",", "rg", ",", "impred", ",", "dltr", 
        ",", "cvh", ",", "tric", ",", "crdli", ",", "trpts", ",", "gr0", ",", 
        "gr0b", ",", "gr1", ",", "gr1b", ",", "gr2", ",", "gr3", ",", "grli", 
        ",", "gr"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"dlg", "  ", "=", " ", 
        RowBox[{"OptionValue", "[", "DisplayLegend", "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"fs", "  ", "=", "  ", 
        RowBox[{"OptionValue", "[", "FigureSize", "]"}]}], ";", "\n", "    ", 
       
       RowBox[{"sil", "  ", "=", " ", 
        RowBox[{"OptionValue", "[", "Silent", "]"}]}], ";", "\n", "    ", 
       RowBox[{"prim", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "PreImpSet", "]"}]}], ";", "\t ", "\n", 
       "    ", 
       RowBox[{"vertlist", "=", 
        RowBox[{"CddGmpVerticesCore", "[", "game", "]"}]}], ";", "\n", "    ", 
       RowBox[{"impext", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"prim", ",", "True"}], "]"}], ",", 
          RowBox[{"Permutations", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v", "[", "T", "]"}], ",", "0", ",", "0"}], "}"}], "]"}],
           ",", 
          RowBox[{"CddGmpImputationVertices", "[", "game", "]"}]}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{"solv", " ", "=", "  ", 
        RowBox[{"PointSol", "[", "game", "]"}]}], ";", "\n", "    ", 
       RowBox[{"vert", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vertlist", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", "\n", "                      ", 
          
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SameQ", "[", 
              RowBox[{"sil", ",", "False"}], "]"}], ",", 
             RowBox[{"Print", "[", "\"\<Core is empty\>\"", "]"}], ",", 
             "True"}], "]"}], ";", 
           RowBox[{"{", "}"}]}], ",", "\n", "                    ", 
          RowBox[{
           RowBox[{
            RowBox[{"Vec3DToSimplex", "[", "#", "]"}], " ", "&"}], " ", "/@", 
           " ", "vertlist"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"imp", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Vec3DToSimplex", "[", "#", "]"}], " ", "&"}], " ", "/@", 
         " ", "impext"}]}], ";", "\n", "    ", 
       RowBox[{"mv1", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vert", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Mean", "[", "vert", "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"mv2", " ", "=", " ", 
        RowBox[{"Mean", "[", "imp", "]"}]}], ";", "\n", "    ", 
       RowBox[{"lgd1", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vert", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"#1", ",", 
               RowBox[{
                RowBox[{"1.15", "*", "#2"}], "-", 
                RowBox[{"0.15", "*", "mv1"}]}]}], "]"}], " ", "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"vertlist", ",", "vert"}], "}"}]}], "]"}]}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{"lgd2", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"#1", ",", 
             RowBox[{
              RowBox[{"1.1", "*", "#2"}], "-", 
              RowBox[{"0.1", "*", "mv2"}]}]}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"impext", ",", "imp"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"vpts", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vert", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Point", "[", "#", "]"}], " ", "&"}], "/@", " ", 
           "vert"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"ipts", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], " ", "&"}], "/@", " ", "imp"}]}], 
       ";", "\n", "    ", 
       RowBox[{"spts", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", "#", "]"}], " ", "&"}], "/@", " ", "solv"}]}],
        ";", "\n", "    ", 
       RowBox[{"redead", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{"T", ",", "#"}], "]"}], " ", "&"}], "/@", " ", "T"}]}], 
       ";", "\n", "    ", 
       RowBox[{"rg", " ", "=", " ", 
        RowBox[{"Range", "[", "3", "]"}]}], ";", "\n", "    ", 
       RowBox[{"impred", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Append", ",", 
          RowBox[{"{", 
           RowBox[{"redead", ",", "rg"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"trpts", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vert", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", "\n", "                        ", 
          RowBox[{
           RowBox[{"dltr", " ", "=", " ", 
            RowBox[{"DelaunayTriangulation", "[", "vert", "]"}]}], ";", "\n", 
           "                        ", 
           RowBox[{"cvh", "=", " ", 
            RowBox[{"ConvexHull", "[", "vert", "]"}]}], ";", "\n", 
           "                        ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"cvh", ",", 
             RowBox[{"First", "[", "cvh", "]"}]}], "]"}], ";", "\n", 
           "\t                ", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Drop", "[", 
               RowBox[{"#", ",", " ", "1"}], "]"}], "]"}], " ", "&"}], " ", "/@",
             " ", "dltr"}]}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"gr0", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", " ", 
           RowBox[{"GraphicsComplex", "[", 
            RowBox[{"imp", ",", " ", 
             RowBox[{"Line", "[", "impred", "]"}]}], "]"}]}], "}"}], "]"}]}], 
       ";", "\n", "    ", 
       RowBox[{"gr0b", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Gray", ",", 
             RowBox[{"PointSize", "[", "0.015", "]"}], ",", "ipts"}], "}"}], 
           ",", "lgd2"}], "}"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"gr1", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"GreaterEqual", "[", 
           RowBox[{"$VersionNumber", ",", "10."}], "]"}], ",", "\n", "\t   ", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"vert", ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{"{", "}"}], ",", " ", 
            RowBox[{"ConvexHullMesh", "[", "vert", "]"}]}], "]"}], ",", "\n", 
          "\t   ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SameQ", "[", 
             RowBox[{"vert", ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"LightBlue", ",", " ", 
               RowBox[{"GraphicsComplex", "[", 
                RowBox[{"vert", ",", 
                 RowBox[{"Polygon", "[", "trpts", "]"}]}], "]"}]}], "}"}], 
             "]"}]}], "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"gr1b", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vert", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Blue", ",", 
               RowBox[{"PointSize", "[", "0.015", "]"}], ",", "vpts"}], "}"}],
              ",", "lgd1"}], "}"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"gr2", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"vert", ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", " ", 
             RowBox[{"GraphicsComplex", "[", 
              RowBox[{"vert", ",", " ", 
               RowBox[{"Line", "[", "cvh", "]"}]}], "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"clm", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"LightRed", ",", "Green", ",", "Blue", ",", "Red"}], "}"}]}],
        ";", "\n", "    ", 
       RowBox[{"gr3", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{"PointSize", "[", "0.018", "]"}], ",", "#2"}], "}"}], 
             "]"}], " ", "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"clm", ",", "spts"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"grli", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
          "gr0", ",", "gr0b", ",", "gr1", ",", "gr1b", ",", "gr2", ",", 
           "gr3"}], "}"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"gr", " ", "=", " ", 
        RowBox[{"Show", "[", 
         RowBox[{"grli", ",", 
          RowBox[{"ImageSize", " ", "->", " ", "fs"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"gr", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"dlg", ",", "True"}], "]"}], ",", " ", 
          RowBox[{"ShowLegend", "[", 
           RowBox[{"gr", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Graphics", "[", 
                   RowBox[{"{", 
                    RowBox[{"Blue", ",", " ", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", "0.005"}], 
                    "]"}]}], "}"}], "]"}], ",", " ", 
                  "\"\<Shapley Value\>\""}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Graphics", "[", 
                   RowBox[{"{", 
                    RowBox[{"Green", ",", " ", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", "0.005"}], 
                    "]"}]}], "}"}], "]"}], ",", " ", "\"\<Nucleolus\>\""}], 
                 "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Graphics", "[", 
                   RowBox[{"{", 
                    RowBox[{"LightRed", ",", " ", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", "0.005"}], 
                    "]"}]}], "}"}], "]"}], ",", " ", "\"\<Kernel\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Graphics", "[", 
                   RowBox[{"{", 
                    RowBox[{"Red", ",", " ", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", "0.005"}], 
                    "]"}]}], "}"}], "]"}], ",", " ", "\"\<Pre-Kernel\>\""}], 
                 "}"}]}], "}"}], ",", " ", 
              RowBox[{"LegendShadow", " ", "->", " ", "None"}], ",", " ", 
              RowBox[{"LegendTextSpace", " ", "->", " ", "5"}], ",", 
              RowBox[{"LegendPosition", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"1.1", ",", " ", 
                 RowBox[{"-", ".4"}]}], "}"}]}], ",", 
              RowBox[{"LegendSize", "->", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.25"}], "}"}]}]}], "}"}]}], "]"}], ",", 
          "gr"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"Return", "[", "gr", "]"}], ";"}]}], "\n", "    ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PointSol", "[", "game_", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kr", ",", "nc", ",", "shv", ",", "prk"}], "}"}], ",", "\n", 
     "    ", 
     RowBox[{
      RowBox[{"kr", "=", 
       RowBox[{"Kernel", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"nc", "=", 
       RowBox[{"ModifiedNucleolus", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"shv", " ", "=", " ", 
       RowBox[{"ShapleyValue", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"prk", " ", "=", " ", 
       RowBox[{"PreKernelSolution", "[", "game", "]"}]}], ";", "\n", "    ", 
      RowBox[{"nc", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"nc", ",", "ker"}], "]"}], ",", "nc", ",", "kr"}], "]"}]}], 
      ";", "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"Vec3DToSimplex", "[", "#", "]"}], " ", "&"}], "/@", " ", 
       RowBox[{"{", 
        RowBox[{"kr", ",", "nc", ",", "shv", ",", "prk"}], "}"}]}]}]}], "\n", 
    "]"}]}], ";"}], "\n"}], "Code",ExpressionUUID->"5053c693-c10d-438d-939b-\
696cb115aa4c"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Function", " ", 
   RowBox[{"FilledCore", "[", "]"}], " ", "is", " ", 
   RowBox[{"deprecated", ".", " ", "Use"}], " ", "TuGames", " ", "Version", 
   " ", "1.8", " ", "if", " ", "you", " ", "need", " ", "this", " ", 
   RowBox[{"function", "."}]}], " ", "*)"}]], "Code",ExpressionUUID->\
"721d06fb-ec94-4f80-8ce3-b74f843ffbad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Vec3DToSimplex", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1_", "?", "NumberQ"}], ",", " ", 
       RowBox[{"x2_", "?", "NumberQ"}], ",", " ", 
       RowBox[{"x3_", "?", "NumberQ"}]}], "}"}], "]"}], " ", ":=", " ", "\n", 
    "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x2", " ", "-", " ", "x1"}], ")"}], " ", 
         RowBox[{
          RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], ",", " ", 
        RowBox[{"x3", " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x1", " ", "+", " ", "x2"}], ")"}], "/", "2"}]}]}], 
       "}"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Borrowed", " ", "from", "\n", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"stackoverflow", ".", "com"}], "/", "questions"}], "/", 
       "3506982"}], "/", "projecting"}], "-", "points", "-", "from", "-", 
     RowBox[{"4", "d"}], "-", "space", "-", "into", "-", 
     RowBox[{"3", "d"}], "-", "space", "-", "in", "-", "mathematica"}]}], " ",
    "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Vec4DToSimplex", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1_", "?", "NumberQ"}], ",", " ", 
       RowBox[{"x2_", "?", "NumberQ"}], ",", " ", 
       RowBox[{"x3_", "?", "NumberQ"}], ",", " ", 
       RowBox[{"x4_", "?", "NumberQ"}]}], "}"}], "]"}], " ", ":=", " ", "\n", 
    "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x2", " ", "+", " ", 
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", "*", " ", 
          RowBox[{"(", 
           RowBox[{"x3", " ", "+", " ", "x4"}], ")"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], " ", "*", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x3", "/", "2"}], " ", "+", " ", 
           RowBox[{"x4", "/", "6"}]}], ")"}]}], ",", " ", 
        RowBox[{
         RowBox[{"Sqrt", "[", "6", "]"}], " ", "*", " ", 
         RowBox[{"x4", "/", "3"}]}]}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "mathlink", " ", "section"}], " ", "*)"}]}]}], "Code",E\
xpressionUUID->"9f95f4e9-bf44-44e2-86cc-a9ed046ca1a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "section", " ", "adjusted", " ", "worth", " ", "vector", " ", "starts"}], 
   " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AdjustedWorthVectors", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"AdjustedWorthVectors", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjustedWorthVectors", "[", 
      RowBox[{"game_", ",", " ", "k_Integer"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "permliste", "}"}], ",", "\n", "   ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "k", "]"}], "==", "1"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"permliste", " ", "=", " ", 
           RowBox[{"Permutations", "[", "T", "]"}]}], ";", "\n", "      ", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"SubCall1", "[", 
                 RowBox[{"#", ",", " ", "i", ",", " ", "k"}], "]"}], ",", " ",
                 "\n", "          ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{"v", ",", " ", 
                    RowBox[{"PlayerIJoin", "[", 
                    RowBox[{"#", ",", " ", "i"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{"v", ",", " ", 
                    RowBox[{"PDeltaI", "[", 
                    RowBox[{"#", ",", " ", "i"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "          ", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"SubCall2", "[", 
                   RowBox[{"#", ",", " ", "i", ",", " ", "k"}], "]"}], ",", 
                  " ", 
                  RowBox[{"UtopiaPayoff", "[", 
                   RowBox[{"game", ",", " ", "i"}], "]"}], ",", "\n", 
                  "             ", 
                  RowBox[{
                   RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
                   RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"v", ",", " ", 
                    RowBox[{"PDeltaI", "[", 
                    RowBox[{"#", ",", " ", "i"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                   RowBox[{"UtopiaSum", "[", 
                    RowBox[{"game", ",", " ", 
                    RowBox[{"DeltaJSet", "[", 
                    RowBox[{"#", ",", " ", "k"}], "]"}]}], "]"}]}]}], "]"}]}],
                "\n", "             ", "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", 
                RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}], " ", 
            "&"}], " ", "/@", " ", "permliste"}]}], ",", " ", "\n", 
         "         ", 
         RowBox[{"DisplayRem", "[", "k", "]"}]}], "\n", "    ", "]"}]}], "\n",
       "   ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayRem", "[", "k_Integer", "]"}], ":=", 
     RowBox[{"(", "\n", "         ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Depth is equal to \>\"", ",", 
         RowBox[{"Depth", "[", "k", "]"}]}], "]"}], ";", "\n", "         ", 
       RowBox[{
       "Print", "[", 
        "\"\<Usage: AdjustedWorthVectors[game,k] and kCover[game,k]\>\"", 
        "]"}], ";", "\n", "         ", 
       RowBox[{
       "Print", "[", 
        "\"\<The varibale 'k' has not the correct input format.\>\"", "]"}], 
       ";", "\n", "         ", 
       RowBox[{
       "Print", "[", 
        "\"\<The variable 'k' must be a natural number and not a list.\>\"", 
        "]"}]}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SubCall1", "[", 
      RowBox[{"permele_", ",", " ", "player_", ",", " ", "k_Integer"}], "]"}],
      " ", ":=", " ", 
     RowBox[{
      RowBox[{"permele", "[", 
       RowBox[{"[", "player", "]"}], "]"}], " ", "<", " ", "k"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SubCall2", "[", 
      RowBox[{"permele_", ",", " ", "player_", ",", " ", "k_Integer"}], "]"}],
      " ", ":=", " ", 
     RowBox[{
      RowBox[{"permele", "[", 
       RowBox[{"[", "player", "]"}], "]"}], " ", ">", " ", "k"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PDeltaI", "[", 
      RowBox[{"list_", ",", " ", "player_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"thresh", ",", " ", "newlist", ",", " ", 
         RowBox[{"genlist", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ",", " ", "retval"}], "}"}], ",", "\n", 
       "    ", 
       RowBox[{
        RowBox[{"thresh", " ", "=", " ", 
         RowBox[{"list", "[", 
          RowBox[{"[", "player", "]"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"newlist", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"list", ",", " ", 
           RowBox[{"list", "[", 
            RowBox[{"[", "player", "]"}], "]"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"retval", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", " ", "<", " ", "thresh"}], ",", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"genlist", ",", " ", "#"}], "]"}], ",", " ", 
             RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
          "newlist"}]}], ";", "\n", "    ", 
        RowBox[{"pdel", "=", 
         RowBox[{"List", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", "retval", "]"}], "]"}], "]"}]}], ";", "\n",
         "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "pdel", "]"}], "==", "2"}], ",", 
          RowBox[{"Union", "[", "pdel", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Union", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
           "pdel"}]}], "]"}]}]}], "\n", "    ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlayerIJoin", "[", 
      RowBox[{"list_", ",", " ", "player_"}], "]"}], " ", ":=", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "pl", "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"pl", "=", 
         RowBox[{"List", "[", 
          RowBox[{"Sort", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"PDeltaI", "[", 
               RowBox[{"list", ",", " ", "player"}], "]"}], ",", " ", 
              "player"}], "]"}], "]"}], "]"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "pl", "]"}], "==", "2"}], ",", 
          RowBox[{"Union", "[", "upl", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Union", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
           "pl"}]}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DeltaJSet", "[", 
      RowBox[{"list_", ",", " ", "k_Integer"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"genlist", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ",", " ", "pos", ",", " ", "retval"}], "}"}], 
       ",", "\n", "    ", 
       RowBox[{
        RowBox[{"pos", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", " ", ">", " ", "k"}], ",", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"genlist", ",", " ", "#"}], "]"}], ",", " ", 
              RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
           "list"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"retval", " ", "=", " ", 
         RowBox[{"Sort", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"list", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
            " ", "pos"}], "]"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "retval", "]"}], "==", "2"}], ",", 
          RowBox[{"Union", "[", "retval", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Union", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
           "retval"}]}], "]"}]}]}], "\n", "    ", "]"}]}], ";"}], 
   "\n"}]}]], "Code",ExpressionUUID->"10f29875-e609-4880-b6e8-8617fc500cb7"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "section", " ", "adjusted", " ", "worth", " ", "vector", " ", "ends"}], " ",
   "*)"}]], "Code",ExpressionUUID->"652a4bcd-d490-4f96-99ff-8145423bca04"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"section", " ", "general", " ", "k"}], "-", 
   RowBox[{"convex", " ", "functions", " ", "starts"}]}], " ", "*)"}]], "Code",\
ExpressionUUID->"454a0734-1c17-4bf3-b1e3-1d984b5b08fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Nuc1convex", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Nuc1convex", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Nuc1convex", "[", "game_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"UtopiaVector", "[", "game", "]"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Extract", "[", 
      RowBox[{
       RowBox[{"Gap", "[", "game", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], " ", "/", " ", 
     RowBox[{"Length", "[", "T", "]"}]}]}]}], ";"}]}], "Code",ExpressionUUID->\
"ea077a60-a6e4-4ce7-9aed-5fd20329f223"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UtopiaPayoff", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UtopiaPayoff", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaPayoff", "[", "i_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
      RowBox[{"v", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"T", ",", "i"}], "]"}], "]"}]}], " ", "/;", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"Gap", "[", "game", "]"}], "]"}], " ", ">", " ", "0"}], " ", "&&",
       " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Gap", "[", "game", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}], " ", ">", " ", 
       "0"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaPayoff", "[", 
     RowBox[{"game_", ",", " ", "i_"}], "]"}], " ", ":=", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
      RowBox[{"v", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"T", ",", " ", "i"}], "]"}], "]"}]}], " ", "/;", "\n", 
     "        ", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"Gap", "[", "game", "]"}], "]"}], " ", ">", " ", "0"}], " ", "&&",
       " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Gap", "[", "game", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}], " ", ">=", " ", 
       "0"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperPayoff", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UpperPayoff", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperPayoff", "[", "i_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
     RowBox[{"v", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"T", ",", "i"}], "]"}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperPayoff", "[", 
     RowBox[{"game_", ",", " ", "i_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
     RowBox[{"v", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"T", ",", "i"}], "]"}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UtopiaSum", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UtopiaSum", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaSum", "[", 
     RowBox[{"game_", ",", " ", "S_List"}], "]"}], ":=", "  ", 
    RowBox[{"Plus", "  ", "@@", " ", 
     RowBox[{"UtopiaPayoff", " ", "/@", " ", "S"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UtopiaVector", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UtopiaVector", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UtopiaVector", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"UtopiaPayoff", "[", 
       RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", "T"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperVector", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UpperVector", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UpperVector", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"UpperPayoff", "[", 
       RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", "T"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperSum", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UpperSum", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UpperSum", "[", 
    RowBox[{"game_", ",", " ", "S_List"}], "]"}], ":=", "  ", 
   RowBox[{"Plus", "  ", "@@", " ", 
    RowBox[{"UpperPayoff", " ", "/@", " ", "S"}]}]}], ";"}]}], "Code",Expressi\
onUUID->"4f170821-35ec-4dae-951f-8d3383d43992"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Gap", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"Gap", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gap", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"UpperSum", "[", 
         RowBox[{"game", ",", "#"}], "]"}], " ", "-", " ", 
        RowBox[{"v", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
     "Coalitions"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Generalized", " ", "Gap", " ", "Function"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenConcession", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"GenConcession", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenConcession", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"Min", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"GenUpperSum", "[", 
             RowBox[{"game", ",", "#"}], "]"}], " ", "-", " ", 
            RowBox[{"v", "[", "#", "]"}]}], ")"}], " ", "&"}], "  ", "/@", 
         " ", 
         RowBox[{"W", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUtopiaPayoff", "[", 
     RowBox[{"game_", ",", " ", "i_"}], "]"}], " ", ":=", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
      RowBox[{"v", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"T", ",", " ", "i"}], "]"}], "]"}]}], " ", "/;", "\n", 
     "        ", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"GenGap", "[", "game", "]"}], "]"}], " ", ">", " ", "0"}], 
      " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"GenGap", "[", "game", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}], " ", ">=", " ", 
       "0"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenUpperPayoff", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GenUpperPayoff", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUpperPayoff", "[", "i_", "]"}], ":=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
         RowBox[{"v", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"#", ",", "i"}], "]"}], "]"}]}], ")"}], " ", "&"}], "/@", 
      " ", "Coalitions"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUpperPayoff", "[", 
     RowBox[{"game_", ",", " ", "i_"}], "]"}], ":=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"v", "[", "#", "]"}], " ", "-", " ", 
         RowBox[{"v", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"#", ",", "i"}], "]"}], "]"}]}], ")"}], " ", "&"}], "/@", 
      " ", "Coalitions"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenUpperSum", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GenUpperSum", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUpperSum", "[", 
     RowBox[{"game_", ",", " ", "S_List"}], "]"}], ":=", "  ", 
    RowBox[{"Plus", "  ", "@@", " ", 
     RowBox[{"GenUpperPayoff", " ", "/@", " ", "S"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenGap", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GenGap", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenGap", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"GenUpperSum", "[", 
         RowBox[{"game", ",", "#"}], "]"}], " ", "-", " ", 
        RowBox[{"v", "[", "#", "]"}]}], ")"}], " ", "&"}], " ", "/@", " ", 
     "Coalitions"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenUpperVector", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UpperVector", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenUpperVector", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"GenUpperPayoff", "[", 
       RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", "T"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vkS", "[", 
     RowBox[{"game_", ",", "S_List"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"UpperSum", "[", 
      RowBox[{"game", ",", "S"}], "]"}], " ", "-", " ", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Gap", "[", "game", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"kCover", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"kCover", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kCover", "[", 
     RowBox[{"game_", ",", "k_Integer"}], "]"}], ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Depth", "[", "k", "]"}], "==", "1"}], ",", "\n", "       ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], " ", "<", " ", "k"}], ",", " ", 
           RowBox[{"v", "[", "#", "]"}], ",", " ", 
           RowBox[{"vkS", "[", 
            RowBox[{"game", ",", "#"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
         " ", "Coalitions"}], "]"}], ",", "\n", "       ", 
      RowBox[{"DisplayRem", "[", "k", "]"}]}], "\n", "  ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjustedEffVector", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"AdjustedEffVector", "::", "argerr"}], "]"}], ";", "$Failed"}],
      ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjustedEffVector", "[", 
     RowBox[{"game_", ",", "i_Integer"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"UpperVector", "[", "game", "]"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Gap", "[", "game", "]"}], "]"}], " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Permutations", "[", "\n", "                      ", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"0", " ", "j"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{
                RowBox[{"Length", "[", "T", "]"}], "-", "1"}]}], "}"}]}], 
            "]"}], ",", "1"}], "]"}], "]"}], ",", "i"}], "\n", "]"}]}]}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjustedEffUpperVectors", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"AdjustedEffUpperVectors", "::", "argerr"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AdjustedEffUpperVectors", "[", "game_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjustedEffVector", "[", 
      RowBox[{"game", ",", "#"}], "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
  ";"}]}], "Code",ExpressionUUID->"62f30b2a-74fb-4a71-a8fa-7030db97f2e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Concession", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"Concession", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Concession", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"Min", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"UpperSum", "[", 
             RowBox[{"game", ",", "#"}], "]"}], " ", "-", " ", 
            RowBox[{"v", "[", "#", "]"}]}], ")"}], " ", "&"}], "  ", "/@", 
         " ", 
         RowBox[{"W", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisagreeConvex", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"DisagreeConvex", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DisagreeConvex", "[", "game_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"UpperPayoff", "[", "#", "]"}], "-", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Gap", "[", "game", "]"}], ",", 
        RowBox[{"#", "+", "1"}]}], "]"}]}], " ", "&"}], " ", "/@", " ", 
    "T"}]}], ";"}]}], "Code",ExpressionUUID->"614ecac9-d6dc-48b1-b8de-\
cfcd692c379b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Disagreement", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"Disagreement", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Disagreement", "[", "game_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"UpperVector", "[", "game", "]"}], " ", "-", " ", 
    RowBox[{"Concession", "[", "game", "]"}]}]}], ";"}]}], "Code",ExpressionUU\
ID->"a69c1279-cf38-4167-9252-2ad7805ec7e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TauVal", "[", "game_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"UpperVector", "[", "game", "]"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Extract", "[", 
         RowBox[{
          RowBox[{"Gap", "[", "game", "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], " ", 
        RowBox[{"Concession", "[", "game", "]"}]}], ")"}], "/", 
      RowBox[{"Total", "[", 
       RowBox[{"Concession", "[", "game", "]"}], "]"}]}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TauValue", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"TauValue", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TauValue", "[", "game_", "]"}], ":=", " ", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Gap", "[", "game", "]"}], "]"}], "==", "0"}], ",", 
     RowBox[{"Tau", "[", "game", "]"}], ",", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"Gap", "[", "game", "]"}], "]"}], ">", "0"}], ",", 
     RowBox[{"TauVal", "[", "game", "]"}], ",", "\n", "\t\t        ", "True", 
     ",", 
     RowBox[{
      RowBox[{"Print", "[", "\"\<Game is not quasi-balanced!\>\"", "]"}], ";", 
      RowBox[{"{", "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Tau", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"UpperVector", "[", "game", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Chi", "-", "Value"}], ",", " ", 
    RowBox[{
     RowBox[{"it", " ", "is", " ", "a", " ", "generalized", " ", "Tau"}], "-", 
     RowBox[{"Value", "."}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChiVal", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "sc", "}"}], ",", "\n", "\t\t      ", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Total", "[", 
         RowBox[{"GenConcession", "[", "game", "]"}], "]"}]}], ";", "\n", 
       "\t\t\t       ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"sc", ",", "0"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Game is not essential!\>\"", "]"}], ";", 
          
          RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t  ", 
         RowBox[{
          RowBox[{"GenUpperVector", "[", "game", "]"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Extract", "[", 
              RowBox[{
               RowBox[{"GenGap", "[", "game", "]"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], " ", 
             RowBox[{"GenConcession", "[", "game", "]"}]}], ")"}], "/", 
           "sc"}]}]}], "]"}]}]}], "\n", "\t\t\t ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChiValue", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"ChiValue", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChiValue", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"GenGap", "[", "game", "]"}], "]"}], "==", "0"}], ",", 
      RowBox[{"Chi", "[", "game", "]"}], ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"GenGap", "[", "game", "]"}], "]"}], ">", "0"}], ",", 
      RowBox[{"ChiVal", "[", "game", "]"}], ",", "\n", "\t\t        ", "True",
       ",", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Game is not essential!\>\"", "]"}], ";", 
       RowBox[{"{", "}"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChiValue", "[", "game_", "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "[", 
       RowBox[{"GenGap", "[", "game", "]"}], "]"}], "==", "0"}], ",", 
     RowBox[{"Chi", "[", "game", "]"}], ",", 
     RowBox[{"ChiVal", "[", "game", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Chi", "[", "game_", "]"}], ":=", " ", 
   RowBox[{"GenUpperVector", "[", "game", "]"}]}], ";"}]}], "Code",ExpressionU\
UID->"e33a6dde-92ee-4b10-b7a2-c6799e810f6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GatelyValue", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GatelyValue", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GatelyValue", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dess", ",", "d", ",", "uv", ",", "vi"}], "}"}], ",", "\n", 
      "\t\t\t  ", 
      RowBox[{
       RowBox[{"vi", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "T"}]}], ";", "\n", "\t\t\t  ", 
       RowBox[{"dess", " ", "=", " ", 
        RowBox[{
         RowBox[{"v", "[", "T", "]"}], " ", "-", " ", 
         RowBox[{"Total", "[", "vi", "]"}]}]}], ";", "\n", 
       "                          ", 
       RowBox[{"d", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Plus", "  ", "@@", " ", 
            RowBox[{"UpperPayoff", " ", "/@", " ", "T"}]}], " ", "-", 
           RowBox[{"v", "[", "T", "]"}]}], ")"}], "/", "dess"}]}], ";", "\n", 
       "\t\t\t  ", 
       RowBox[{"uv", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"UpperPayoff", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "T"}]}], ";", "\n", "\t\t\t  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{
           RowBox[{"EssentialQ", "[", "game", "]"}], ",", "True"}], "]"}], 
         ",", "\n", "\t\t\t     ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"d", "==", "1"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"uv", "+", 
              RowBox[{"d", "*", "vi"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"d", "+", "1"}], ")"}]}]}], "]"}], ",", "\n", 
         "\t\t\t     ", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Game is not essential, Gately Point does not exist!\>\"", 
           "]"}], ";", 
          RowBox[{"{", "}"}]}]}], "]"}]}]}], "\n", "\t\t    ", "]"}]}], ";"}],
   "\n"}], "\n"}], "Code",ExpressionUUID->"d26162f0-bcd3-4aa6-a133-\
3c8fbdd44ce2"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"section", " ", "general", " ", "k"}], "-", 
   RowBox[{"convex", " ", "functions", " ", "ends"}]}], " ", "*)"}]], "Code",E\
xpressionUUID->"f3ab445a-af11-4828-8885-115f3edd429b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Some", " ", "Proportional", " ", "Division", " ", "Rules"}], "  ",
    "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PDValue", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"PDValue", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PDValue", "[", "game_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vi", ",", "trQ"}], "}"}], ",", "\n", "\t\t      ", 
       RowBox[{
        RowBox[{"vi", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
          "T"}]}], ";", "\n", "\t\t      ", 
        RowBox[{"trQ", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Greater", "[", 
              RowBox[{"#", ",", " ", "0"}], "]"}], " ", "&"}], " ", "/@", " ",
             "vi"}]}], "]"}]}], ";", "\n", "\t              ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"trQ", ",", "True"}], "]"}], ",", "\n", "\t\t        ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vi", "/", 
             RowBox[{"Total", "[", "vi", "]"}]}], ")"}], "*", 
           RowBox[{"v", "[", "T", "]"}]}], ",", "\n", "\t\t          ", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Game is not individually positive! No PD-Value \
computed!\>\"", "]"}], ";", 
           RowBox[{"{", "}"}]}]}], "]"}]}]}], "\n", "\t\t    ", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EPSDValue", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"EPSDValue", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EPSDValue", "[", "game_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vi", ",", "trQ"}], "}"}], ",", "\n", "\t\t      ", 
       RowBox[{
        RowBox[{"vi", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"{", "#", "}"}], "]"}], " ", "&"}], " ", "/@", " ", 
          "T"}]}], ";", "\n", "\t\t      ", 
        RowBox[{"trQ", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Greater", "[", 
              RowBox[{"#", ",", " ", "0"}], "]"}], " ", "&"}], " ", "/@", " ",
             "vi"}]}], "]"}]}], ";", "\n", "\t\t      ", 
        RowBox[{"Svi", "=", 
         RowBox[{"Total", "[", "vi", "]"}]}], ";", "\n", "\t              ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"trQ", ",", "True"}], "]"}], ",", "\n", "\t\t         ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"Length", "[", "T", "]"}]}], ")"}], "*", "Svi"}], " ", 
           "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vi", "/", "Svi"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v", "[", "T", "]"}], "-", "Svi"}], ")"}]}]}], ",", 
          "\n", "\t\t          ", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Game is not individually positive! No EPSD-Value computed!\>\
\"", "]"}], ";", 
           RowBox[{"{", "}"}]}]}], "]"}]}]}], "\n", "\t\t    ", "]"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"005ac60c-9d4f-4a0a-91e3-0f37bec295e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "section", " ", "miscellaneously", " ", "functions", " ", "starts"}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DuttaRay", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"DuttaRay", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DuttaRay", "[", 
      RowBox[{"game_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "DuttaRay", "]"}]}]}], "]"}], " ", ":=",
      " ", "\n", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ConvexQ", "[", "game", "]"}], ",", " ", 
       RowBox[{"DuttaRayMain", "[", 
        RowBox[{"game", ",", "opts"}], "]"}], ",", " ", "\n", "  ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Warning: Game is not convex!\>\"", "]"}], 
        ";", " ", 
        RowBox[{"{", "}"}]}]}], "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->\
"6d6816af-606a-46a5-be88-8789d477cdb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DuttaRayMain", "[", 
    RowBox[{"game_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "DuttaRay", "]"}]}]}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dp", ",", "rap", ",", "vrs", ",", " ", "vN", ",", " ", "objf", ",", 
       " ", "cr", ",", " ", "prob", ",", " ", "sol"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"dp", "=", 
       RowBox[{"OptionValue", "[", "DigitPrecision", "]"}]}], ";", "\n", "  ", 
      RowBox[{"rap", "=", 
       RowBox[{"OptionValue", "[", "RationalApproximate", "]"}]}], ";", 
      "\t\t\t\t\t\t\t      ", "\n", "  ", 
      RowBox[{"vrs", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
      ";", "\n", "  ", 
      RowBox[{"vN", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "T", "]"}], "/", 
          RowBox[{"Length", "[", "T", "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"objf", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"Subtract", ",", " ", 
           RowBox[{"{", 
            RowBox[{"vrs", ",", " ", "vN"}], "}"}]}], "]"}], "^", "2"}], 
        "]"}]}], ";", "\n", "  ", 
      RowBox[{"cr", " ", "=", " ", 
       RowBox[{"Core", "[", "game", "]"}]}], ";", "\n", "  ", 
      RowBox[{"prob", " ", "=", " ", 
       RowBox[{"Prepend", "[", 
        RowBox[{"cr", ",", " ", "objf"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"NMinimize", "[", 
        RowBox[{"prob", ",", " ", "vrs", ",", 
         RowBox[{"WorkingPrecision", " ", "->", " ", "dp"}]}], "]"}]}], ";", 
      "\n", "  ", 
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SameQ", "[", 
          RowBox[{"rap", ",", "True"}], "]"}], ",", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"sol", ",", " ", 
           RowBox[{"1", "/", "100000"}]}], "]"}], ",", "sol"}], "]"}]}], ";", 
      "\n", "  ", 
      RowBox[{
       RowBox[{"vrs", " ", "/.", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"sol", ",", " ", 
          RowBox[{"{", "__Rule", "}"}], ",", " ", "\[Infinity]"}], "]"}]}], 
       " ", "//", " ", "Flatten"}]}]}], "\n", "  ", "]"}]}], ";"}]], "Code",Ex\
pressionUUID->"30e62993-e562-4329-8604-4e9ec5efd2e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LorenzSolution", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"LorenzSolution", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LorenzSolution", "[", 
     RowBox[{"game_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "LorenzSolution", "]"}]}]}], "]"}], " ",
     ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dp", ",", "rap", ",", "vrs", ",", " ", "vN", ",", " ", "objf", ",", 
        " ", "cr", ",", " ", "prob", ",", " ", "sol"}], "}"}], ",", "\n", 
      "  ", 
      RowBox[{
       RowBox[{"dp", "=", 
        RowBox[{"OptionValue", "[", "DigitPrecision", "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"rap", "=", 
        RowBox[{"OptionValue", "[", "RationalApproximate", "]"}]}], ";", "\n",
        "  ", 
       RowBox[{"vrs", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
       ";", "\n", "  ", 
       RowBox[{"vN", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "T", "]"}], "/", 
           RowBox[{"Length", "[", "T", "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", 
            RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "  ", 
       RowBox[{"objf", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"Subtract", ",", " ", 
            RowBox[{"{", 
             RowBox[{"vrs", ",", " ", "vN"}], "}"}]}], "]"}], "^", "2"}], 
         "]"}]}], ";", "\n", "  ", 
       RowBox[{"cr", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"CoreQ", "[", "game", "]"}], ",", 
          RowBox[{"Core", "[", "game", "]"}], ",", 
          RowBox[{
           RowBox[{"{", "}"}], ";", 
           RowBox[{"Break", "[", "]"}]}]}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"prob", " ", "=", " ", 
        RowBox[{"Prepend", "[", 
         RowBox[{"cr", ",", " ", "objf"}], "]"}]}], ";", "\n", "  ", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"NMinimize", "[", 
         RowBox[{"prob", ",", " ", "vrs", ",", 
          RowBox[{"WorkingPrecision", " ", "->", " ", "dp"}]}], "]"}]}], ";", 
       "\n", "  ", 
       RowBox[{"sol", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "[", 
           RowBox[{"rap", ",", "True"}], "]"}], ",", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"sol", ",", " ", 
            RowBox[{"1", "/", "100000"}]}], "]"}], ",", "sol"}], "]"}]}], ";",
        "\n", "  ", 
       RowBox[{
        RowBox[{"vrs", " ", "/.", " ", 
         RowBox[{"Cases", "[", 
          RowBox[{"sol", ",", " ", 
           RowBox[{"{", "__Rule", "}"}], ",", " ", "\[Infinity]"}], "]"}]}], 
        " ", "//", " ", "Flatten"}]}]}], "\n", "  ", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MargValue", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MargValue", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MargValue", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"perm", ",", "list"}], "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"list", " ", "=", " ", "T"}], ";", "\n", "  ", 
       RowBox[{"perm", " ", "=", " ", 
        RowBox[{"Permutations", "[", "list", "]"}]}], ";", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"Subtract", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"v", ",", 
               RowBox[{"pred", "[", "#", "]"}]}], "]"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{"v", ",", 
               RowBox[{"mengen", "[", "#", "]"}]}], "]"}]}], "}"}]}], "]"}], 
         " ", "&"}], " ", "/@", " ", "perm"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pred", "[", "list_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"post", ",", "vorg", ",", "ober"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"post", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"list", ",", "#"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "T"}], "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"vorg", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"list", ",", 
            RowBox[{
             RowBox[{"post", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "-", "1"}]}], "]"}], " ", "&"}],
          " ", "/@", " ", "T"}]}], ";", "\n", "\t        ", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"FlattenAt", "[", 
             RowBox[{
              RowBox[{"MapThread", "[", 
               RowBox[{"List", ",", 
                RowBox[{"{", 
                 RowBox[{"vorg", ",", "T"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"#", ",", "1"}], "}"}]}], "]"}], ",", "#"}], "]"}], 
          "]"}], " ", "&"}], " ", "/@", " ", "T"}]}]}], "\n", "\t\t", "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mengen", "[", "list_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "post", "}"}], ",", "\n", "                ", 
      RowBox[{
       RowBox[{"post", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"list", ",", "#"}], "]"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "T"}], "]"}]}], ";", "\n", "                ", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"list", ",", 
            RowBox[{
             RowBox[{"post", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "-", "1"}]}], "]"}], "]"}], " ",
          "&"}], " ", "/@", " ", "T"}]}]}], "\n", "\t", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoreElementsQ", "[", "args___", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"CoreElementsQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CoreElementsQ", "[", 
    RowBox[{"game_", ",", "payoffs_List"}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "  ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Depth", "[", "payoffs", "]"}], " ", "==", " ", "3"}], ",", 
       " ", 
       RowBox[{
        RowBox[{
         RowBox[{"InCoreQ", "[", 
          RowBox[{"#", ",", "game"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "payoffs"}], ",", "\n", "        ", 
       RowBox[{
        RowBox[{"Depth", "[", "payoffs", "]"}], " ", "==", " ", "2"}], ",", 
       " ", 
       RowBox[{"InCoreQ", "[", 
        RowBox[{"payoffs", ",", "game"}], "]"}], ",", "\n", "        ", 
       "True", ",", " ", 
       RowBox[{"DisplayUsageRem", "[", "payoffs", "]"}]}], "\n", "    ", 
      "]"}]}], "\n", "   ", "]"}]}], ";"}]}], "Code",ExpressionUUID->"e0c98fad-6847-4ee5-a0ff-8f9d7e5a2d75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "Balanced", " ", "Inequality", " ", "of", " ", "a", " ", 
     "Game", " ", "must", " ", "be", " ", "satisfied", " ", "for", " ", "all",
      " ", "balanced", " ", "systems", " ", "to", "\n", "   ", "indicate", 
     " ", "that", " ", "the", " ", "core", " ", "is", " ", "non"}], "-", 
    RowBox[{
     RowBox[{"empty", ".", "\n", "   ", "\n", "   ", "This"}], " ", 
     "function", " ", "checks", " ", "only", " ", "if", " ", "a", " ", 
     "balanced", " ", "system", " ", "satisfies", " ", "the", " ", "\n", 
     "   ", "Balanced", " ", "Inequality", " ", "of", " ", "a", " ", 
     RowBox[{"Game", ".", "\n", "\n", "   ", 
      RowBox[{"Warning", ":", " ", 
       RowBox[{
        RowBox[{
        "The", " ", "function", " ", "is", " ", "not", " ", "stable", " ", 
         "for", " ", "n"}], ">", 
        RowBox[{
        "4.", " ", "Probably", " ", "caused", " ", "by", " ", "a", " ", "bug",
          " ", "in", " ", "the", "\n", "            ", 
         RowBox[{"DualLinearProgramming", "[", "]"}], " ", 
         RowBox[{"function", "."}]}]}]}]}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"BalancedInequalityQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"BalancedInequalityQ", "::", "argerr"}], "]"}], ";", 
       "$Failed"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BalancedInequalityQ", "[", 
      RowBox[{"game_", ",", " ", "coll_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bcQ", ",", " ", "vS", ",", " ", "cf", ",", " ", "inQ"}], 
        "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"bcQ", ",", " ", "cf"}], "}"}], " ", "=", " ", 
         RowBox[{"BalancedSystemQ", "[", 
          RowBox[{"coll", ",", " ", "T"}], "]"}]}], ";", "\n", "   ", 
        RowBox[{"vS", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"v", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
          "coll"}]}], ";", "\n", "   ", 
        RowBox[{"inQ", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SameQ", "[", 
            RowBox[{"bcQ", ",", " ", "True"}], "]"}], ",", " ", 
           RowBox[{"LessEqual", "[", 
            RowBox[{
             RowBox[{"vS", ".", "cf"}], ",", " ", 
             RowBox[{"v", "[", "T", "]"}]}], "]"}], ",", " ", "\n", 
           "             ", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Collection of Sets is not balanced!!\>\"", 
             "]"}], ";", " ", "False"}]}], "]"}]}], ";", " ", "\n", "   ", 
        RowBox[{"Return", "[", "inQ", "]"}], ";"}]}], "\n", "   ", "]"}]}], 
    ";"}]}]}]], "Code",ExpressionUUID->"6b8892a7-47ac-4cf6-bb7a-80bdbaf02b22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "An", " ", "imputation", " ", "x", " ", "is", " ", "in", " ", "the", " ", 
     "core", " ", "iff", " ", "x"}], " ", "=", 
    RowBox[{"<", " ", 
     RowBox[{"dual", " ", 
      RowBox[{"v", "."}]}]}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"BelongToCoreQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"BelongToCoreQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BelongToCoreQ", "[", 
      RowBox[{"game_", ",", " ", "payoffs_List"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "    ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "payoffs", "]"}], " ", "==", " ", "3"}], ",", 
         " ", 
         RowBox[{"PayList", "[", 
          RowBox[{"game", ",", " ", "payoffs"}], "]"}], ",", "  ", "\n", 
         "          ", 
         RowBox[{
          RowBox[{"Depth", "[", "payoffs", "]"}], " ", "==", " ", "2"}], ",", 
         " ", 
         RowBox[{"PaySole", "[", 
          RowBox[{"game", ",", " ", "payoffs"}], "]"}], ",", "\n", 
         "          ", "True", ",", 
         RowBox[{"DisplayUsageRem", "[", "payoffs", "]"}]}], "\n", "       ", 
        "]"}]}], "\n", "     ", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DisplayUsageRem", "[", "payoffs_List", "]"}], " ", ":=", " ", 
     RowBox[{"(", "      ", "\n", "       ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Depth is equal to \>\"", ",", 
         RowBox[{"Depth", "[", "payoffs", "]"}]}], "]"}], ";", "\n", 
       "       ", 
       RowBox[{
       "Print", "[", 
        "\"\<Usage: BelongToCoreQ[game,payoffs] and \
CoreElementsQ[game,payoffs]\>\"", "]"}], ";", "\n", "       ", 
       RowBox[{
       "Print", "[", 
        "\"\<Input format of the variable 'payoffs' is not correct.\>\"", 
        "]"}], ";", "\n", "       ", 
       RowBox[{
       "Print", "[", 
        "\"\<The variable 'payoffs' must be a list of payoff vectors or a \
single payoff vector.\>\"", "]"}]}], ")"}]}], ";"}]}]}]], "Code",ExpressionUUI\
D->"4d988ef0-a5de-4f42-8da0-b59d9bf3f8d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PayList", "[", 
     RowBox[{"game_", ",", " ", "list_"}], "]"}], " ", ":=", " ", "\n", "  ", 
    
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "totsumS", ",", " ", "imp", ",", " ", "assalloc", ",", " ", "ducoal", 
        ",", " ", "ins", ",", " ", "trueli", ",", " ", "wahrQ"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"totsumS", " ", ":=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", " ", "\n", "    ", 
       RowBox[{"imp", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
       ";", "\n", "    ", 
       RowBox[{"assalloc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"Rule", ",", " ", 
            RowBox[{"{", 
             RowBox[{"imp", ",", " ", "#"}], "}"}]}], "]"}], " ", "&"}], " ", 
         "/@", "  ", "list"}]}], ";", "\n", "    ", 
       RowBox[{"ins", " ", "=", " ", 
        RowBox[{
         RowBox[{"totsumS", " ", "/.", " ", "assalloc"}], " ", "//", " ", 
         "Rationalize"}]}], ";", "\n", "    ", 
       RowBox[{"ducoal", " ", "=", " ", 
        RowBox[{"DualGame", "[", "game", "]"}]}], ";", "\n", "    ", 
       RowBox[{"trueli", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"LessEqual", ",", " ", 
            RowBox[{"{", 
             RowBox[{"#", ",", " ", "ducoal"}], "}"}]}], "]"}], " ", "&"}], 
         " ", "/@", " ", "ins"}]}], ";", "\n", "    ", 
       RowBox[{"wahrQ", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ", 
         "trueli"}]}], ";", "\n", "    ", "wahrQ"}]}], "\n", "    ", "]"}]}], 
   ";"}], "\n"}]], "Code",ExpressionUUID->"ba8192a6-7862-4916-bc8b-\
bec7aa27af1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PaySole", "[", 
     RowBox[{"game_", ",", " ", "payoff_"}], "]"}], " ", ":=", " ", "\n", 
    "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "totsumS", ",", " ", "imp", ",", " ", "assalloc", ",", " ", "ducoal", 
        ",", " ", "ins", ",", " ", "trueli", ",", " ", "wahrQ"}], "}"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"totsumS", " ", ":=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "Coalitions"}]}], ";", " ", "\n", "    ", 
       RowBox[{"imp", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", "T"}]}], 
       ";", "\n", "    ", 
       RowBox[{"assalloc", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{"imp", ",", " ", "payoff"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"ins", " ", "=", " ", 
        RowBox[{
         RowBox[{"totsumS", " ", "/.", " ", "assalloc"}], " ", "//", " ", 
         "Rationalize"}]}], ";", "\n", "    ", 
       RowBox[{"ducoal", " ", "=", " ", 
        RowBox[{"DualGame", "[", "game", "]"}]}], ";", "\n", "    ", 
       RowBox[{"trueli", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"LessEqual", ",", " ", 
          RowBox[{"{", 
           RowBox[{"ins", ",", " ", "ducoal"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"wahrQ", " ", "=", " ", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", " ", "trueli"}], "]"}]}], " ", ";", "\n", "    ",
        "wahrQ"}]}], "\n", "    ", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"exzess", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"v", "[", "#", "]"}], "-", 
        RowBox[{"x", "[", "#", "]"}]}], ")"}], "&"}], " ", "/@", " ", 
     "Coalitions"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GameBasis", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"GameBasis", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GameBasis", "[", "T_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mgsys", ",", "gb"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"mgsys", " ", "=", " ", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "T", "]"}], ",", " ", "1"}], "]"}], 
         "]"}]}], ";", "\n", "    ", 
       RowBox[{"gb", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SubSetQ", "[", 
               RowBox[{
                RowBox[{"mgsys", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "]"}], ",", 
              " ", "1", ",", " ", "0"}], "]"}], " ", "&"}], " ", "/@", " ", 
           "mgsys"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "mgsys", "]"}]}], "}"}]}], "]"}]}], ";", 
       " ", "\n", "    ", 
       RowBox[{"Transpose", "[", "gb", "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CharacteristicValues", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CharacteristicValues", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CharacteristicValues", "[", 
    RowBox[{"coord_List", ",", "T_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "      ", 
     RowBox[{"Which", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "coord", "]"}], " ", "===", " ", 
        RowBox[{"2", "^", 
         RowBox[{"Length", "[", "T", "]"}]}]}], " ", ",", " ", 
       RowBox[{"DetWorth", "[", 
        RowBox[{"coord", ",", "T"}], "]"}], " ", ",", "\n", 
       "                    ", "True", ",", " ", 
       RowBox[{"WrongCoordDimension", "[", 
        RowBox[{"coord", ",", " ", "T"}], "]"}]}], "]"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"1fc972da-87b8-40b7-98e6-b39ae53c82b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetWorth", "[", 
     RowBox[{"coord_List", ",", " ", "T_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tugb", ",", " ", "cval"}], "}"}], ",", "\n", 
      "                 ", 
      RowBox[{
       RowBox[{"tugb", " ", "=", " ", 
        RowBox[{
         RowBox[{"GameBasis", "[", "T", "]"}], " ", "//", "N"}]}], ";", "\n", 
       "                 ", 
       RowBox[{"cval", " ", "=", " ", 
        RowBox[{"tugb", ".", 
         RowBox[{"N", "[", 
          RowBox[{"Drop", "[", 
           RowBox[{"coord", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
       "                 ", 
       RowBox[{"Prepend", "[", 
        RowBox[{"cval", ",", "0"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CoordS", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"CoordS", "::", "argerr"}], "]"}], ";", "$Failed"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoordS", "[", 
     RowBox[{"game_", ",", "S_List"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "liste", ",", "upper", ",", "iterat", ",", "mult", ",", "koeffient", 
        ",", "value"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"liste", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Length", "[", "#", "]"}], ")"}], "&"}], " ", "/@", " ", 
         RowBox[{"Subsets", "[", "S", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"upper", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Length", "[", "S", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "liste", "]"}], "}"}]}], "]"}]}], ";", "\n",
        "\t", 
       RowBox[{"iterat", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Subtract", ",", 
          RowBox[{"{", 
           RowBox[{"upper", ",", "liste"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"mult", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "liste", "]"}], "}"}]}], "]"}]}], ";", "\n",
        "\t", 
       RowBox[{"koeffient", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Power", ",", 
          RowBox[{"{", 
           RowBox[{"mult", ",", "iterat"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"value", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"v", "[", "#", "]"}], ")"}], "&"}], " ", "/@", " ", 
         RowBox[{"Subsets", "[", "S", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"Total", "[", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"koeffient", ",", "value"}], "}"}]}], "]"}], "]"}]}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnanimityCoordinates", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UnanimityCoordinates", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UnanimityCoordinates", "[", "game_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CoordS", "[", 
        RowBox[{"game", ",", "#"}], "]"}], ")"}], "&"}], " ", "/@", " ", 
     "Coalitions"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HarsanyiDividends", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"HarsanyiDividends", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HarsanyiDividends", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gb", ",", "valvec", ",", "unc"}], "}"}], ",", "\n", 
      "                  ", 
      RowBox[{
       RowBox[{"gb", " ", "=", " ", 
        RowBox[{"GameBasis", "[", "T", "]"}]}], ";", "\n", 
       "                  ", 
       RowBox[{"valvec", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "#", "]"}], " ", "&"}], "/@", " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", 
       "                  ", 
       RowBox[{"unc", " ", "=", " ", 
        RowBox[{
         RowBox[{"Inverse", "[", "gb", "]"}], ".", 
         RowBox[{"Drop", "[", 
          RowBox[{"valvec", ",", "1"}], "]"}]}]}], ";", "\n", 
       "                  ", 
       RowBox[{"Prepend", "[", 
        RowBox[{"unc", ",", "0"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnanConvexQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"UnanConvexQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnanConvexQ", "[", 
    RowBox[{"coord_List", ",", "T_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "UnanConvexQ", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "                 ", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "coord", "]"}], " ", "!=", " ", 
        RowBox[{"2", "^", 
         RowBox[{"Length", "[", "T", "]"}]}]}], " ", ",", " ", 
       RowBox[{
        RowBox[{"WrongCoordDimension", "[", 
         RowBox[{"coord", ",", " ", "T"}], "]"}], ";"}], ",", "\n", 
       "                               ", 
       RowBox[{
        RowBox[{"UnanSize2NonNegQ", "[", 
         RowBox[{"coord", ",", "T"}], "]"}], " ", "===", " ", "True"}], ",", 
       " ", 
       RowBox[{"UnanConvexIffCondQ", "[", 
        RowBox[{"coord", ",", "T", ",", "opts"}], "]"}], ",", "\n", 
       "                                ", "True", ",", " ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Game is not convex!\>\"", "]"}], ";", " ", 
        "\n", "                                      ", 
        RowBox[{
        "Print", "[", 
         "\"\<Negative input values of size 1 or 2 are detected!\>\"", "]"}], 
        ";", "\n", "                                      ", 
        RowBox[{"Return", "[", "\"\<False\>\"", "]"}], ";"}]}], 
      "               ", "\n", "  ", "]"}]}], "\n", "]"}]}], 
  ";"}], "\n"}], "Code",ExpressionUUID->"aad0a816-1833-41d1-a002-\
d770ce80ddbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnanConvexIffCondQ", "[", 
    RowBox[{"coord_List", ",", " ", "T_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "UnanConvexQ", "]"}]}]}], "]"}], " ", ":=",
    " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispres", ",", " ", "discrd", ",", " ", "npr", ",", "plpairs", ",", 
       " ", "ineq", ",", " ", "lam", ",", " ", "rlcrd", ",", " ", "nneg", ",",
        "pwsets", ",", "rtnneg", ",", "trq", ",", " ", "trfl"}], "}"}], ",", 
     "\n", "    ", 
     RowBox[{
      RowBox[{"dispres", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"discrd", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayCoord", "]"}]}], ";", "\n", "    ", 
      RowBox[{"npr", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "NumericalPrec", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"pwsets", " ", "=", " ", 
       RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "    ", 
      RowBox[{"plpairs", " ", "=", " ", 
       RowBox[{"PlayerPairs", "[", "T", "]"}]}], ";", "\n", "    ", 
      RowBox[{"ineq", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"DetInEq", "[", 
          RowBox[{"#", ",", " ", "T"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "plpairs"}]}], ";", "\n", "    ", 
      RowBox[{"lam", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Lambda]", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "pwsets"}]}], ";", "\n", "    ", 
      RowBox[{"rlcrd", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{"lam", ",", " ", "coord"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"nneg", " ", "=", " ", 
       RowBox[{"ineq", " ", "/.", " ", "rlcrd"}]}], ";", "\n", "    ", 
      RowBox[{"rtnneg", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"npr", " ", "!=", "  ", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "12"}], ")"}]}]}], ",", " ", 
         RowBox[{"Chop", "[", 
          RowBox[{"nneg", ",", "npr"}], "]"}], ",", " ", 
         RowBox[{"Chop", "[", 
          RowBox[{"nneg", ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "12"}], ")"}]}]}], "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"trq", " ", "=", " ", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"NonNegative", "[", "rtnneg", "]"}], "]"}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"trfl", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "trq"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"dispres", " ", "===", " ", "True"}], ",", "  ", 
        RowBox[{"{", 
         RowBox[{"trfl", ",", " ", "rtnneg"}], "}"}], ",", "\n", 
        "                  ", 
        RowBox[{"discrd", " ", "===", " ", "True"}], ",", "  ", "rtnneg", ",",
         "\n", "                  ", "True", ",", " ", "trfl"}], "\n", "   ", 
       "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->"0183e3b1-\
dadd-4742-a3d0-be9035643a08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DetInEq", "[", 
     RowBox[{"spij_List", ",", " ", "T_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "pwset", "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"pwset", " ", "=", " ", 
        RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "    ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"InEqCond", "[", 
            RowBox[{"spij", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", 
          " ", "pwset"}], ",", " ", "0"}], "]"}]}]}], "\n", " ", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InEqCond", "[", 
    RowBox[{"splij_List", ",", " ", "submg_List"}], "]"}], " ", ":=", " ", 
   "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mgsys", ",", " ", "incij", ",", " ", "trps", ",", " ", "extset", ",", 
       " ", "uncoord"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"mgsys", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", "submg", "]"}], ",", " ", 
           RowBox[{"{", "_", "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"incij", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"SubSetQ", "[", 
          RowBox[{"splij", ",", " ", "#"}], "]"}], " ", "&"}], " ", "/@", " ",
         "mgsys"}]}], ";", "\n", "    ", 
      RowBox[{"trps", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"incij", ",", " ", "True"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"extset", " ", "=", " ", 
       RowBox[{"Extract", "[", 
        RowBox[{"mgsys", ",", " ", "trps"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"uncoord", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Lambda]", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        "extset"}]}], ";", "\n", "    ", 
      RowBox[{"Total", "[", "uncoord", "]"}]}]}], "\n", " ", "]"}]}], 
  ";"}]}], "Code",ExpressionUUID->"6f63fb99-c110-4c46-88de-ffa0ba936787"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"See", " ", "Solano", " ", "and", " ", "Rafels"}], ",", " ", 
    "1996"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"UnanAvConvexQ", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"UnanAvConvexQ", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UnanAvConvexQ", "[", 
      RowBox[{"coord_List", ",", "T_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "UnanAvConvexQ", "]"}]}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "                 ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "coord", "]"}], " ", "!=", " ", 
          RowBox[{"2", "^", 
           RowBox[{"Length", "[", "T", "]"}]}]}], " ", ",", " ", 
         RowBox[{
          RowBox[{"WrongCoordDimension", "[", 
           RowBox[{"coord", ",", " ", "T"}], "]"}], ";"}], ",", "\n", 
         "                              ", "True", ",", " ", 
         RowBox[{"UnanAvConvexIffCondQ", "[", 
          RowBox[{"coord", ",", "T", ",", "opts"}], "]"}]}], "\n", "  ", 
        "]"}]}], "\n", "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"77c17640-\
65f6-4d71-8e5c-0376228b5c14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnanSize2NonNegQ", "[", 
    RowBox[{"coord_List", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"no", ",", "tkno"}], "}"}], ",", "\n", "               ", 
     RowBox[{
      RowBox[{"no", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "T", "]"}], " ", "+", " ", "1", " ", "+", " ", 
        
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}]}]}], ";", 
      "                ", "\n", "               ", 
      RowBox[{"tkno", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"coord", ",", "no"}], "]"}]}], ";", "\n", "               ", 
      RowBox[{
       RowBox[{"Union", "[", 
        RowBox[{"NonNegative", "[", "tkno", "]"}], "]"}], " ", "===", " ", 
       RowBox[{"{", "True", "}"}]}]}]}], "\n", "]"}]}], ";"}]], "Code",Express\
ionUUID->"f5c78394-9127-4b7f-9274-b96ac0fc07b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnanAvConvexIffCondQ", "[", 
    RowBox[{"coord_List", ",", " ", "T_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "UnanAvConvexQ", "]"}]}]}], "]"}], " ", ":=",
    " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dispres", ",", " ", "discrd", ",", " ", "npr", ",", " ", "pwsets", ",",
        " ", "setsgr2", ",", " ", "nneg", ",", "rtnneg", ",", " ", "trq", ",",
        "trfl"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"dispres", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayAllResults", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"discrd", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "DisplayCoord", "]"}]}], ";", "\n", "    ", 
      RowBox[{"npr", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "NumericalPrec", "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"pwsets", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", "T", "]"}], ",", "1"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"nneg", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"UnanInEquality", "[", 
          RowBox[{"#", ",", " ", "coord"}], "]"}], " ", "&"}], " ", "/@", " ",
         "pwsets"}]}], ";", "\n", "    ", 
      RowBox[{"rtnneg", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"npr", " ", "!=", "  ", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "12"}], ")"}]}]}], ",", " ", 
         RowBox[{"Chop", "[", 
          RowBox[{"nneg", ",", "npr"}], "]"}], ",", " ", 
         RowBox[{"Chop", "[", 
          RowBox[{"nneg", ",", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{"-", "12"}], ")"}]}]}], "]"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"trq", " ", "=", " ", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"NonNegative", "[", "rtnneg", "]"}], "]"}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"trfl", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", " ", "trq"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"dispres", ",", "True"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"trfl", ",", " ", "rtnneg"}], "}"}], ",", "\n", "          ", 
        RowBox[{"SameQ", "[", 
         RowBox[{"discrd", ",", "True"}], "]"}], ",", " ", "rtnneg", ",", 
        "\n", "                  ", "True", ",", " ", "trfl"}], "\n", "    ", 
       "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",ExpressionUUID->"e226b795-\
960b-4aaf-8a46-c4924173ad71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UnanInEquality", "[", 
     RowBox[{"coal_List", ",", " ", "coord_List"}], "]"}], " ", ":=", " ", 
    "\n", "  ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Sc", ",", "obmg", ",", "sysob", ",", "sysin", ",", "pos", ",", "pos2",
         ",", "extc", ",", "intc", ",", "lgtc", ",", "inlam", ",", "mltun", 
        ",", "addcrd", ",", "lam", ",", "rlcrd"}], "}"}], ",", "\n", "    ", 
      RowBox[{
       RowBox[{"Sc", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{"T", ",", "coal"}], "]"}]}], ";", "\n", "    ", 
       RowBox[{"obmg", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"OberMenge", "[", 
           RowBox[{"coal", ",", "T"}], "]"}], ",", "1"}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"sysob", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Subsets", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "obmg"}]}], ";", "\n", "    ", 
       RowBox[{"sysin", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Intersection", "[", 
              RowBox[{"#", ",", "Sc"}], "]"}], " ", "&"}], ",", "#"}], "]"}], 
          " ", "&"}], " ", "/@", " ", "sysob"}]}], ";", "\n", "    ", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "__", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
         "sysin"}]}], ";", "\n", "    ", 
       RowBox[{"pos2", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
         "pos"}]}], ";", "\n", "    ", 
       RowBox[{"extc", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"sysob", ",", "pos2"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{"intc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Intersection", "[", 
              RowBox[{"#1", ",", " ", "coal"}], "]"}], " ", "&"}], ",", " ", 
            "#"}], "]"}], " ", "&"}], " ", "/@", " ", "extc"}]}], ";", "\n", 
       "    ", 
       RowBox[{"lgtc", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], " ", "&"}], ",", " ", "#"}], 
           "]"}], " ", "&"}], " ", "/@", " ", "intc"}]}], ";", "\n", "    ", 
       RowBox[{"inlam", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Global`\[Lambda]", "[", "#", "]"}], " ", "&"}], ",", 
            "#"}], "]"}], " ", "&"}], " ", "/@", " ", "extc"}]}], ";", "\n", 
       "    ", 
       RowBox[{"mltun", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"Times", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lgtc", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"inlam", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "inlam", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\n", "    ", 
       RowBox[{"addcrd", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
         "mltun"}]}], ";", "\n", "    ", 
       RowBox[{"lam", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Global`\[Lambda]", "[", "#", "]"}], " ", "&"}], " ", "/@", 
         " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", "    ", 
       RowBox[{"rlcrd", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", " ", 
          RowBox[{"{", 
           RowBox[{"lam", ",", " ", "coord"}], "}"}]}], "]"}]}], ";", "\n", 
       "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "  ", "/.", " ", "rlcrd"}], ")"}], " ", "&"}], " ", "/@",
         " ", "addcrd"}]}]}], "\n", "]"}]}], ";"}], "\n"}]], "Code",Expression\
UUID->"97319a41-919e-4733-b6a0-dd7170e3d096"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"See", " ", "Meinhardt"}], ",", " ", "2009"}], " ", "*)"}], "\n", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DetQuasiAvConvex", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"DetQuasiAvConvex", "::", "argerr"}], "]"}], ";", "$Failed"}],
       ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DetQuasiAvConvex", "[", "game_", "]"}], ":=", " ", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "uncrd", ",", " ", "lnsi2", ",", " ", "lnT", ",", " ", "anfpt", ",", 
         " ", "endpt", ",", " ", "tkcd", ",", " ", "avccrd"}], "}"}], ",", 
       "\n", "  ", 
       RowBox[{
        RowBox[{"uncrd", " ", "=", " ", 
         RowBox[{"HarsanyiDividends", "[", "game", "]"}]}], ";", "\n", "  ", 
        RowBox[{"lnsi2", " ", "=", " ", 
         RowBox[{"Binomial", "[", 
          RowBox[{
           RowBox[{"Length", "[", "T", "]"}], ",", " ", "2"}], "]"}]}], ";", 
        "\n", "  ", 
        RowBox[{"lnT", " ", "=", " ", 
         RowBox[{"Length", "[", "T", "]"}]}], ";", "\n", "  ", 
        RowBox[{"anfpt", " ", "=", " ", 
         RowBox[{"lnT", " ", "+", " ", "2"}]}], ";", "\n", "  ", 
        RowBox[{"endpt", " ", "=", " ", 
         RowBox[{"anfpt", " ", "+", " ", "lnsi2", " ", "-", " ", "1"}]}], ";",
         "\n", "  ", 
        RowBox[{"tkcd", " ", "=", " ", 
         RowBox[{"Take", "[", 
          RowBox[{"uncrd", ",", " ", 
           RowBox[{"{", 
            RowBox[{"anfpt", ",", " ", "endpt"}], "}"}]}], "]"}]}], ";", "\n",
         "  ", 
        RowBox[{"avccrd", " ", "=", " ", 
         RowBox[{"DetUCoord", "[", 
          RowBox[{"tkcd", ",", " ", "T"}], "]"}]}], ";", "\n", "  ", 
        RowBox[{"CharacteristicValues", "[", 
         RowBox[{"avccrd", ",", " ", "T"}], "]"}]}]}], "\n", "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DetUCoord", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"DetUCoord", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DetUCoord", "[", 
      RowBox[{"coord_List", ",", "T_"}], "]"}], ":=", "\n", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "     ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Binomial", "[", 
            RowBox[{
             RowBox[{"Length", "[", "T", "]"}], ",", "2"}], "]"}], "}"}], " ",
           "!=", " ", 
          RowBox[{"Dimensions", "[", "coord", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"WrongCoordDimension", "[", "T", "]"}], ";"}], ",", "\n", 
         "                    ", 
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{"NonNegative", "[", "coord", "]"}], "]"}], " ", "===", " ", 
          RowBox[{"{", "True", "}"}]}], ",", "  ", 
         RowBox[{"AvCcoord", "[", 
          RowBox[{"coord", ",", "T"}], "]"}], " ", ",", " ", "\n", 
         "                    ", "True", ",", " ", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Input error! \\n Negative values are not allowed!\>\"", "]"}],
           ";"}]}], "\n", "       ", "]"}]}], "\n", "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"AvCcoord", "[", 
      RowBox[{"coord_List", ",", " ", "T_"}], "]"}], " ", ":=", " ", "\n", 
     "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "uncrd", ",", " ", "pwsts", ",", " ", "setsgr2", ",", " ", "mincrd", 
         ",", " ", "zvec", ",", " ", "apz"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"uncrd", " ", "=", " ", "coord"}], ";", "\n", "    ", 
        RowBox[{"pwsts", " ", "=", " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}], ";", "\n", "    ", 
        RowBox[{"setsgr2", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], " ", ">=", " ", "3"}], ",",
                " ", "#", ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
            "pwsts"}], ",", " ", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"mincrd", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MinCoordLarger2", "[", 
            RowBox[{"coord", ",", " ", "#", ",", " ", "T"}], "]"}], " ", 
           "&"}], " ", "/@", " ", "setsgr2"}]}], ";", "\n", "    ", 
        RowBox[{"zvec", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{
              RowBox[{"Length", "[", "T", "]"}], " ", "+", " ", "1"}]}], 
            "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"apz", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"PrependTo", "[", 
           RowBox[{"uncrd", ",", " ", "zvec"}], "]"}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"apz", ",", " ", "mincrd"}], "]"}], "]"}]}]}], "\n", "    ",
       "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlayerPairs", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"PlayerPairs", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlayerPairs", "[", "T_List", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mat", ",", "ijpair", ",", " ", "crdpr01"}], "}"}], ",", "\n",
        "    ", 
       RowBox[{
        RowBox[{"mat", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Length", "[", "T", "]"}]}], "]"}], " ", "&"}], "/@", 
          " ", "T"}]}], ";", "\n", "    ", 
        RowBox[{"ijpair", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#1", " ", ">=", " ", "#2"}], ",", " ", 
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#1", ",", "#2"}], "}"}]}], "]"}], " ", "&"}], ",", 
             " ", 
             RowBox[{"{", 
              RowBox[{"T", ",", "#"}], "}"}]}], "]"}], " ", "&"}], "/@", " ", 
          "mat"}]}], ";", "\n", "    ", 
        RowBox[{"crdpr01", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
            "ijpair"}], ",", " ", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"Sort", "[", 
         RowBox[{"Apply", "[", 
          RowBox[{"Join", ",", " ", "crdpr01"}], "]"}], "]"}]}]}], "\n", 
      "    ", "]"}]}], ";"}]}]}]], "Code",ExpressionUUID->"fcc72262-917c-403d-\
bbb2-2e316c0887c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinCoordLarger2", "[", 
    RowBox[{"coord_List", ",", " ", "setsgr2_", ",", " ", "T_"}], "]"}], " ", 
   ":=", " ", "\n", "  ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "plp", ",", " ", "plpsets", ",", " ", "plpsys", ",", " ", "pos", ",", 
       " ", "crdsys", ",", " ", "lamsys", ",", " ", "crdeq2", ",", " ", 
       "rlcdr", ",", " ", "inscrd"}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"plp", " ", "=", " ", 
       RowBox[{"PlayerPairs", "[", "setsgr2", "]"}]}], ";", "\n", "    ", 
      RowBox[{"pos", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"plp", ",", " ", "#"}], "]"}], " ", "&"}], ",", " ", 
         "setsgr2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"plpsets", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Extract", "[", 
             RowBox[{"plp", ",", " ", 
              RowBox[{"First", "[", "#", "]"}]}], "]"}], " ", "&"}], ",", " ",
            "#"}], "]"}], " ", "&"}], " ", "/@", " ", "pos"}]}], ";", "\n", 
      "    ", 
      RowBox[{"crdsys", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Lambda]", "[", "#", "]"}], " ", "&"}], ",", " ", "#"}],
           "]"}], " ", "&"}], " ", "/@", " ", "plpsets"}]}], ";", "\n", 
      "    ", 
      RowBox[{"lamsys", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Total", "[", "#", "]"}], ")"}], "/", 
            RowBox[{"Length", "[", "#", "]"}]}], "-", "1"}], ")"}], " ", 
         "&"}], " ", "/@", " ", "crdsys"}]}], ";", "\n", "    ", 
      RowBox[{"crdeq2", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Lambda]", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
        RowBox[{"PlayerPairs", "[", "T", "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"rlcdr", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", " ", 
         RowBox[{"{", 
          RowBox[{"crdeq2", ",", " ", "coord"}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"inscrd", " ", "=", " ", 
       RowBox[{"lamsys", " ", "/.", " ", "rlcdr"}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", 
         RowBox[{"Length", "[", "setsgr2", "]"}], "]"}], ",", " ", 
        RowBox[{"Min", "[", "inscrd", "]"}], ",", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"-", "inscrd"}], "]"}]}], "]"}]}]}], "\n", "    ", "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"10158693-5bb1-45db-9ba2-21b27c800570"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MinUnanimityCoordinates", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"MinUnanimityCoordinates", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinUnanimityCoordinates", "[", "game_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"anz", ",", "sepset"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"anz", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Length", "[", "#", "]"}], ")"}], "&"}], " ", "/@", " ", 
         RowBox[{"Subsets", "[", "T", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"sepset", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"Subsets", "[", "T", "]"}], ",", 
            RowBox[{"Position", "[", 
             RowBox[{"anz", ",", "#"}], "]"}]}], "]"}], " ", "&"}], " ", "/@",
          " ", "T"}]}], ";", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"CoordS", "[", 
              RowBox[{"game", ",", "#"}], "]"}], ")"}], "&"}], " ", "/@", " ", 
           RowBox[{"sepset", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}]}], "\n", 
     "\t\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StrictlyConvexUnanConditionQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"StrictlyConvexUnanConditionQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StrictlyConvexUnanConditionQ", "[", "game_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "unanc", "}"}], ",", "\n", "  ", 
      RowBox[{
       RowBox[{"unanc", "=", 
        RowBox[{"EvalSumMinCoord", "[", "game", "]"}]}], ";", "\n", "  ", 
       RowBox[{"Apply", "[", 
        RowBox[{"And", ",", 
         RowBox[{"Positive", "[", "unanc", "]"}]}], "]"}]}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvexUnanConditionQ", "[", "args___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"ConvexUnanConditionQ", "::", "argerr"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvexUnanConditionQ", "[", "game_", "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "unanc", "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"unanc", "=", 
       RowBox[{"EvalSumMinCoord", "[", "game", "]"}]}], ";", "\n", "  ", 
      RowBox[{"Apply", "[", 
       RowBox[{"And", ",", 
        RowBox[{"NonNegative", "[", "unanc", "]"}]}], "]"}]}]}], "\n", 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"37782e73-a1bd-4f81-ba50-\
bf306622d599"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConvexUnanIffCoord", "[", "game_", "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "pij", ",", " ", "dems", ",", " ", "tog", ",", " ", "lams", ",", " ", 
       "unc"}], "}"}], ",", "\n", "  ", 
     RowBox[{
      RowBox[{"pij", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", " ", ">=", "  ", "j"}], ",", " ", 
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "j"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", 
           RowBox[{"Length", "[", "T", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "  ", 
      RowBox[{"dems", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"{", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", "pij"}],
          ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"tog", " ", "=", " ", 
       RowBox[{"Apply", "[", 
        RowBox[{"Join", ",", " ", "dems"}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"lams", " ", "=", " ", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SubSetQ", "[", 
              RowBox[{
               RowBox[{"tog", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", " ", "#"}], "]"}], ",", 
             " ", "1", ",", " ", "0"}], "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"Subsets", "[", "T", "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"Length", "[", "tog", "]"}]}], "}"}]}], "]"}]}], ";", "\n",
       "  ", 
      RowBox[{"unc", " ", "=", " ", 
       RowBox[{"UnanimityCoordinates", "[", "game", "]"}]}], ";", "\n", "  ", 
      
      RowBox[{"lams", ".", "unc"}]}]}], "\n", "  ", "]"}]}], ";"}]], "Code",Ex\
pressionUUID->"56376c5f-26d6-410c-8c35-a30665a38ee9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Cor", ".", " ", "2.1"}], " ", "in", " ", 
    RowBox[{"C", ".", " ", "Rafels"}], " ", "and", " ", 
    RowBox[{"N", ".", " ", "Ybern"}], " ", 
    RowBox[{"(", "1995", ")"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EvalSumMinCoord", "[", "args___", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"EvalSumMinCoord", "::", "argerr"}], "]"}], ";", "$Failed"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EvalSumMinCoord", "[", "game_", "]"}], ":=", "\n", "  ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "smallestcoord", ",", "alphak", ",", "post", ",", "rg", ",", 
         "firstneg", ",", "s0", ",", "restmin", ",", "alltrueQ", ",", "fac", 
         ",", "retval", ",", "singleQ"}], "}"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"smallestcoord", "=", 
         RowBox[{"MinUnanimityCoordinates", "[", "game", "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"alphak", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"smallestcoord", ",", "1"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"post", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"NonNegative", "[", "#", "]"}], "&"}], "/@", " ", 
          "alphak"}]}], ";", "\n", "    ", 
        RowBox[{"alltrueQ", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"And", ",", "post"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"alltrueQ", " ", "==", " ", "False"}], ",", "\n", "      ", 
          
          RowBox[{
           RowBox[{"firstneg", "=", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{"post", ",", "False"}], "]"}], "]"}], ",", "1"}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "      ", 
           RowBox[{"s0", "=", 
            RowBox[{"firstneg", " ", "+", " ", "1"}]}], ";", "\n", "      ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"s0", ">", 
              RowBox[{
               RowBox[{"Length", "[", "T", "]"}], "-", "2"}]}], ",", "\n", 
             "        ", 
             RowBox[{
              RowBox[{"DisplaySize", "[", 
               RowBox[{"game", ",", "s0"}], "]"}], ";", "\n", "        ", 
              "smallestcoord"}], ",", "\n", "        ", 
             RowBox[{
              RowBox[{"rg", "=", 
               RowBox[{"Range", "[", 
                RowBox[{"Length", "[", "alphak", "]"}], "]"}]}], ";", "\n", 
              "        ", 
              RowBox[{"restmin", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"alphak", ",", "#"}], "]"}], " ", "&"}], " ", "/@", 
                " ", "rg"}]}], ";", "\n", "        ", 
              RowBox[{"fac", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "!"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "!"}], ")"}], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "-", "j"}], ")"}], "!"}]}], ")"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "T", "]"}], "-", "2"}]}], "}"}]}], 
                "]"}]}], ";", "\n", "        ", 
              RowBox[{
               RowBox[{
                RowBox[{"Total", "[", "#", "]"}], " ", "&"}], " ", "/@", " ", 
               
               RowBox[{"MapThread", "[", 
                RowBox[{"Times", ",", 
                 RowBox[{"{", 
                  RowBox[{"fac", ",", "restmin"}], "}"}]}], "]"}]}]}]}], "\n",
             "        ", "]"}]}], ",", "\n", "          ", 
          RowBox[{
           RowBox[{"singleQ", "=", 
            RowBox[{"NonNegative", "[", 
             RowBox[{"Take", "[", 
              RowBox[{"smallestcoord", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
           "          ", 
           RowBox[{"alltrueQ", "=", 
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"And", ",", 
               RowBox[{"{", 
                RowBox[{"alltrueQ", ",", "singleQ"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "          ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"alltrueQ", " ", "==", " ", "True"}], ",", "\n", 
             "            ", 
             RowBox[{"PrintMessageFirst", ";", "smallestcoord"}], ",", "\n", 
             "               ", 
             RowBox[{"PrintMessageSec", ";", "smallestcoord"}]}], "]"}]}]}], 
         " ", "\n", "         ", "]"}]}]}], " ", "\n", "       ", "]"}]}], 
    ";"}], "\n"}]}]], "Code",ExpressionUUID->"ddc772ad-fa15-4e19-94ab-\
02fe991375d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplaySize", "[", 
     RowBox[{"game_", ",", " ", "s0_"}], "]"}], " ", ":=", " ", 
    RowBox[{"(", "\n", "      ", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Minimum coalition size with negative unanimity coordinate is \
equal to \>\"", ",", " ", "s0"}], "]"}], ";", "\n", "      ", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Coalition size of T-2 is \>\"", ",", " ", 
        RowBox[{
         RowBox[{"Length", "[", "T", "]"}], " ", "-", " ", "2"}]}], "]"}], 
      ";", "\n", "      ", 
      RowBox[{"Print", "[", 
       RowBox[{"s0", ",", " ", "\"\< greater than \>\"", ",", " ", 
        RowBox[{
         RowBox[{"Length", "[", "T", "]"}], " ", "-", " ", "2"}]}], "]"}], 
      ";", "\n", "      ", 
      RowBox[{
      "Print", "[", 
       "\"\<No sum of minimum unanimity coordinates can be evaluated.\>\"", 
       "]"}], ";", "\n", "      ", 
      RowBox[{
      "Print", "[", "\"\<The minimum unanimity coordinates are:\>\"", "]"}]}],
      "\n", "      ", ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintMessageFirst", ":=", 
    RowBox[{"(", "\n", "      ", 
     RowBox[{
      RowBox[{
      "Print", "[", "\"\<No negative unanimity coordinates found.\>\"", "]"}],
       ";", "\n", "      ", 
      RowBox[{"Print", "[", "\"\<Game is convex.\>\"", "]"}], ";", "\n", 
      "      ", 
      RowBox[{
      "Print", "[", "\"\<The minimum unanimity coordinates are:\>\"", "]"}]}],
      ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintMessageSec", ":=", 
    RowBox[{"(", "\n", "      ", 
     RowBox[{
      RowBox[{
      "Print", "[", "\"\<No negative unanimity coordinates found.\>\"", "]"}],
       ";", "\n", "      ", 
      RowBox[{
      "Print", "[", "\"\<The minimum unanimity coordinates are:\>\"", "]"}]}],
      ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"Global`Co", ",", "coal"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "Global`sij", "]"}], ";"}]}], "Code",ExpressionUUID->\
"0740dcc4-5bc8-413c-8f89-f9f0a4c759a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"SameQ", "[", 
      RowBox[{"Global`$ParaMode", ",", "\"\<False\>\""}], "]"}], ",", "\n", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<===================================================\>\"", "]"}], 
      ";", "\n", 
      RowBox[{"Print", "[", "\"\<Package 'TuGames' loaded\>\"", "]"}], ";", 
      "\n", 
      RowBox[{
      "Print", "[", 
       "\"\<===================================================\>\"", "]"}], 
      ";"}], ",", "\n", "   ", "True"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], "\n", "\n", "\n", "\n", "\n", "\n", "\n", 
  "\n"}], "\n"}], "Code",ExpressionUUID->"54c76174-38ce-44bc-bac4-\
bf26e2286ed3"]
},
WindowSize->{808, 823},
WindowMargins->{{144, Automatic}, {Automatic, 86}},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"80bd7e9f-a092-4fbb-814b-62cb5130e5b0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 24859, 530, 3651, "Code",ExpressionUUID->"6e90713c-1023-4c94-8452-0d9536c84cab"],
Cell[25420, 552, 15544, 306, 2415, "Code",ExpressionUUID->"86c90b3c-7e95-4c14-a153-1224f84e30ad"],
Cell[40967, 860, 377, 8, 105, "Code",ExpressionUUID->"7885ae85-4f14-4a42-a986-c66293e02ae6"],
Cell[41347, 870, 503, 11, 170, "Code",ExpressionUUID->"d40f526d-4f66-468c-b834-ad7741f52fbd"],
Cell[41853, 883, 3415, 73, 523, "Code",ExpressionUUID->"2ee71cf6-d89d-4b5c-b6b9-82d3aecb12c6"],
Cell[45271, 958, 2287, 57, 70, "Code",ExpressionUUID->"7ed2d7c7-3656-471d-81e9-4c90f17fbc36"],
Cell[47561, 1017, 3517, 82, 70, "Code",ExpressionUUID->"90155a2d-7e9a-496f-8a12-7b6880ff3f3f"],
Cell[51081, 1101, 410, 8, 70, "Code",ExpressionUUID->"f25d6aae-db59-4f0d-92a1-e65709bb1e93"],
Cell[51494, 1111, 2429, 66, 70, "Code",ExpressionUUID->"4a9b7909-d594-4d07-85ae-d3f64721bff1"],
Cell[53926, 1179, 4785, 90, 70, "Code",ExpressionUUID->"d049eb5e-a05c-476a-a3fc-39736e2bedc9"],
Cell[58714, 1271, 553, 9, 70, "Code",ExpressionUUID->"0504ea08-07a0-461f-bd00-b65742f0fde6"],
Cell[59270, 1282, 3911, 92, 70, "Code",ExpressionUUID->"a1a92790-3261-400d-ac2a-3e4d7b9ed092"],
Cell[63184, 1376, 4750, 118, 70, "Code",ExpressionUUID->"d274cc56-88f7-46b2-9254-63f86b0469f8"],
Cell[67937, 1496, 5684, 112, 70, "Code",ExpressionUUID->"67f6bf0a-5136-42aa-80ab-119f48d636ac"],
Cell[73624, 1610, 1130, 24, 70, "Code",ExpressionUUID->"c3bf17d5-e46b-4703-a90a-0f7ba28d108b"],
Cell[74757, 1636, 384, 7, 70, "Code",ExpressionUUID->"c1de78e7-ad3c-4878-9ed5-78317e91f2ef"],
Cell[75144, 1645, 1753, 35, 70, "Code",ExpressionUUID->"4df95570-a7d5-42da-8a6c-2bb2f6844cb8"],
Cell[76900, 1682, 454, 8, 70, "Code",ExpressionUUID->"3155f44f-090d-4ac3-9796-9c72d06f6600"],
Cell[77357, 1692, 3919, 85, 70, "Code",ExpressionUUID->"87b3ab76-85af-49fe-8669-7187453f81dc"],
Cell[81279, 1779, 19039, 464, 70, "Code",ExpressionUUID->"31db9215-1ad6-4b56-b6c8-7ba9324fd548"],
Cell[100321, 2245, 2249, 53, 70, "Code",ExpressionUUID->"e76b2c47-c79a-4266-a1b6-45a73bc5e9e3"],
Cell[102573, 2300, 526, 10, 70, "Code",ExpressionUUID->"609a611b-ea60-4e5c-90ee-58b52b0e6ccd"],
Cell[103102, 2312, 902, 17, 70, "Code",ExpressionUUID->"fe52f8b9-1215-4022-90b4-41ec9823c310"],
Cell[104007, 2331, 2160, 44, 70, "Code",ExpressionUUID->"b1c1b4cb-91f5-4b2b-8a2f-7e295aa442c3"],
Cell[106170, 2377, 5726, 113, 70, "Code",ExpressionUUID->"e3253276-75ab-4721-9552-9243a0336084"],
Cell[111899, 2492, 34396, 793, 70, "Code",ExpressionUUID->"1f025583-ef79-44f6-a23f-c64696650801"],
Cell[146298, 3287, 17016, 488, 70, "Code",ExpressionUUID->"2c05d30e-ec7c-4b41-8f16-7dac9353beca"],
Cell[163317, 3777, 8130, 230, 70, "Code",ExpressionUUID->"71d175b4-feb0-4299-a968-ab5bec45977e"],
Cell[171450, 4009, 5299, 127, 70, "Code",ExpressionUUID->"9f15ea88-d739-4e85-8e52-cb077a334f7e"],
Cell[176752, 4138, 5116, 120, 70, "Code",ExpressionUUID->"b26542bf-fe55-472c-ac0c-8f98c2ffa05d"],
Cell[181871, 4260, 276, 7, 70, "Code",ExpressionUUID->"65d8f992-6546-42c3-b52e-a6a05d197b80"],
Cell[182150, 4269, 2799, 75, 70, "Code",ExpressionUUID->"a9e28b5b-4488-4996-a7c5-ac26fce18b7f"],
Cell[184952, 4346, 1601, 48, 70, "Code",ExpressionUUID->"f3894796-d0d7-4afd-9751-ddc7723b78cd"],
Cell[186556, 4396, 4824, 136, 70, "Code",ExpressionUUID->"c4a85d94-2ae3-4940-83a2-e50c683f8334"],
Cell[191383, 4534, 5206, 134, 70, "Code",ExpressionUUID->"86dc8a83-88ef-4557-9f18-1a182ff37fbf"],
Cell[196592, 4670, 1662, 42, 70, "Code",ExpressionUUID->"6440eca2-c093-4edc-9cb4-e6c4b44b5e50"],
Cell[198257, 4714, 6360, 157, 70, "Code",ExpressionUUID->"8a3e44f1-54a8-4bc0-a1c5-da2346a9b6a1"],
Cell[204620, 4873, 13077, 353, 70, "Code",ExpressionUUID->"158c879f-fb2f-4a94-985b-8d039e58c1c7"],
Cell[217700, 5228, 959, 25, 70, "Code",ExpressionUUID->"58832112-b94f-4611-9098-fc764a2926a5"],
Cell[218662, 5255, 3319, 86, 70, "Code",ExpressionUUID->"b87c846e-e14c-4e48-b819-ffbf79006a0d"],
Cell[221984, 5343, 7029, 186, 70, "Code",ExpressionUUID->"3bd8b1cb-8612-46b3-8a17-614b4bb66046"],
Cell[229016, 5531, 1134, 31, 70, "Code",ExpressionUUID->"0b2f75d1-b9da-4e08-855c-ba0c7e9cf52b"],
Cell[230153, 5564, 692, 19, 70, "Code",ExpressionUUID->"aea2032a-bd28-418d-9c45-935fee26b38a"],
Cell[230848, 5585, 2932, 72, 70, "Code",ExpressionUUID->"c589db3b-0c41-464e-b0fa-d83e81f4bfe0"],
Cell[233783, 5659, 25265, 645, 70, "Code",ExpressionUUID->"8b44f068-588a-4447-aa7d-2b5c83c40a71"],
Cell[259051, 6306, 4185, 112, 70, "Code",ExpressionUUID->"85304359-1a2e-4364-8b8d-4fe8eef56885"],
Cell[263239, 6420, 5269, 146, 70, "Code",ExpressionUUID->"c66ddbfc-de35-4fc2-a33f-530911722050"],
Cell[268511, 6568, 11688, 326, 70, "Code",ExpressionUUID->"469e9d80-5b9b-4084-bb30-af62f2ad71f0"],
Cell[280202, 6896, 2478, 79, 70, "Code",ExpressionUUID->"56090248-43a1-421e-97dc-bfe46f37848e"],
Cell[282683, 6977, 4040, 116, 70, "Code",ExpressionUUID->"0cb81a2f-5eec-41d3-8a25-efa3486305fb"],
Cell[286726, 7095, 8895, 238, 70, "Code",ExpressionUUID->"45764c10-cd47-4ff0-936b-be8a76d2fb12"],
Cell[295624, 7335, 713, 21, 70, "Code",ExpressionUUID->"4e7cba3c-933c-46f7-89ef-1fc28034a541"],
Cell[296340, 7358, 16069, 422, 70, "Code",ExpressionUUID->"045bc4e7-c1d1-4a0f-905a-b58b65541a90"],
Cell[312412, 7782, 12838, 327, 70, "Code",ExpressionUUID->"8d31d4d8-f688-4129-bbdd-81d4e1548cc3"],
Cell[325253, 8111, 4361, 117, 70, "Code",ExpressionUUID->"6612f10c-4ce0-4312-8a14-e27d7ebc4828"],
Cell[329617, 8230, 25317, 606, 70, "Code",ExpressionUUID->"8a149f6b-d036-4fb1-98da-81785d7f9b93"],
Cell[354937, 8838, 7524, 191, 70, "Code",ExpressionUUID->"865b5b1f-37b0-4e4e-8dfa-ebba8e10710a"],
Cell[362464, 9031, 7959, 201, 70, "Code",ExpressionUUID->"e7dd3262-3633-40ea-b9ac-f45fc3da67e2"],
Cell[370426, 9234, 9432, 258, 70, "Code",ExpressionUUID->"02e8ac9f-c7db-491e-bdeb-f2f8f64c2031"],
Cell[379861, 9494, 3743, 95, 70, "Code",ExpressionUUID->"04133719-4496-42b2-889c-91bdcb6b69ba"],
Cell[383607, 9591, 6989, 174, 70, "Code",ExpressionUUID->"d6363f04-7dcb-4134-a1a5-c3d7d63c58a5"],
Cell[390599, 9767, 1317, 35, 70, "Code",ExpressionUUID->"4d20a9f6-e322-4725-ba13-221e33d3a22d"],
Cell[391919, 9804, 1444, 37, 70, "Code",ExpressionUUID->"27789aa2-55f4-4abc-9996-735c915cab5c"],
Cell[393366, 9843, 5829, 139, 70, "Code",ExpressionUUID->"9f5e7c4f-2c71-426f-bb14-a58e1106256f"],
Cell[399198, 9984, 951, 24, 70, "Code",ExpressionUUID->"7547be3b-021c-442a-8f3a-4205493f9bba"],
Cell[400152, 10010, 3723, 96, 70, "Code",ExpressionUUID->"75ad3fec-674d-4a29-a2c1-1314b5f7e4b4"],
Cell[403878, 10108, 1315, 34, 70, "Code",ExpressionUUID->"bb86f83a-5ea9-47ca-b7bb-e52ef9ee8b7b"],
Cell[405196, 10144, 1909, 52, 70, "Code",ExpressionUUID->"fc12077c-b430-4ad9-a814-6c6abc27aa2a"],
Cell[407108, 10198, 1309, 34, 70, "Code",ExpressionUUID->"e4fff97f-d99c-4143-9903-23ee051e4d38"],
Cell[408420, 10234, 1315, 34, 70, "Code",ExpressionUUID->"65774ee0-eee1-4068-a9d5-9a633eff6dc3"],
Cell[409738, 10270, 4813, 127, 70, "Code",ExpressionUUID->"597de0b0-37cb-4782-97fe-152769c8b1fa"],
Cell[414554, 10399, 7161, 193, 70, "Code",ExpressionUUID->"d3207580-6b8c-4294-a124-568a8ac1250b"],
Cell[421718, 10594, 9871, 240, 70, "Code",ExpressionUUID->"854d70f7-452d-43e3-8ccf-0f25fb309c12"],
Cell[431592, 10836, 6265, 154, 70, "Code",ExpressionUUID->"75127c2d-3e66-40ec-aa3e-20c864b3b111"],
Cell[437860, 10992, 2719, 75, 70, "Code",ExpressionUUID->"346395a0-8bb6-4ea4-9866-7e27e5523c1f"],
Cell[440582, 11069, 358, 8, 70, "Code",ExpressionUUID->"b6b28536-1170-4817-9d72-da27c186a0c2"],
Cell[440943, 11079, 5321, 125, 70, "Code",ExpressionUUID->"4282a7b3-10a0-487d-8aed-7e1635c21095"],
Cell[446267, 11206, 12098, 293, 70, "Code",ExpressionUUID->"e0c46000-ee87-4bf2-990f-48fe52c9760b"],
Cell[458368, 11501, 10016, 254, 70, "Code",ExpressionUUID->"ec18958b-b677-40da-9e7f-2f031e359cb4"],
Cell[468387, 11757, 4865, 128, 70, "Code",ExpressionUUID->"35c532e2-f47c-477a-8766-1e0fb335d851"],
Cell[473255, 11887, 14093, 362, 70, "Code",ExpressionUUID->"2bbe6506-c9a9-43bd-bdcf-820c3ec0d5a4"],
Cell[487351, 12251, 364, 8, 70, "Code",ExpressionUUID->"a9fab496-005a-4e7c-998a-f9e50ae19049"],
Cell[487718, 12261, 4637, 106, 70, "Code",ExpressionUUID->"f7815f80-92c9-44f7-ba5a-a29ec1839fd8"],
Cell[492358, 12369, 4811, 115, 70, "Code",ExpressionUUID->"72d56535-78d4-429b-a336-a0fab0a550d6"],
Cell[497172, 12486, 5756, 140, 70, "Code",ExpressionUUID->"e0906f39-0066-4cb0-b0e4-5eaa23acc4c0"],
Cell[502931, 12628, 227, 4, 70, "Code",ExpressionUUID->"add5a367-af53-4cc4-943c-66d9f9f50c7f"],
Cell[503161, 12634, 14503, 357, 70, "Code",ExpressionUUID->"9654015c-70ec-49cc-bdbb-dbcc6631f266"],
Cell[517667, 12993, 5165, 133, 70, "Code",ExpressionUUID->"088826e7-ff58-4199-bb0e-8c63f0ce53a0"],
Cell[522835, 13128, 4673, 116, 70, "Code",ExpressionUUID->"1a47ad92-50d4-4127-a246-80eebe1038f7"],
Cell[527511, 13246, 8061, 202, 70, "Code",ExpressionUUID->"1d9f7c98-3a3c-4bc6-91f9-5dffba516327"],
Cell[535575, 13450, 9115, 242, 70, "Code",ExpressionUUID->"1ce64c3a-eb55-4170-b5c2-230faa946df7"],
Cell[544693, 13694, 5210, 126, 70, "Code",ExpressionUUID->"7c7897dd-5bdd-4df0-9ad2-b89e72b36dd6"],
Cell[549906, 13822, 1714, 45, 70, "Code",ExpressionUUID->"912a5022-1ee6-4f9a-bf50-b130a7763383"],
Cell[551623, 13869, 5654, 134, 70, "Code",ExpressionUUID->"e40c8f95-af4e-448f-b4a4-a31f74ca35f0"],
Cell[557280, 14005, 5773, 126, 70, "Code",ExpressionUUID->"5079aeab-e885-4614-8033-4160713c7e1b"],
Cell[563056, 14133, 4837, 112, 70, "Code",ExpressionUUID->"f56c7217-cf9c-4ac3-b335-6ad103057b5e"],
Cell[567896, 14247, 3074, 74, 70, "Code",ExpressionUUID->"621c26ae-e7b7-484b-aca0-e9e0747f6277"],
Cell[570973, 14323, 14543, 368, 70, "Code",ExpressionUUID->"18748597-c8c3-4bf5-8932-0b74667cf7a9"],
Cell[585519, 14693, 224, 5, 70, "Code",ExpressionUUID->"17ee3079-34c3-4bb3-9d51-6c9a5af63172"],
Cell[585746, 14700, 2961, 72, 70, "Code",ExpressionUUID->"ab08505e-7edf-4c79-8ede-ecf6d90833fe"],
Cell[588710, 14774, 1954, 50, 70, "Code",ExpressionUUID->"828efa07-d1b8-4042-a5bf-078e6a342c9b"],
Cell[590667, 14826, 1815, 47, 70, "Code",ExpressionUUID->"be122f5a-8b9a-409c-a18a-ea58486ae2d5"],
Cell[592485, 14875, 1773, 51, 70, "Code",ExpressionUUID->"683f9a02-b6e5-4ebd-8f8c-23a9b0afaf9f"],
Cell[594261, 14928, 2964, 87, 70, "Code",ExpressionUUID->"7fd0e0b6-cc80-4009-90ee-bc46077e28af"],
Cell[597228, 15017, 7746, 181, 70, "Code",ExpressionUUID->"a0139972-5661-44f6-97b4-3055fd955056"],
Cell[604977, 15200, 23979, 579, 70, "Code",ExpressionUUID->"81ccedda-e6b1-4344-8c95-71d3e076c051"],
Cell[628959, 15781, 434, 11, 70, "Code",ExpressionUUID->"7bde080f-dc88-42d4-a0ec-5f38f4aa7e9d"],
Cell[629396, 15794, 1705, 46, 70, "Code",ExpressionUUID->"6a8ba6a6-2f8c-40d2-a152-5efb910c62cd"],
Cell[631104, 15842, 3002, 78, 70, "Code",ExpressionUUID->"51b655ff-b7d4-4727-a745-ec4c980e0e5e"],
Cell[634109, 15922, 5662, 144, 70, "Code",ExpressionUUID->"a1c69bbf-1a76-43c6-97d6-426b59aa5142"],
Cell[639774, 16068, 2316, 62, 70, "Code",ExpressionUUID->"45600b05-577b-4da2-b712-5c5e2834dd17"],
Cell[642093, 16132, 4985, 118, 70, "Code",ExpressionUUID->"3f7cec5b-f779-434e-ad47-012d01f88051"],
Cell[647081, 16252, 2171, 52, 70, "Code",ExpressionUUID->"5947cb3b-04e6-49d2-b3fb-f0af7234f0e4"],
Cell[649255, 16306, 264, 5, 70, "Code",ExpressionUUID->"301c66d1-4916-4b3d-835e-b607c7a6bd27"],
Cell[649522, 16313, 528, 13, 70, "Code",ExpressionUUID->"e9445ad6-ec0c-4c34-a3c1-d87f20a112f0"],
Cell[650053, 16328, 3106, 94, 70, "Code",ExpressionUUID->"91b55c2c-472a-4e45-8867-ea1ead671c0a"],
Cell[653162, 16424, 3181, 83, 70, "Code",ExpressionUUID->"c1c17fa7-89be-40a2-b294-103ffe73a5cd"],
Cell[656346, 16509, 751, 21, 70, "Code",ExpressionUUID->"11b7ed92-5966-4cab-be3b-9bb66d7f45be"],
Cell[657100, 16532, 2945, 75, 70, "Code",ExpressionUUID->"7666034b-e20c-4a3a-a3e3-2478bc0da448"],
Cell[660048, 16609, 713, 19, 70, "Code",ExpressionUUID->"5c6db5a6-2ddf-43db-aeec-72faf1be0b86"],
Cell[660764, 16630, 4872, 138, 70, "Code",ExpressionUUID->"98c92b9e-5228-474e-b001-2a8c289b8904"],
Cell[665639, 16770, 3105, 84, 70, "Code",ExpressionUUID->"9b61477f-8bea-49fa-a2ab-de548a2f839d"],
Cell[668747, 16856, 3388, 89, 70, "Code",ExpressionUUID->"de073201-7f03-408b-bef2-78626cecec10"],
Cell[672138, 16947, 8340, 211, 70, "Code",ExpressionUUID->"b4d958cf-2e22-40e0-ae9e-e2d448a74637"],
Cell[680481, 17160, 4692, 124, 70, "Code",ExpressionUUID->"b87fe9d4-fa00-4584-96ce-bcd9243777c8"],
Cell[685176, 17286, 1215, 34, 70, "Code",ExpressionUUID->"cebea53b-91bc-4d6f-9833-039f91be633b"],
Cell[686394, 17322, 2049, 59, 70, "Code",ExpressionUUID->"56349e60-723a-4be4-a615-14d9e20759ac"],
Cell[688446, 17383, 8671, 218, 70, "Code",ExpressionUUID->"e4b8f2b4-e00b-4bed-ab96-ed7da3bb1ac7"],
Cell[697120, 17603, 15762, 351, 70, "Code",ExpressionUUID->"a08bd211-07d7-411e-abfd-6f0fdfdcd1fe"],
Cell[712885, 17956, 3364, 78, 70, "Code",ExpressionUUID->"d6a58d8a-8336-4e24-8e02-1fdae3ad644a"],
Cell[716252, 18036, 3558, 80, 70, "Code",ExpressionUUID->"734f2e95-b2ec-4a82-92d6-f28d30fc992b"],
Cell[719813, 18118, 13734, 314, 70, "Code",ExpressionUUID->"5d16816f-5d60-4770-beb3-dc5cac83f374"],
Cell[733550, 18434, 7964, 200, 70, "Code",ExpressionUUID->"bfa3364d-db41-4b4b-a45b-2d70abe61595"],
Cell[741517, 18636, 5687, 147, 70, "Code",ExpressionUUID->"e52858b1-4eb3-4bc3-af61-6d68af24f9ce"],
Cell[747207, 18785, 9799, 235, 70, "Code",ExpressionUUID->"91e579cc-f3f5-483c-8a41-38b07943000b"],
Cell[757009, 19022, 5244, 123, 70, "Code",ExpressionUUID->"7abbc4c0-14f5-4786-b039-838d11f2b51a"],
Cell[762256, 19147, 278, 6, 70, "Code",ExpressionUUID->"b195da85-acf3-4c71-9a2c-ad2f25bc878b"],
Cell[762537, 19155, 2749, 64, 70, "Code",ExpressionUUID->"a4b4b848-c033-4d61-9fc3-8986f37b9337"],
Cell[765289, 19221, 4389, 104, 70, "Code",ExpressionUUID->"3afff4e4-06c1-4659-a3b6-13557a0a7224"],
Cell[769681, 19327, 13711, 320, 70, "Code",ExpressionUUID->"3220cb03-bf1b-40ee-b78c-edff38c5e920"],
Cell[783395, 19649, 13580, 317, 70, "Code",ExpressionUUID->"d41d805f-9896-49df-8a11-e83ae85c754a"],
Cell[796978, 19968, 5842, 136, 70, "Code",ExpressionUUID->"45911f9e-1fff-4a18-9247-cdd0c92a1a38"],
Cell[802823, 20106, 6188, 146, 70, "Code",ExpressionUUID->"fa1d7963-f332-4c8e-bbe7-f6c82d91d96e"],
Cell[809014, 20254, 4953, 116, 70, "Code",ExpressionUUID->"d07ef2ee-37ce-41f4-b3db-dfecb4b341b0"],
Cell[813970, 20372, 11141, 290, 70, "Code",ExpressionUUID->"a3b75251-821e-4a22-8a97-67bd6fa107bb"],
Cell[825114, 20664, 3617, 85, 70, "Code",ExpressionUUID->"78ffea1e-0a02-4df3-9ae5-ab5534afad96"],
Cell[828734, 20751, 3629, 86, 70, "Code",ExpressionUUID->"613d2358-f778-4849-a942-3056d77d64ac"],
Cell[832366, 20839, 8715, 215, 70, "Code",ExpressionUUID->"9662f492-8e51-47cd-9b5d-3067107cc040"],
Cell[841084, 21056, 8661, 218, 70, "Code",ExpressionUUID->"9767252f-a4e0-46dc-9956-58a73a3b660a"],
Cell[849748, 21276, 6832, 187, 70, "Code",ExpressionUUID->"21f79d75-4d1a-41e1-9351-29eceb48f21a"],
Cell[856583, 21465, 693, 19, 70, "Code",ExpressionUUID->"4dfa4641-6ffd-49d3-b212-63422a7f9694"],
Cell[857279, 21486, 5079, 133, 70, "Code",ExpressionUUID->"1089185d-99e0-4f80-a026-5e9b26f91f81"],
Cell[862361, 21621, 6415, 164, 70, "Code",ExpressionUUID->"e940376b-3ce4-4d8a-9cea-70a687d8dc70"],
Cell[868779, 21787, 3152, 77, 70, "Code",ExpressionUUID->"01a3cd28-6d05-4685-aede-5d9968725afc"],
Cell[871934, 21866, 2966, 76, 70, "Code",ExpressionUUID->"09bb3eaf-fdf7-4edd-a7f6-ef48f03c9569"],
Cell[874903, 21944, 9218, 221, 70, "Code",ExpressionUUID->"611a0466-7495-4ef6-b6ce-7ba0464f9a6b"],
Cell[884124, 22167, 6302, 160, 70, "Code",ExpressionUUID->"6e14daef-9442-4661-b33c-b32c057076ec"],
Cell[890429, 22329, 10173, 249, 70, "Code",ExpressionUUID->"43a36a01-0351-446f-a347-f1fdb35dde2b"],
Cell[900605, 22580, 1081, 27, 70, "Code",ExpressionUUID->"d546c0b0-5c00-497c-9781-a544c42b1196"],
Cell[901689, 22609, 3533, 91, 70, "Code",ExpressionUUID->"2cc2bb34-d2db-4c6a-a88a-f6afeede398f"],
Cell[905225, 22702, 17200, 431, 70, "Code",ExpressionUUID->"2d35a7aa-2061-4ebc-91dc-10d7c1a94b43"],
Cell[922428, 23135, 5113, 129, 70, "Code",ExpressionUUID->"15feae92-c734-46b3-9af6-6b936aa7d993"],
Cell[927544, 23266, 6278, 163, 70, "Code",ExpressionUUID->"e6ad8f9d-e998-4be5-8e8c-0dea47e3e83b"],
Cell[933825, 23431, 17176, 430, 70, "Code",ExpressionUUID->"2e765a17-43ad-423c-b5ff-d052f565aea3"],
Cell[951004, 23863, 5963, 154, 70, "Code",ExpressionUUID->"92c1dd61-3e5c-44e2-b667-c16bfbad77ef"],
Cell[956970, 24019, 2919, 70, 70, "Code",ExpressionUUID->"b7b550b7-7113-4e84-83b7-4c99279e5434"],
Cell[959892, 24091, 20405, 508, 70, "Code",ExpressionUUID->"5053c693-c10d-438d-939b-696cb115aa4c"],
Cell[980300, 24601, 374, 7, 70, "Code",ExpressionUUID->"721d06fb-ec94-4f80-8ce3-b74f843ffbad"],
Cell[980677, 24610, 2510, 73, 70, "Code",ExpressionUUID->"9f95f4e9-bf44-44e2-86cc-a9ed046ca1a9"],
Cell[983190, 24685, 8967, 227, 70, "Code",ExpressionUUID->"10f29875-e609-4880-b6e8-8617fc500cb7"],
Cell[992160, 24914, 199, 4, 70, "Code",ExpressionUUID->"652a4bcd-d490-4f96-99ff-8145423bca04"],
Cell[992362, 24920, 238, 5, 70, "Code",ExpressionUUID->"454a0734-1c17-4bf3-b1e3-1d984b5b08fc"],
Cell[992603, 24927, 682, 20, 70, "Code",ExpressionUUID->"ea077a60-a6e4-4ce7-9aed-5fd20329f223"],
Cell[993288, 24949, 4496, 143, 70, "Code",ExpressionUUID->"4f170821-35ec-4dae-951f-8d3383d43992"],
Cell[997787, 25094, 8214, 257, 70, "Code",ExpressionUUID->"62f30b2a-74fb-4a71-a8fa-7030db97f2e4"],
Cell[1006004, 25353, 1626, 52, 70, "Code",ExpressionUUID->"614ecac9-d6dc-48b1-b8de-cfcd692c379b"],
Cell[1007633, 25407, 559, 16, 70, "Code",ExpressionUUID->"a69c1279-cf38-4167-9252-2ad7805ec7e4"],
Cell[1008195, 25425, 4430, 128, 70, "Code",ExpressionUUID->"e33a6dde-92ee-4b10-b7a2-c6799e810f6e"],
Cell[1012628, 25555, 2319, 67, 70, "Code",ExpressionUUID->"d26162f0-bcd3-4aa6-a133-3c8fbdd44ce2"],
Cell[1014950, 25624, 236, 5, 70, "Code",ExpressionUUID->"f3ab445a-af11-4828-8885-115f3edd429b"],
Cell[1015189, 25631, 3816, 107, 70, "Code",ExpressionUUID->"005ac60c-9d4f-4a0a-91e3-0f37bec295e5"],
Cell[1019008, 25740, 1069, 31, 70, "Code",ExpressionUUID->"6d6816af-606a-46a5-be88-8789d477cdb0"],
Cell[1020080, 25773, 2658, 68, 70, "Code",ExpressionUUID->"30e62993-e562-4329-8604-4e9ec5efd2e1"],
Cell[1022741, 25843, 7854, 220, 70, "Code",ExpressionUUID->"e0c98fad-6847-4ee5-a0ff-8f9d7e5a2d75"],
Cell[1030598, 26065, 2939, 69, 70, "Code",ExpressionUUID->"6b8892a7-47ac-4cf6-bb7a-80bdbaf02b22"],
Cell[1033540, 26136, 2361, 63, 70, "Code",ExpressionUUID->"4d988ef0-a5de-4f42-8da0-b59d9bf3f8d9"],
Cell[1035904, 26201, 2071, 54, 70, "Code",ExpressionUUID->"ba8192a6-7862-4916-bc8b-bec7aa27af1a"],
Cell[1037978, 26257, 4588, 127, 70, "Code",ExpressionUUID->"1fc972da-87b8-40b7-98e6-b39ae53c82b9"],
Cell[1042569, 26386, 6611, 187, 70, "Code",ExpressionUUID->"aad0a816-1833-41d1-a002-d770ce80ddbd"],
Cell[1049183, 26575, 3298, 80, 70, "Code",ExpressionUUID->"0183e3b1-dadd-4742-a3d0-be9035643a08"],
Cell[1052484, 26657, 2205, 58, 70, "Code",ExpressionUUID->"6f63fb99-c110-4c46-88de-ffa0ba936787"],
Cell[1054692, 26717, 1406, 37, 70, "Code",ExpressionUUID->"77c17640-65f6-4d71-8e5c-0376228b5c14"],
Cell[1056101, 26756, 982, 25, 70, "Code",ExpressionUUID->"f5c78394-9127-4b7f-9274-b96ac0fc07b0"],
Cell[1057086, 26783, 2737, 68, 70, "Code",ExpressionUUID->"e226b795-960b-4aaf-8a46-c4924173ad71"],
Cell[1059826, 26853, 4710, 125, 70, "Code",ExpressionUUID->"97319a41-919e-4733-b6a0-dd7170e3d096"],
Cell[1064539, 26980, 7482, 197, 70, "Code",ExpressionUUID->"fcc72262-917c-403d-bbb2-2e316c0887c4"],
Cell[1072024, 27179, 2847, 73, 70, "Code",ExpressionUUID->"10158693-5bb1-45db-9ba2-21b27c800570"],
Cell[1074874, 27254, 3143, 90, 70, "Code",ExpressionUUID->"37782e73-a1bd-4f81-ba50-bf306622d599"],
Cell[1078020, 27346, 2299, 61, 70, "Code",ExpressionUUID->"56376c5f-26d6-410c-8c35-a30665a38ee9"],
Cell[1080322, 27409, 5394, 132, 70, "Code",ExpressionUUID->"ddc772ad-fa15-4e19-94ab-02fe991375d7"],
Cell[1085719, 27543, 2217, 61, 70, "Code",ExpressionUUID->"0740dcc4-5bc8-413c-8f89-f9f0a4c759a9"],
Cell[1087939, 27606, 768, 21, 70, "Code",ExpressionUUID->"54c76174-38ce-44bc-bac4-bf26e2286ed3"]
}
]
*)

(* End of internal cache information *)

